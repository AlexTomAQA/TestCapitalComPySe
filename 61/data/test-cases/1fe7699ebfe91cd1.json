{"uid":"1fe7699ebfe91cd1","name":"TC_01.05.00_003 | Testing button [Buy]. Bid:01.05.00_003-en.ae.Auth","fullName":"tests.US_01_Markets.US_01-05_Commodities.US_01-05-00_Commodities_test.TestCommodities#test_003_buy_trading_instrument","historyId":"2d794dc304333dde0c1388e947bbbc3e","time":{"start":1710924858992,"stop":1710924863375,"duration":4383},"description":"\n        Check: button [Buy] in Widget 'Trading instrument'\n        Language: All License: All (except FCA) Role: All.\n        ","descriptionHtml":"<pre><code>    Check: button [Buy] in Widget 'Trading instrument'\n    Language: All License: All (except FCA) Role: All.\n</code></pre>\n","status":"broken","statusMessage":"TypeError: selenium.webdriver.remote.webdriver.WebDriver.find_element() argument after * must be an iterable, not NoneType","statusTrace":"self = <US_01-05-00_Commodities_test.TestCommodities object at 0x76191592e3c0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ec2dec09d875264f0850f418acd7eccb\")>\ncur_language = '', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_sort = 'Top fallers'\n\n    @allure.step(\"Start test of button [Buy] in Widget 'Trading instrument'\")\n    @pytest.mark.test_003\n    def test_003_buy_trading_instrument(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_sort):\n        \"\"\"\n        Check: button [Buy] in Widget 'Trading instrument'\n        Language: All License: All (except FCA) Role: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"01.05\", \"Markets > Menu item [Commodities]\",\n            \".00_003\", \"Testing button [Buy]\")\n    \n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n    \n        page_conditions = Conditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        page_menu = MenuSection(d, link)\n        page_menu.move_focus_to_markets_menu(d, cur_language, cur_country)\n        cur_page_url = page_menu.sub_menu_commodities_move_focus_click(d, cur_language)\n    \n        test_element = TableTradingInstrumentsBuyButton(d, cur_page_url, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_page_url, cur_sort)\n\ntests/US_01_Markets/US_01-05_Commodities/US_01-05-00_Commodities_test.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/TableTradingInstrumentsBuyButton.py:31: in full_test_with_tpi\n    item_list = self.arrange_(d, cur_item_link, cur_sort)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Elements.TableTradingInstrumentsBuyButton.TableTradingInstrumentsBuyButton object at 0x7619157ab470>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ec2dec09d875264f0850f418acd7eccb\")>\ncur_item_link = 'https://capital.com/live-commodity-prices'\ncur_sort = 'Top fallers'\n\n    def arrange_(self, d, cur_item_link, cur_sort):\n        global COUNT_OF_RUNS\n        print(f\"\\n{datetime.now()}   1. Arrange for Trading instrument and \\\"{cur_sort}\\\" cur_sort\")\n    \n        if not self.current_page_is(cur_item_link):\n            self.link = cur_item_link\n            self.open_page()\n    \n        print(f\"{datetime.now()}   IS TABLE_TRADING_INSTRUMENTS  present on the page? =>\")\n        table_list = self.driver.find_elements(*TableTradingInstrumentsLocators.TABLE_TRADING_INSTRUMENTS)\n        if len(table_list) == 0:\n            print(f\"{datetime.now()}   => TABLE_TRADING_INSTRUMENTS is NOT present on the page!\\n\")\n            pytest.fail(f\" Bug ? Checking element is not on this page\")\n    \n        print(f\"{datetime.now()}   => TABLE_TRADING_INSTRUMENTS is present on the page!\")\n    \n        print(f\"{datetime.now()}   IS FIELD_DROPDOWN_SORT present in the Live prices table? =>\")\n        field_dropdown_list = self.driver.find_elements(*FieldDropdownMarketsLocator.FIELD_DROPDOWN_MARKETS)\n        if len(field_dropdown_list) == 0:\n            pytest.fail(\"Bug # ? FIELD_DROPDOWN_SORT is not present in Live table!\")\n    \n        print(f\"{datetime.now()}   =>  FIELD_DROPDOWN_SORT is present in the Live prices table!\")\n    \n        print(f\"{datetime.now()}   Start scroll and click FIELD_DROPDOWN_SORT =>\")\n        self.driver.execute_script(\n            'return arguments[0].scrollIntoView({block: \"center\", inline: \"nearest\"});',\n            field_dropdown_list[0]\n        )\n        field_dropdown_list[0].click()\n    \n        match cur_sort:\n            case 'most_traded':\n                self.item_sort = ItemSortDropdownLocators.ITEM_DROPDOWN_SORT_MOST_TRADED   # элемент в списке\n                self.sort_locator = FieldDropdownMarketsLocator.FIELD_DROPDOWN_MOST_TRADED  # элемент сортировки\n    \n            case 'top_risers':\n                self.item_sort = ItemSortDropdownLocators.ITEM_DROPDOWN_SORT_TOP_RISERS\n                self.sort_locator = FieldDropdownMarketsLocator.FIELD_DROPDOWN_TOP_RISERS\n    \n            case 'top_fallers':\n                self.item_sort = ItemSortDropdownLocators.ITEM_DROPDOWN_SORT_TOP_FALLERS\n                self.sort_locator = FieldDropdownMarketsLocator.FIELD_DROPDOWN_TOP_FALLERS\n    \n            case 'most_volatile':\n                self.item_sort = ItemSortDropdownLocators.ITEM_DROPDOWN_SORT_MOST_VOLATILE\n                self.sort_locator = FieldDropdownMarketsLocator.FIELD_DROPDOWN_MOST_VOLATILE\n    \n        self.buy_locator = TableTradingInstrumentsLocators.BUTTON_BUY_TRADING_INSTRUMENT  # кнопка buy\n        self.item = TableTradingInstrumentsLocators.ITEM_TRADING_INSTRUMENT  # трейдинговый инструмент\n    \n        print(f\"{datetime.now()}   Is item_sort_list visible on the FIELD_DROPDOWN_SORT ? =>\")\n    \n        item_sort_list = self.element_is_visible(ItemSortDropdownLocators.ALL_ITEM_DROPDOWN_SORT)\n        self.driver.execute_script(\n            'return arguments[0].scrollIntoView({block: \"center\", inline: \"nearest\"});',\n            item_sort_list\n        )\n    \n        if not item_sort_list:\n            pytest.fail(\"Bug ? item_sort_list is not visible\")\n        print(f\"{datetime.now()}   => item_sort_list is visible on the FIELD_DROPDOWN_SORT!\")\n    \n        print(f\"{datetime.now()}   Is cur_sort \\\"{cur_sort}\\\" present in item_sort_list? =>\")\n>       if not self.driver.find_element(*self.item_sort):\nE       TypeError: selenium.webdriver.remote.webdriver.WebDriver.find_element() argument after * must be an iterable, not NoneType\n\npages/Elements/TableTradingInstrumentsBuyButton.py:114: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1710924804391,"stop":1710924804808,"duration":417},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1710924804808,"stop":1710924804808,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1710924804808,"stop":1710924804808,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1710924804809,"stop":1710924804809,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1710924804809,"stop":1710924804809,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1710924804809,"stop":1710924804809,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1710924804809,"stop":1710924804809,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false},{"name":"cur_sort","time":{"start":1710924858991,"stop":1710924858991,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: button [Buy] in Widget 'Trading instrument'\n        Language: All License: All (except FCA) Role: All.\n        ","status":"broken","statusMessage":"TypeError: selenium.webdriver.remote.webdriver.WebDriver.find_element() argument after * must be an iterable, not NoneType","statusTrace":"self = <US_01-05-00_Commodities_test.TestCommodities object at 0x76191592e3c0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ec2dec09d875264f0850f418acd7eccb\")>\ncur_language = '', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_sort = 'Top fallers'\n\n    @allure.step(\"Start test of button [Buy] in Widget 'Trading instrument'\")\n    @pytest.mark.test_003\n    def test_003_buy_trading_instrument(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_sort):\n        \"\"\"\n        Check: button [Buy] in Widget 'Trading instrument'\n        Language: All License: All (except FCA) Role: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"01.05\", \"Markets > Menu item [Commodities]\",\n            \".00_003\", \"Testing button [Buy]\")\n    \n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n    \n        page_conditions = Conditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        page_menu = MenuSection(d, link)\n        page_menu.move_focus_to_markets_menu(d, cur_language, cur_country)\n        cur_page_url = page_menu.sub_menu_commodities_move_focus_click(d, cur_language)\n    \n        test_element = TableTradingInstrumentsBuyButton(d, cur_page_url, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_page_url, cur_sort)\n\ntests/US_01_Markets/US_01-05_Commodities/US_01-05-00_Commodities_test.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/TableTradingInstrumentsBuyButton.py:31: in full_test_with_tpi\n    item_list = self.arrange_(d, cur_item_link, cur_sort)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Elements.TableTradingInstrumentsBuyButton.TableTradingInstrumentsBuyButton object at 0x7619157ab470>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ec2dec09d875264f0850f418acd7eccb\")>\ncur_item_link = 'https://capital.com/live-commodity-prices'\ncur_sort = 'Top fallers'\n\n    def arrange_(self, d, cur_item_link, cur_sort):\n        global COUNT_OF_RUNS\n        print(f\"\\n{datetime.now()}   1. Arrange for Trading instrument and \\\"{cur_sort}\\\" cur_sort\")\n    \n        if not self.current_page_is(cur_item_link):\n            self.link = cur_item_link\n            self.open_page()\n    \n        print(f\"{datetime.now()}   IS TABLE_TRADING_INSTRUMENTS  present on the page? =>\")\n        table_list = self.driver.find_elements(*TableTradingInstrumentsLocators.TABLE_TRADING_INSTRUMENTS)\n        if len(table_list) == 0:\n            print(f\"{datetime.now()}   => TABLE_TRADING_INSTRUMENTS is NOT present on the page!\\n\")\n            pytest.fail(f\" Bug ? Checking element is not on this page\")\n    \n        print(f\"{datetime.now()}   => TABLE_TRADING_INSTRUMENTS is present on the page!\")\n    \n        print(f\"{datetime.now()}   IS FIELD_DROPDOWN_SORT present in the Live prices table? =>\")\n        field_dropdown_list = self.driver.find_elements(*FieldDropdownMarketsLocator.FIELD_DROPDOWN_MARKETS)\n        if len(field_dropdown_list) == 0:\n            pytest.fail(\"Bug # ? FIELD_DROPDOWN_SORT is not present in Live table!\")\n    \n        print(f\"{datetime.now()}   =>  FIELD_DROPDOWN_SORT is present in the Live prices table!\")\n    \n        print(f\"{datetime.now()}   Start scroll and click FIELD_DROPDOWN_SORT =>\")\n        self.driver.execute_script(\n            'return arguments[0].scrollIntoView({block: \"center\", inline: \"nearest\"});',\n            field_dropdown_list[0]\n        )\n        field_dropdown_list[0].click()\n    \n        match cur_sort:\n            case 'most_traded':\n                self.item_sort = ItemSortDropdownLocators.ITEM_DROPDOWN_SORT_MOST_TRADED   # элемент в списке\n                self.sort_locator = FieldDropdownMarketsLocator.FIELD_DROPDOWN_MOST_TRADED  # элемент сортировки\n    \n            case 'top_risers':\n                self.item_sort = ItemSortDropdownLocators.ITEM_DROPDOWN_SORT_TOP_RISERS\n                self.sort_locator = FieldDropdownMarketsLocator.FIELD_DROPDOWN_TOP_RISERS\n    \n            case 'top_fallers':\n                self.item_sort = ItemSortDropdownLocators.ITEM_DROPDOWN_SORT_TOP_FALLERS\n                self.sort_locator = FieldDropdownMarketsLocator.FIELD_DROPDOWN_TOP_FALLERS\n    \n            case 'most_volatile':\n                self.item_sort = ItemSortDropdownLocators.ITEM_DROPDOWN_SORT_MOST_VOLATILE\n                self.sort_locator = FieldDropdownMarketsLocator.FIELD_DROPDOWN_MOST_VOLATILE\n    \n        self.buy_locator = TableTradingInstrumentsLocators.BUTTON_BUY_TRADING_INSTRUMENT  # кнопка buy\n        self.item = TableTradingInstrumentsLocators.ITEM_TRADING_INSTRUMENT  # трейдинговый инструмент\n    \n        print(f\"{datetime.now()}   Is item_sort_list visible on the FIELD_DROPDOWN_SORT ? =>\")\n    \n        item_sort_list = self.element_is_visible(ItemSortDropdownLocators.ALL_ITEM_DROPDOWN_SORT)\n        self.driver.execute_script(\n            'return arguments[0].scrollIntoView({block: \"center\", inline: \"nearest\"});',\n            item_sort_list\n        )\n    \n        if not item_sort_list:\n            pytest.fail(\"Bug ? item_sort_list is not visible\")\n        print(f\"{datetime.now()}   => item_sort_list is visible on the FIELD_DROPDOWN_SORT!\")\n    \n        print(f\"{datetime.now()}   Is cur_sort \\\"{cur_sort}\\\" present in item_sort_list? =>\")\n>       if not self.driver.find_element(*self.item_sort):\nE       TypeError: selenium.webdriver.remote.webdriver.WebDriver.find_element() argument after * must be an iterable, not NoneType\n\npages/Elements/TableTradingInstrumentsBuyButton.py:114: TypeError","steps":[{"name":"Start test of button [Buy] in Widget 'Trading instrument'","time":{"start":1710924858992,"stop":1710924863374,"duration":4382},"status":"broken","statusMessage":"TypeError: selenium.webdriver.remote.webdriver.WebDriver.find_element() argument after * must be an iterable, not NoneType\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_01_Markets/US_01-05_Commodities/US_01-05-00_Commodities_test.py\", line 101, in test_003_buy_trading_instrument\n    test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_page_url, cur_sort)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/TableTradingInstrumentsBuyButton.py\", line 31, in full_test_with_tpi\n    item_list = self.arrange_(d, cur_item_link, cur_sort)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/TableTradingInstrumentsBuyButton.py\", line 114, in arrange_\n    if not self.driver.find_element(*self.item_sort):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[{"name":"2024-03-20 08:53:24.364905   Start Building dynamic arguments for allure report generation","time":{"start":1710924858992,"stop":1710924858997,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ec2dec09d875264f0850f418acd7eccb\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"us","value":"'01.05'"},{"name":"desc_us","value":"'Markets > Menu item [Commodities]'"},{"name":"num_tc","value":"'.00_003'"},{"name":"desc_tc","value":"'Testing button [Buy]'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentStep":false},{"name":"2024-03-20 08:53:24.369155   Set preconditions","time":{"start":1710924858997,"stop":1710924860243,"duration":1246},"status":"passed","steps":[{"name":"2024-03-20 08:53:24.367984   Start Checking Captcha","time":{"start":1710924859204,"stop":1710924860240,"duration":1036},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ec2dec09d875264f0850f418acd7eccb\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"stepsCount":1,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentStep":false},{"name":"2024-03-20 08:53:24.366622.   Focus moved to 'Markets' menu","time":{"start":1710924860243,"stop":1710924862045,"duration":1802},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ec2dec09d875264f0850f418acd7eccb\")>"},{"name":"test_language","value":"''"},{"name":"test_country","value":"'ae'"}],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentStep":false},{"name":"2024-03-20 08:53:24.367043. Move focus to 'Commodities' submenu and click.","time":{"start":1710924862045,"stop":1710924863318,"duration":1273},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ec2dec09d875264f0850f418acd7eccb\")>"},{"name":"test_language","value":"''"}],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ec2dec09d875264f0850f418acd7eccb\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_sort","value":"'Top fallers'"}],"stepsCount":5,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentStep":false}],"attachments":[{"uid":"f03704c04f123be0","name":"Screenshot","source":"f03704c04f123be0.png","type":"image/png","size":124788},{"uid":"64793e4a9b558ef6","name":"stdout","source":"64793e4a9b558ef6.txt","type":"text/plain","size":2308}],"parameters":[],"stepsCount":6,"attachmentsCount":2,"hasContent":true,"shouldDisplayMessage":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1710925029114,"stop":1710925029237,"duration":123},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_01.05 | Markets > Menu item [Commodities]"},{"name":"feature","value":"Language: en"},{"name":"story","value":"Country: ae / Role: Auth"},{"name":"tag","value":"test_003"},{"name":"tag","value":"us_01_05"},{"name":"parentSuite","value":"tests.US_01_Markets.US_01-05_Commodities"},{"name":"suite","value":"US_01-05-00_Commodities_test"},{"name":"subSuite","value":"TestCommodities"},{"name":"host","value":"fv-az1427-857"},{"name":"thread","value":"8448-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_01_Markets.US_01-05_Commodities.US_01-05-00_Commodities_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_sort","value":"'Top fallers'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["us_01_05","test_003"]},"source":"1fe7699ebfe91cd1.json","parameterValues":["'ae'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'Auth'","'Top fallers'","'Chrome'"]}