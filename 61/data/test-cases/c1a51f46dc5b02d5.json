{"uid":"c1a51f46dc5b02d5","name":"TC_01.03.00_002 | Testing button [Sell]. Bid:01.03.00_002-en.ae.NoAuth","fullName":"tests.US_01_Markets.US_01-03_Forex.US_01-03-00_forex_tests.TestForex#test_002_sell_trading_instrument","historyId":"8b4437962a36c39368fc2c567addd40b","time":{"start":1710924293561,"stop":1710924302699,"duration":9138},"description":"\n        Check: button [Sell] in Widget 'Trading instrument'\n        Language: All License: All (except FCA) Role: All.\n        ","descriptionHtml":"<pre><code>    Check: button [Sell] in Widget 'Trading instrument'\n    Language: All License: All (except FCA) Role: All.\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=122.0.6261.111)\nStacktrace:\n#0 0x624959a05f33 <unknown>\n#1 0x6249596fdb37 <unknown>\n#2 0x624959749ec8 <unknown>\n#3 0x62495973dd27 <unknown>\n#4 0x62495976aeb2 <unknown>\n#5 0x62495973d6b8 <unknown>\n#6 0x62495976b07e <unknown>\n#7 0x624959789899 <unknown>\n#8 0x62495976ac53 <unknown>\n#9 0x62495973bdb3 <unknown>\n#10 0x62495973c77e <unknown>\n#11 0x6249599cb86b <unknown>\n#12 0x6249599cf885 <unknown>\n#13 0x6249599b9181 <unknown>\n#14 0x6249599d0412 <unknown>\n#15 0x62495999d25f <unknown>\n#16 0x6249599f4528 <unknown>\n#17 0x6249599f4723 <unknown>\n#18 0x624959a050e4 <unknown>\n#19 0x72ecd4094ac3 <unknown>","statusTrace":"self = <US_01-03-00_forex_tests.TestForex object at 0x7a4f99425460>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a8efdf7903781ce10054c7c8ca3f4b96\")>\ncur_language = '', cur_country = 'ae', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_sort = 'top_risers'\n\n    @allure.step(\"Start test_01.03_002 button [Sell] in Widget 'Trading instrument'\")\n    @pytest.mark.test_002\n    def test_002_sell_trading_instrument(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_sort):\n        \"\"\"\n        Check: button [Sell] in Widget 'Trading instrument'\n        Language: All License: All (except FCA) Role: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"01.03\", \"Markets > Menu item [Forex]\",\n            \".00_002\", \"Testing button [Sell]\")\n    \n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n    \n        page_conditions = Conditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        menu = MenuSection(d, link)\n        cur_item_link = menu.open_forex_markets_menu(d, cur_language, cur_country, link)\n    \n        test_element = TableTradingInstrumentsSellButton(d, cur_item_link, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link, cur_sort)\n\ntests/US_01_Markets/US_01-03_Forex/US_01-03-00_forex_tests.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/TableTradingInstrumentsSellButton.py:39: in full_test_with_tpi\n    num_item_list = self.arrange_(d, cur_item_link, cur_sort)\npages/Elements/TableTradingInstrumentsSellButton.py:78: in arrange_\n    dropdown_list[0].click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7a4f9940e450>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x6249599f4723 \\\\u003Cunknown>\\\\n#18 0x624959a050e4 \\\\u003Cunknown>\\\\n#19 0x72ecd4094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=122.0.6261.111)\nE       Stacktrace:\nE       #0 0x624959a05f33 <unknown>\nE       #1 0x6249596fdb37 <unknown>\nE       #2 0x624959749ec8 <unknown>\nE       #3 0x62495973dd27 <unknown>\nE       #4 0x62495976aeb2 <unknown>\nE       #5 0x62495973d6b8 <unknown>\nE       #6 0x62495976b07e <unknown>\nE       #7 0x624959789899 <unknown>\nE       #8 0x62495976ac53 <unknown>\nE       #9 0x62495973bdb3 <unknown>\nE       #10 0x62495973c77e <unknown>\nE       #11 0x6249599cb86b <unknown>\nE       #12 0x6249599cf885 <unknown>\nE       #13 0x6249599b9181 <unknown>\nE       #14 0x6249599d0412 <unknown>\nE       #15 0x62495999d25f <unknown>\nE       #16 0x6249599f4528 <unknown>\nE       #17 0x6249599f4723 <unknown>\nE       #18 0x624959a050e4 <unknown>\nE       #19 0x72ecd4094ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1710924120008,"stop":1710924120409,"duration":401},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1710924120409,"stop":1710924120409,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1710924120409,"stop":1710924120409,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1710924120409,"stop":1710924120409,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1710924120409,"stop":1710924120409,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1710924120409,"stop":1710924120409,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1710924246025,"stop":1710924246025,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false},{"name":"cur_sort","time":{"start":1710924293560,"stop":1710924293560,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: button [Sell] in Widget 'Trading instrument'\n        Language: All License: All (except FCA) Role: All.\n        ","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=122.0.6261.111)\nStacktrace:\n#0 0x624959a05f33 <unknown>\n#1 0x6249596fdb37 <unknown>\n#2 0x624959749ec8 <unknown>\n#3 0x62495973dd27 <unknown>\n#4 0x62495976aeb2 <unknown>\n#5 0x62495973d6b8 <unknown>\n#6 0x62495976b07e <unknown>\n#7 0x624959789899 <unknown>\n#8 0x62495976ac53 <unknown>\n#9 0x62495973bdb3 <unknown>\n#10 0x62495973c77e <unknown>\n#11 0x6249599cb86b <unknown>\n#12 0x6249599cf885 <unknown>\n#13 0x6249599b9181 <unknown>\n#14 0x6249599d0412 <unknown>\n#15 0x62495999d25f <unknown>\n#16 0x6249599f4528 <unknown>\n#17 0x6249599f4723 <unknown>\n#18 0x624959a050e4 <unknown>\n#19 0x72ecd4094ac3 <unknown>","statusTrace":"self = <US_01-03-00_forex_tests.TestForex object at 0x7a4f99425460>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a8efdf7903781ce10054c7c8ca3f4b96\")>\ncur_language = '', cur_country = 'ae', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_sort = 'top_risers'\n\n    @allure.step(\"Start test_01.03_002 button [Sell] in Widget 'Trading instrument'\")\n    @pytest.mark.test_002\n    def test_002_sell_trading_instrument(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_sort):\n        \"\"\"\n        Check: button [Sell] in Widget 'Trading instrument'\n        Language: All License: All (except FCA) Role: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"01.03\", \"Markets > Menu item [Forex]\",\n            \".00_002\", \"Testing button [Sell]\")\n    \n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n    \n        page_conditions = Conditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        menu = MenuSection(d, link)\n        cur_item_link = menu.open_forex_markets_menu(d, cur_language, cur_country, link)\n    \n        test_element = TableTradingInstrumentsSellButton(d, cur_item_link, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link, cur_sort)\n\ntests/US_01_Markets/US_01-03_Forex/US_01-03-00_forex_tests.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/TableTradingInstrumentsSellButton.py:39: in full_test_with_tpi\n    num_item_list = self.arrange_(d, cur_item_link, cur_sort)\npages/Elements/TableTradingInstrumentsSellButton.py:78: in arrange_\n    dropdown_list[0].click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7a4f9940e450>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x6249599f4723 \\\\u003Cunknown>\\\\n#18 0x624959a050e4 \\\\u003Cunknown>\\\\n#19 0x72ecd4094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=122.0.6261.111)\nE       Stacktrace:\nE       #0 0x624959a05f33 <unknown>\nE       #1 0x6249596fdb37 <unknown>\nE       #2 0x624959749ec8 <unknown>\nE       #3 0x62495973dd27 <unknown>\nE       #4 0x62495976aeb2 <unknown>\nE       #5 0x62495973d6b8 <unknown>\nE       #6 0x62495976b07e <unknown>\nE       #7 0x624959789899 <unknown>\nE       #8 0x62495976ac53 <unknown>\nE       #9 0x62495973bdb3 <unknown>\nE       #10 0x62495973c77e <unknown>\nE       #11 0x6249599cb86b <unknown>\nE       #12 0x6249599cf885 <unknown>\nE       #13 0x6249599b9181 <unknown>\nE       #14 0x6249599d0412 <unknown>\nE       #15 0x62495999d25f <unknown>\nE       #16 0x6249599f4528 <unknown>\nE       #17 0x6249599f4723 <unknown>\nE       #18 0x624959a050e4 <unknown>\nE       #19 0x72ecd4094ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","steps":[{"name":"Start test_01.03_002 button [Sell] in Widget 'Trading instrument'","time":{"start":1710924293561,"stop":1710924302698,"duration":9137},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=122.0.6261.111)\nStacktrace:\n#0 0x624959a05f33 <unknown>\n#1 0x6249596fdb37 <unknown>\n#2 0x624959749ec8 <unknown>\n#3 0x62495973dd27 <unknown>\n#4 0x62495976aeb2 <unknown>\n#5 0x62495973d6b8 <unknown>\n#6 0x62495976b07e <unknown>\n#7 0x624959789899 <unknown>\n#8 0x62495976ac53 <unknown>\n#9 0x62495973bdb3 <unknown>\n#10 0x62495973c77e <unknown>\n#11 0x6249599cb86b <unknown>\n#12 0x6249599cf885 <unknown>\n#13 0x6249599b9181 <unknown>\n#14 0x6249599d0412 <unknown>\n#15 0x62495999d25f <unknown>\n#16 0x6249599f4528 <unknown>\n#17 0x6249599f4723 <unknown>\n#18 0x624959a050e4 <unknown>\n#19 0x72ecd4094ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_01_Markets/US_01-03_Forex/US_01-03-00_forex_tests.py\", line 67, in test_002_sell_trading_instrument\n    test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link, cur_sort)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/TableTradingInstrumentsSellButton.py\", line 39, in full_test_with_tpi\n    num_item_list = self.arrange_(d, cur_item_link, cur_sort)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/TableTradingInstrumentsSellButton.py\", line 78, in arrange_\n    dropdown_list[0].click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"2024-03-20 08:41:59.986202   Start Building dynamic arguments for allure report generation","time":{"start":1710924293561,"stop":1710924293563,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a8efdf7903781ce10054c7c8ca3f4b96\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"us","value":"'01.03'"},{"name":"desc_us","value":"'Markets > Menu item [Forex]'"},{"name":"num_tc","value":"'.00_002'"},{"name":"desc_tc","value":"'Testing button [Sell]'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentStep":false},{"name":"2024-03-20 08:41:59.988155   Set preconditions","time":{"start":1710924293563,"stop":1710924298455,"duration":4892},"status":"passed","steps":[{"name":"2024-03-20 08:41:59.987100   Start Checking Captcha","time":{"start":1710924294631,"stop":1710924295669,"duration":1038},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false},{"name":"2024-03-20 08:41:59.848450.   Click 'Language and Country' menu section.","time":{"start":1710924295672,"stop":1710924296970,"duration":1298},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"test_language","value":"''"}],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentStep":false},{"name":"2024-03-20 08:41:59.848616   Set language","time":{"start":1710924296970,"stop":1710924298437,"duration":1467},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_language","value":"''"}],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a8efdf7903781ce10054c7c8ca3f4b96\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"stepsCount":3,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentStep":false},{"name":"Select \"Markets\" menu, \"Forex\" submenu","time":{"start":1710924298455,"stop":1710924301641,"duration":3186},"status":"passed","steps":[{"name":"2024-03-20 08:41:59.848479.   Focus moved to 'Markets' menu","time":{"start":1710924298461,"stop":1710924300251,"duration":1790},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a8efdf7903781ce10054c7c8ca3f4b96\")>"},{"name":"test_language","value":"''"},{"name":"test_country","value":"'ae'"}],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentStep":false},{"name":"2024-03-20 08:41:59.849411.   Click 'Forex' submenu.","time":{"start":1710924300252,"stop":1710924301635,"duration":1383},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a8efdf7903781ce10054c7c8ca3f4b96\")>"},{"name":"test_language","value":"''"}],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a8efdf7903781ce10054c7c8ca3f4b96\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"link","value":"'https://capital.com/'"}],"stepsCount":2,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentStep":false},{"name":"2024-03-20 08:41:59.985684   Start Full test [Sell] button on Table Widget Trading Instruments","time":{"start":1710924301641,"stop":1710924302698,"duration":1057},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=122.0.6261.111)\nStacktrace:\n#0 0x624959a05f33 <unknown>\n#1 0x6249596fdb37 <unknown>\n#2 0x624959749ec8 <unknown>\n#3 0x62495973dd27 <unknown>\n#4 0x62495976aeb2 <unknown>\n#5 0x62495973d6b8 <unknown>\n#6 0x62495976b07e <unknown>\n#7 0x624959789899 <unknown>\n#8 0x62495976ac53 <unknown>\n#9 0x62495973bdb3 <unknown>\n#10 0x62495973c77e <unknown>\n#11 0x6249599cb86b <unknown>\n#12 0x6249599cf885 <unknown>\n#13 0x6249599b9181 <unknown>\n#14 0x6249599d0412 <unknown>\n#15 0x62495999d25f <unknown>\n#16 0x6249599f4528 <unknown>\n#17 0x6249599f4723 <unknown>\n#18 0x624959a050e4 <unknown>\n#19 0x72ecd4094ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/TableTradingInstrumentsSellButton.py\", line 39, in full_test_with_tpi\n    num_item_list = self.arrange_(d, cur_item_link, cur_sort)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/TableTradingInstrumentsSellButton.py\", line 78, in arrange_\n    dropdown_list[0].click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a8efdf7903781ce10054c7c8ca3f4b96\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_item_link","value":"'https://capital.com/live-currency-prices'"},{"name":"cur_sort","value":"'top_risers'"}],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a8efdf7903781ce10054c7c8ca3f4b96\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_sort","value":"'top_risers'"}],"stepsCount":9,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentStep":false}],"attachments":[{"uid":"b1490ed27a24c3c0","name":"Screenshot","source":"b1490ed27a24c3c0.png","type":"image/png","size":80765},{"uid":"6450168776d87433","name":"stdout","source":"6450168776d87433.txt","type":"text/plain","size":2783}],"parameters":[],"stepsCount":10,"attachmentsCount":2,"hasContent":true,"shouldDisplayMessage":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1710924583362,"stop":1710924583503,"duration":141},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_01.03 | Markets > Menu item [Forex]"},{"name":"feature","value":"Language: en"},{"name":"story","value":"Country: ae / Role: NoAuth"},{"name":"tag","value":"test_002"},{"name":"tag","value":"us_01_03"},{"name":"parentSuite","value":"tests.US_01_Markets.US_01-03_Forex"},{"name":"suite","value":"US_01-03-00_forex_tests"},{"name":"subSuite","value":"TestForex"},{"name":"host","value":"fv-az1427-857"},{"name":"thread","value":"4504-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_01_Markets.US_01-03_Forex.US_01-03-00_forex_tests"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_sort","value":"'top_risers'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["test_002","us_01_03"]},"source":"c1a51f46dc5b02d5.json","parameterValues":["'ae'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoAuth'","'top_risers'","'Chrome'"]}