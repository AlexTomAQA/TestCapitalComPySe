{"uid":"26304b0a2fed4518","name":"TC_11.01.03.01_02 | Testing button [Try demo] on Main banner. Bid:11.01.03.01_02-nl.au.NoAuth","fullName":"tests.US_11_Education.US_11-01-03_cfd_trading_guide.us_11-01-03-01_cfd_trading_guide_test.TestCFDTradingGuide#test_02_main_banner_try_demo_button","historyId":"783fe7c7daa83caa572d01282253be19","time":{"start":1708429471041,"stop":1708429483699,"duration":12658},"description":"\n        Check: Button [Try demo] on Main banner\n        Language: All. License: All.\n        ","descriptionHtml":"<pre><code>    Check: Button [Try demo] on Main banner\n    Language: All. License: All.\n</code></pre>\n","status":"broken","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"self = <us_11-01-03-01_cfd_trading_guide_test.TestCFDTradingGuide object at 0x7faa4e829340>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"34688b1f48ddb6f20f9877665aa78d53\")>\ncur_language = 'nl', cur_country = 'au', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_item_link = 'https://capital.com/nl/how-beleggen-in-cfd'\n\n    @allure.step(f\"{datetime.now()}   Start test of button [Try demo] on Main banner\")\n    @pytest.mark.test_02\n    def test_02_main_banner_try_demo_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link):\n        \"\"\"\n        Check: Button [Try demo] on Main banner\n        Language: All. License: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"11.01.03\", \"Education > Menu item [CFD trading guide]\",\n            \".01_02\", \"Testing button [Try demo] on Main banner\")\n    \n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n        Common().check_language_in_list_and_skip_if_not_present(\n            cur_language, [\"\", \"de\", \"es\", \"fr\", \"nl\", \"pl\", \"ro\", \"ru\", \"zh\"])\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = MainBannerTryDemo(d, cur_item_link, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link)\n\ntests/US_11_Education/US_11-01-03_cfd_trading_guide/us_11-01-03-01_cfd_trading_guide_test.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/ButtonTryDemoMainBanner.py:29: in full_test_with_tpi\n    test_element.assert_login(d, cur_language, cur_item_link)\npages/Elements/AssertClass.py:74: in assert_login\n    retest_table_fill(self.bid, '05', self.link)\ntests/ReTestsAuto/ReTest_table_fill.py:75: in retest_table_fill\n    gs = GoogleSheet()\ntests/ReTestsAuto/GoogleSheets/googlesheets.py:44: in __init__\n    self.creds = Credentials.from_authorized_user_file(\"./tests/ReTestsAuto/token.json\", self.SCOPES)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/google/oauth2/credentials.py:538: in from_authorized_user_file\n    data = json.load(json_file)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7faa502cf440>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1708429380288,"stop":1708429380670,"duration":382},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1708429380671,"stop":1708429380671,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1708429380671,"stop":1708429380671,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1708429380671,"stop":1708429380671,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1708429380671,"stop":1708429380671,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1708429380672,"stop":1708429380672,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1708429436248,"stop":1708429436248,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [Try demo] on Main banner\n        Language: All. License: All.\n        ","status":"broken","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"self = <us_11-01-03-01_cfd_trading_guide_test.TestCFDTradingGuide object at 0x7faa4e829340>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"34688b1f48ddb6f20f9877665aa78d53\")>\ncur_language = 'nl', cur_country = 'au', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_item_link = 'https://capital.com/nl/how-beleggen-in-cfd'\n\n    @allure.step(f\"{datetime.now()}   Start test of button [Try demo] on Main banner\")\n    @pytest.mark.test_02\n    def test_02_main_banner_try_demo_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link):\n        \"\"\"\n        Check: Button [Try demo] on Main banner\n        Language: All. License: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"11.01.03\", \"Education > Menu item [CFD trading guide]\",\n            \".01_02\", \"Testing button [Try demo] on Main banner\")\n    \n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n        Common().check_language_in_list_and_skip_if_not_present(\n            cur_language, [\"\", \"de\", \"es\", \"fr\", \"nl\", \"pl\", \"ro\", \"ru\", \"zh\"])\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = MainBannerTryDemo(d, cur_item_link, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link)\n\ntests/US_11_Education/US_11-01-03_cfd_trading_guide/us_11-01-03-01_cfd_trading_guide_test.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/ButtonTryDemoMainBanner.py:29: in full_test_with_tpi\n    test_element.assert_login(d, cur_language, cur_item_link)\npages/Elements/AssertClass.py:74: in assert_login\n    retest_table_fill(self.bid, '05', self.link)\ntests/ReTestsAuto/ReTest_table_fill.py:75: in retest_table_fill\n    gs = GoogleSheet()\ntests/ReTestsAuto/GoogleSheets/googlesheets.py:44: in __init__\n    self.creds = Credentials.from_authorized_user_file(\"./tests/ReTestsAuto/token.json\", self.SCOPES)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/google/oauth2/credentials.py:538: in from_authorized_user_file\n    data = json.load(json_file)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7faa502cf440>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/json/decoder.py:355: JSONDecodeError","steps":[{"name":"2024-02-20 11:43:00.251398   Start test of button [Try demo] on Main banner","time":{"start":1708429471041,"stop":1708429483698,"duration":12657},"status":"broken","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_11_Education/US_11-01-03_cfd_trading_guide/us_11-01-03-01_cfd_trading_guide_test.py\", line 96, in test_02_main_banner_try_demo_button\n    test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/ButtonTryDemoMainBanner.py\", line 29, in full_test_with_tpi\n    test_element.assert_login(d, cur_language, cur_item_link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 74, in assert_login\n    retest_table_fill(self.bid, '05', self.link)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/ReTestsAuto/ReTest_table_fill.py\", line 75, in retest_table_fill\n    gs = GoogleSheet()\n         ^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/ReTestsAuto/GoogleSheets/googlesheets.py\", line 44, in __init__\n    self.creds = Credentials.from_authorized_user_file(\"./tests/ReTestsAuto/token.json\", self.SCOPES)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/google/oauth2/credentials.py\", line 538, in from_authorized_user_file\n    data = json.load(json_file)\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/json/__init__.py\", line 293, in load\n    return loads(fp.read(),\n           ^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\n","steps":[{"name":"2024-02-20 11:43:00.243247   Start Building dynamic arguments for allure report generation","time":{"start":1708429471041,"stop":1708429471043,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"34688b1f48ddb6f20f9877665aa78d53\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'nl'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"us","value":"'11.01.03'"},{"name":"desc_us","value":"'Education > Menu item [CFD trading guide]'"},{"name":"num_tc","value":"'.01_02'"},{"name":"desc_tc","value":"'Testing button [Try demo] on Main banner'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-02-20 11:43:00.247196   Set preconditions","time":{"start":1708429471043,"stop":1708429474340,"duration":3297},"status":"passed","steps":[{"name":"2024-02-20 11:43:00.246094   Start Checking Captcha","time":{"start":1708429471251,"stop":1708429472283,"duration":1032},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"2024-02-20 11:43:00.246094   Start Checking Captcha","time":{"start":1708429472283,"stop":1708429473312,"duration":1029},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"2024-02-20 11:43:00.246094   Start Checking Captcha","time":{"start":1708429473312,"stop":1708429474340,"duration":1028},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"34688b1f48ddb6f20f9877665aa78d53\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'nl'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-02-20 11:43:00.247712   Start Full test for Try demo button of Main banner","time":{"start":1708429474340,"stop":1708429483698,"duration":9358},"status":"broken","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/ButtonTryDemoMainBanner.py\", line 29, in full_test_with_tpi\n    test_element.assert_login(d, cur_language, cur_item_link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 74, in assert_login\n    retest_table_fill(self.bid, '05', self.link)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/ReTestsAuto/ReTest_table_fill.py\", line 75, in retest_table_fill\n    gs = GoogleSheet()\n         ^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/ReTestsAuto/GoogleSheets/googlesheets.py\", line 44, in __init__\n    self.creds = Credentials.from_authorized_user_file(\"./tests/ReTestsAuto/token.json\", self.SCOPES)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/google/oauth2/credentials.py\", line 538, in from_authorized_user_file\n    data = json.load(json_file)\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/json/__init__.py\", line 293, in load\n    return loads(fp.read(),\n           ^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\n","steps":[{"name":"Click button [Try demo] on Main banner","time":{"start":1708429474367,"stop":1708429474406,"duration":39},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"2024-02-20 11:43:00.239967   Checking that \"Login\" form or page opened","time":{"start":1708429474406,"stop":1708429483697,"duration":9291},"status":"broken","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 74, in assert_login\n    retest_table_fill(self.bid, '05', self.link)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/ReTestsAuto/ReTest_table_fill.py\", line 75, in retest_table_fill\n    gs = GoogleSheet()\n         ^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/ReTestsAuto/GoogleSheets/googlesheets.py\", line 44, in __init__\n    self.creds = Credentials.from_authorized_user_file(\"./tests/ReTestsAuto/token.json\", self.SCOPES)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/google/oauth2/credentials.py\", line 538, in from_authorized_user_file\n    data = json.load(json_file)\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/json/__init__.py\", line 293, in load\n    return loads(fp.read(),\n           ^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\n","steps":[{"name":"Check that form [Login] is opened","time":{"start":1708429474406,"stop":1708429477493,"duration":3087},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check that new form [Login] is opened","time":{"start":1708429477494,"stop":1708429480582,"duration":3088},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check that page [Login] is opened","time":{"start":1708429480582,"stop":1708429480585,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check that [Login] form on trading platform page opened","time":{"start":1708429480585,"stop":1708429483652,"duration":3067},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_language","value":"'nl'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check that \"Sign up\" form opened","time":{"start":1708429483652,"stop":1708429483697,"duration":45},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_language","value":"'nl'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"34688b1f48ddb6f20f9877665aa78d53\")>"},{"name":"cur_language","value":"'nl'"},{"name":"cur_link","value":"'https://capital.com/nl/how-beleggen-in-cfd'"}],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"34688b1f48ddb6f20f9877665aa78d53\")>"},{"name":"cur_language","value":"'nl'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_item_link","value":"'https://capital.com/nl/how-beleggen-in-cfd'"}],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"34688b1f48ddb6f20f9877665aa78d53\")>"},{"name":"cur_language","value":"'nl'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_item_link","value":"'https://capital.com/nl/how-beleggen-in-cfd'"}],"shouldDisplayMessage":false,"stepsCount":13,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"4a2dd6de18a720db","name":"Screenshot","source":"4a2dd6de18a720db.png","type":"image/png","size":91408},{"uid":"a74af4486a80f48","name":"log","source":"a74af4486a80f48.txt","type":"text/plain","size":4192},{"uid":"516f3a80bbb622a1","name":"stdout","source":"516f3a80bbb622a1.txt","type":"text/plain","size":2450}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":14,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1708429651021,"stop":1708429651152,"duration":131},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_11.01.03 | Education > Menu item [CFD trading guide]"},{"name":"feature","value":"Language: nl"},{"name":"story","value":"Country: au / Role: NoAuth"},{"name":"tag","value":"test_02"},{"name":"tag","value":"us_11_01_03_01"},{"name":"parentSuite","value":"tests.US_11_Education.US_11-01-03_cfd_trading_guide"},{"name":"suite","value":"us_11-01-03-01_cfd_trading_guide_test"},{"name":"subSuite","value":"TestCFDTradingGuide"},{"name":"host","value":"fv-az1208-889"},{"name":"thread","value":"7297-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_11_Education.US_11-01-03_cfd_trading_guide.us_11-01-03-01_cfd_trading_guide_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'au'"},{"name":"cur_item_link","value":"'https://capital.com/nl/how-beleggen-in-cfd'"},{"name":"cur_language","value":"'nl'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["test_02","us_11_01_03_01"]},"source":"26304b0a2fed4518.json","parameterValues":["'au'","'https://capital.com/nl/how-beleggen-in-cfd'","'nl'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoAuth'","'Chrome'"]}