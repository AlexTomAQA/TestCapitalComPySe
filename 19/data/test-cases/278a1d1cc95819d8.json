{"uid":"278a1d1cc95819d8","name":"TC_11.02.05.01_05 | Testing button [Buy] in content block. Bid:11.02.05.01_05-ru.au.Auth","fullName":"tests.US_11_Education.US_11-02-05_Cryptocurrency_trading.us_11-02-05-01_cryptocurrency_trading_test.TestCryptocurrencyTrading#test_05_content_block_button_buy","historyId":"cde132b78f3228476c993f11b4d4a684","time":{"start":1709272170740,"stop":1709272180825,"duration":10085},"description":"\n        Check: Button [Buy] in content block\n        Language:EN, DE, ES, IT, PL, RO, RU. License: All,except FCA (GB country)\n        ","descriptionHtml":"<pre><code>    Check: Button [Buy] in content block\n    Language:EN, DE, ES, IT, PL, RO, RU. License: All,except FCA (GB country)\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Bug # 14. Trading platform was opened, but not Chart mode","statusTrace":"self = <us_11-02-05-01_cryptocurrency_trading_test.TestCryptocurrencyTrading object at 0x7fc64f658410>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"dc9214816d736538f7d3c6114554708f\")>\ncur_language = 'ru', cur_country = 'au', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_item_link = 'https://capital.com/ru/torgovlya-qtum-cfd'\n\n    @allure.step(\"Start test of button [Buy] in content block\")\n    @pytest.mark.test_05\n    def test_05_content_block_button_buy(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link):\n        \"\"\"\n        Check: Button [Buy] in content block\n        Language:EN, DE, ES, IT, PL, RO, RU. License: All,except FCA (GB country)\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"11.02.05\", \"Education > Menu item [Cryptocurrency trading]\",\n            \".01_05\", \"Testing button [Buy] in content block\")\n    \n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n        Common().check_language_in_list_and_skip_if_not_present(\n            cur_language, [\"\", \"de\", \"es\", \"it\", \"pl\", \"ro\", \"ru\"])\n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = BuyButtonContentBlock(d, cur_item_link, bid)\n>       test_element.full_test(d, cur_language, cur_country, cur_role, cur_item_link)\n\ntests/US_11_Education/US_11-02-05_Cryptocurrency_trading/us_11-02-05-01_cryptocurrency_trading_test.py:176: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/ContentBlockBuyInButton.py:35: in full_test\n    test_element.assert_trading_platform_v4(d, cur_item_link, False, True, trade_instrument)\npages/Elements/AssertClass.py:135: in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\npages/Capital/Trading_platform/trading_platform.py:109: in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Capital.Trading_platform.trading_platform.TradingPlatform object at 0x7fc64f50cf50>\ntest_link = 'https://capital.com/ru/torgovlya-qtum-cfd'\ntrade_instrument = '19495840104142020'\n\n    @allure.step(\"Check the corresponding trading instrument\")\n    def should_be_corresponding_trading_instrument(self, test_link, trade_instrument):\n        \"\"\"\n        Check Trading platform is opened for corresponding trade instrument\n        \"\"\"\n    \n        # cur_url = self.driver.current_url\n        print(f\"{datetime.now()}   => Trading Instrument is the '{trade_instrument}'\")\n        trade_instrument_name = trade_instrument.split(\" \")[0]\n        print(f\"{datetime.now()}   => Trading Instrument Name is the '{trade_instrument_name}'\")\n    \n        # проверяем, что открыта трейдинговая платформа на вкладке [Charts]\n        menu_chart = self.elements_are_present(*ChartingLocators.MENU_CHART)\n        if len(menu_chart) == 0:\n            print(f\"{datetime.now()}   => Trading Platform opened, but not Chart mode\")\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '14', self.link)\n>           assert False, f\"Bug # 14. Trading platform was opened, but not Chart mode\"\nE           AssertionError: Bug # 14. Trading platform was opened, but not Chart mode\n\npages/Capital/Trading_platform/trading_platform.py:285: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1709272105421,"stop":1709272105810,"duration":389},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1709272105811,"stop":1709272105811,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1709272105811,"stop":1709272105811,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1709272105811,"stop":1709272105811,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1709272105811,"stop":1709272105811,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1709272105811,"stop":1709272105811,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1709272105811,"stop":1709272105811,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [Buy] in content block\n        Language:EN, DE, ES, IT, PL, RO, RU. License: All,except FCA (GB country)\n        ","status":"failed","statusMessage":"AssertionError: Bug # 14. Trading platform was opened, but not Chart mode","statusTrace":"self = <us_11-02-05-01_cryptocurrency_trading_test.TestCryptocurrencyTrading object at 0x7fc64f658410>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"dc9214816d736538f7d3c6114554708f\")>\ncur_language = 'ru', cur_country = 'au', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_item_link = 'https://capital.com/ru/torgovlya-qtum-cfd'\n\n    @allure.step(\"Start test of button [Buy] in content block\")\n    @pytest.mark.test_05\n    def test_05_content_block_button_buy(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link):\n        \"\"\"\n        Check: Button [Buy] in content block\n        Language:EN, DE, ES, IT, PL, RO, RU. License: All,except FCA (GB country)\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"11.02.05\", \"Education > Menu item [Cryptocurrency trading]\",\n            \".01_05\", \"Testing button [Buy] in content block\")\n    \n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n        Common().check_language_in_list_and_skip_if_not_present(\n            cur_language, [\"\", \"de\", \"es\", \"it\", \"pl\", \"ro\", \"ru\"])\n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = BuyButtonContentBlock(d, cur_item_link, bid)\n>       test_element.full_test(d, cur_language, cur_country, cur_role, cur_item_link)\n\ntests/US_11_Education/US_11-02-05_Cryptocurrency_trading/us_11-02-05-01_cryptocurrency_trading_test.py:176: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/ContentBlockBuyInButton.py:35: in full_test\n    test_element.assert_trading_platform_v4(d, cur_item_link, False, True, trade_instrument)\npages/Elements/AssertClass.py:135: in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\npages/Capital/Trading_platform/trading_platform.py:109: in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Capital.Trading_platform.trading_platform.TradingPlatform object at 0x7fc64f50cf50>\ntest_link = 'https://capital.com/ru/torgovlya-qtum-cfd'\ntrade_instrument = '19495840104142020'\n\n    @allure.step(\"Check the corresponding trading instrument\")\n    def should_be_corresponding_trading_instrument(self, test_link, trade_instrument):\n        \"\"\"\n        Check Trading platform is opened for corresponding trade instrument\n        \"\"\"\n    \n        # cur_url = self.driver.current_url\n        print(f\"{datetime.now()}   => Trading Instrument is the '{trade_instrument}'\")\n        trade_instrument_name = trade_instrument.split(\" \")[0]\n        print(f\"{datetime.now()}   => Trading Instrument Name is the '{trade_instrument_name}'\")\n    \n        # проверяем, что открыта трейдинговая платформа на вкладке [Charts]\n        menu_chart = self.elements_are_present(*ChartingLocators.MENU_CHART)\n        if len(menu_chart) == 0:\n            print(f\"{datetime.now()}   => Trading Platform opened, but not Chart mode\")\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '14', self.link)\n>           assert False, f\"Bug # 14. Trading platform was opened, but not Chart mode\"\nE           AssertionError: Bug # 14. Trading platform was opened, but not Chart mode\n\npages/Capital/Trading_platform/trading_platform.py:285: AssertionError","steps":[{"name":"Start test of button [Buy] in content block","time":{"start":1709272170740,"stop":1709272180824,"duration":10084},"status":"failed","statusMessage":"AssertionError: Bug # 14. Trading platform was opened, but not Chart mode\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_11_Education/US_11-02-05_Cryptocurrency_trading/us_11-02-05-01_cryptocurrency_trading_test.py\", line 176, in test_05_content_block_button_buy\n    test_element.full_test(d, cur_language, cur_country, cur_role, cur_item_link)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/ContentBlockBuyInButton.py\", line 35, in full_test\n    test_element.assert_trading_platform_v4(d, cur_item_link, False, True, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 135, in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 109, in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 285, in should_be_corresponding_trading_instrument\n    assert False, f\"Bug # 14. Trading platform was opened, but not Chart mode\"\n","steps":[{"name":"2024-03-01 05:48:25.350109   Start Building dynamic arguments for allure report generation","time":{"start":1709272170740,"stop":1709272170742,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"dc9214816d736538f7d3c6114554708f\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'ru'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'Auth'"},{"name":"us","value":"'11.02.05'"},{"name":"desc_us","value":"'Education > Menu item [Cryptocurrency trading]'"},{"name":"num_tc","value":"'.01_05'"},{"name":"desc_tc","value":"'Testing button [Buy] in content block'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-03-01 05:48:25.349827   Set preconditions","time":{"start":1709272170742,"stop":1709272174022,"duration":3280},"status":"passed","steps":[{"name":"2024-03-01 05:48:25.348738   Start Checking Captcha","time":{"start":1709272170949,"stop":1709272171973,"duration":1024},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"2024-03-01 05:48:25.348738   Start Checking Captcha","time":{"start":1709272171973,"stop":1709272172997,"duration":1024},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"2024-03-01 05:48:25.348738   Start Checking Captcha","time":{"start":1709272172997,"stop":1709272174022,"duration":1025},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"dc9214816d736538f7d3c6114554708f\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'ru'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-03-01 05:48:25.342639   Check that form [Sign up] opened","time":{"start":1709272175077,"stop":1709272176630,"duration":1553},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"timeout","value":"1"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Click button [Buy] in content block","time":{"start":1709272176630,"stop":1709272176914,"duration":284},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_role","value":"'Auth'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-03-01 05:48:25.343033   Checking that \"Trading platform\" page opened - ver 4","time":{"start":1709272176914,"stop":1709272180824,"duration":3910},"status":"failed","statusMessage":"AssertionError: Bug # 14. Trading platform was opened, but not Chart mode\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 135, in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 109, in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 285, in should_be_corresponding_trading_instrument\n    assert False, f\"Bug # 14. Trading platform was opened, but not Chart mode\"\n","steps":[{"name":"Checking that the trading platform page has opened - ver 4","time":{"start":1709272176915,"stop":1709272180824,"duration":3909},"status":"failed","statusMessage":"AssertionError: Bug # 14. Trading platform was opened, but not Chart mode\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 109, in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 285, in should_be_corresponding_trading_instrument\n    assert False, f\"Bug # 14. Trading platform was opened, but not Chart mode\"\n","steps":[{"name":"Check that the page has the expected title - ver 2","time":{"start":1709272177427,"stop":1709272177430,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"title","value":"'Trading Platform | Capital.com'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check if the Logo element is present on the page","time":{"start":1709272177430,"stop":1709272178329,"duration":899},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check if the trading platform opened in LIVE mode","time":{"start":1709272178330,"stop":1709272178350,"duration":20},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"dc9214816d736538f7d3c6114554708f\")>"},{"name":"test_link","value":"'https://capital.com/trading/platform'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check the corresponding trading instrument","time":{"start":1709272178355,"stop":1709272180823,"duration":2468},"status":"failed","statusMessage":"AssertionError: Bug # 14. Trading platform was opened, but not Chart mode\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 285, in should_be_corresponding_trading_instrument\n    assert False, f\"Bug # 14. Trading platform was opened, but not Chart mode\"\n","steps":[{"name":"Fixing one row check results into Google Sheet Bugs Report","time":{"start":1709272179682,"stop":1709272179901,"duration":219},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cell","value":"'B1'"},{"name":"values","value":"[['Busy']]"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Fixing one row check results into Google Sheet Bugs Report","time":{"start":1709272180265,"stop":1709272180610,"duration":345},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cell","value":"'P539'"},{"name":"values","value":"[[\"'14\"]]"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Fixing one row check results into Google Sheet Bugs Report","time":{"start":1709272180610,"stop":1709272180822,"duration":212},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cell","value":"'B1'"},{"name":"values","value":"[['Bugs Report']]"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"test_link","value":"'https://capital.com/ru/torgovlya-qtum-cfd'"},{"name":"trade_instrument","value":"'19495840104142020'"}],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"dc9214816d736538f7d3c6114554708f\")>"},{"name":"test_link","value":"'https://capital.com/ru/torgovlya-qtum-cfd'"},{"name":"tpd","value":"False"},{"name":"tpi","value":"True"},{"name":"trade_instrument","value":"'19495840104142020'"}],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"dc9214816d736538f7d3c6114554708f\")>"},{"name":"cur_link","value":"'https://capital.com/ru/torgovlya-qtum-cfd'"},{"name":"tpd","value":"False"},{"name":"tpi","value":"True"},{"name":"trade_instrument","value":"'19495840104142020'"}],"shouldDisplayMessage":false,"stepsCount":8,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"dc9214816d736538f7d3c6114554708f\")>"},{"name":"cur_language","value":"'ru'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_item_link","value":"'https://capital.com/ru/torgovlya-qtum-cfd'"}],"shouldDisplayMessage":false,"stepsCount":16,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"7066a0e34d4b520f","name":"Screenshot","source":"7066a0e34d4b520f.png","type":"image/png","size":130597},{"uid":"353a858b8a75b7f4","name":"log","source":"353a858b8a75b7f4.txt","type":"text/plain","size":1395},{"uid":"dd186a511e9e6376","name":"stdout","source":"dd186a511e9e6376.txt","type":"text/plain","size":4485}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":17,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1709272540222,"stop":1709272540342,"duration":120},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_11.02.05 | Education > Menu item [Cryptocurrency trading]"},{"name":"feature","value":"Language: ru"},{"name":"story","value":"Country: au / Role: Auth"},{"name":"tag","value":"test_05"},{"name":"tag","value":"us_11_02_05"},{"name":"parentSuite","value":"tests.US_11_Education.US_11-02-05_Cryptocurrency_trading"},{"name":"suite","value":"us_11-02-05-01_cryptocurrency_trading_test"},{"name":"subSuite","value":"TestCryptocurrencyTrading"},{"name":"host","value":"fv-az1149-169"},{"name":"thread","value":"24959-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_11_Education.US_11-02-05_Cryptocurrency_trading.us_11-02-05-01_cryptocurrency_trading_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'au'"},{"name":"cur_item_link","value":"'https://capital.com/ru/torgovlya-qtum-cfd'"},{"name":"cur_language","value":"'ru'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["test_05","us_11_02_05"]},"source":"278a1d1cc95819d8.json","parameterValues":["'au'","'https://capital.com/ru/torgovlya-qtum-cfd'","'ru'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'Auth'","'Chrome'"]}