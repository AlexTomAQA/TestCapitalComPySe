{"uid":"4c7dd53337c31b43","name":"TC_55!660 (Lang: nl) | Bid:55!660-nl.nl.NoAuth","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_660","historyId":"0432d37752cab0a991197d51ae137995","time":{"start":1743122500823,"stop":1743122506610,"duration":5787},"description":"\n        Check: Menu section [Learn] > Menu item [Market guides] > Click on the \"Commodity trading guide\" link >\n                Click on the \"commodities market\" link\n        Language: NL\n        License: CYSEC\n        Author: Kasila\n        ","descriptionHtml":"<pre><code>    Check: Menu section [Learn] &gt; Menu item [Market guides] &gt; Click on the &quot;Commodity trading guide&quot; link &gt;\n            Click on the &quot;commodities market&quot; link\n    Language: NL\n    License: CYSEC\n    Author: Kasila\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7ffb659932c0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"171a5b3f0abb8b33521b4c72ea77a61f\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'NoAuth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ffb64fab170>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55f9c3e84e76 \\\\u003Cunknown>\\\\n#22 0x7f2c4cc9caa4 \\\\u003Cunknown>\\\\n#23 0x7f2c4cd29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.165)\nE       Stacktrace:\nE       #0 0x55f9c3e85ffa <unknown>\nE       #1 0x55f9c3944970 <unknown>\nE       #2 0x55f9c399d1ec <unknown>\nE       #3 0x55f9c399b055 <unknown>\nE       #4 0x55f9c39986f2 <unknown>\nE       #5 0x55f9c39978ca <unknown>\nE       #6 0x55f9c398a4cd <unknown>\nE       #7 0x55f9c39bc292 <unknown>\nE       #8 0x55f9c3989e4a <unknown>\nE       #9 0x55f9c39bc45e <unknown>\nE       #10 0x55f9c39e270c <unknown>\nE       #11 0x55f9c39bc063 <unknown>\nE       #12 0x55f9c3988328 <unknown>\nE       #13 0x55f9c3989491 <unknown>\nE       #14 0x55f9c3e4d42b <unknown>\nE       #15 0x55f9c3e512ec <unknown>\nE       #16 0x55f9c3e34a22 <unknown>\nE       #17 0x55f9c3e51e64 <unknown>\nE       #18 0x55f9c3e18bef <unknown>\nE       #19 0x55f9c3e74558 <unknown>\nE       #20 0x55f9c3e74736 <unknown>\nE       #21 0x55f9c3e84e76 <unknown>\nE       #22 0x7f2c4cc9caa4 <unknown>\nE       #23 0x7f2c4cd29c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7ffb65d96150>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"171a5b3f0abb8b33521b4c72ea77a61f\")>\ncur_language = 'nl', cur_country = 'nl', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step('Start retest manual AT_55!660  The page with \"404 Pagina niet gevonden.\" text is displayed')\n    @pytest.mark.parametrize('cur_language', ['nl'])\n    @pytest.mark.parametrize('cur_country', ['nl'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_660\n    def test_660(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Menu section [Learn] > Menu item [Market guides] > Click on the \"Commodity trading guide\" link >\n                Click on the \"commodities market\" link\n        Language: NL\n        License: CYSEC\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"660\", 'The page with \"404 Pagina niet gevonden.\" text is displayed after clicking the '\n                   '[grondstoffenmarkt](commodities market) link in \"Een complete gids...\"(A complete guide...) '\n                   'block after selected NL language and country'\n        )\n    \n>       link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:962: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:154: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7ffb659932c0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"171a5b3f0abb8b33521b4c72ea77a61f\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'NoAuth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1743120808449,"stop":1743120809570,"duration":1121},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1743120809570,"stop":1743120809570,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1743120809570,"stop":1743120809570,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1743120809570,"stop":1743120809570,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Menu section [Learn] > Menu item [Market guides] > Click on the \"Commodity trading guide\" link >\n                Click on the \"commodities market\" link\n        Language: NL\n        License: CYSEC\n        Author: Kasila\n        ","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7ffb659932c0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"171a5b3f0abb8b33521b4c72ea77a61f\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'NoAuth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ffb64fab170>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55f9c3e84e76 \\\\u003Cunknown>\\\\n#22 0x7f2c4cc9caa4 \\\\u003Cunknown>\\\\n#23 0x7f2c4cd29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.165)\nE       Stacktrace:\nE       #0 0x55f9c3e85ffa <unknown>\nE       #1 0x55f9c3944970 <unknown>\nE       #2 0x55f9c399d1ec <unknown>\nE       #3 0x55f9c399b055 <unknown>\nE       #4 0x55f9c39986f2 <unknown>\nE       #5 0x55f9c39978ca <unknown>\nE       #6 0x55f9c398a4cd <unknown>\nE       #7 0x55f9c39bc292 <unknown>\nE       #8 0x55f9c3989e4a <unknown>\nE       #9 0x55f9c39bc45e <unknown>\nE       #10 0x55f9c39e270c <unknown>\nE       #11 0x55f9c39bc063 <unknown>\nE       #12 0x55f9c3988328 <unknown>\nE       #13 0x55f9c3989491 <unknown>\nE       #14 0x55f9c3e4d42b <unknown>\nE       #15 0x55f9c3e512ec <unknown>\nE       #16 0x55f9c3e34a22 <unknown>\nE       #17 0x55f9c3e51e64 <unknown>\nE       #18 0x55f9c3e18bef <unknown>\nE       #19 0x55f9c3e74558 <unknown>\nE       #20 0x55f9c3e74736 <unknown>\nE       #21 0x55f9c3e84e76 <unknown>\nE       #22 0x7f2c4cc9caa4 <unknown>\nE       #23 0x7f2c4cd29c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7ffb65d96150>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"171a5b3f0abb8b33521b4c72ea77a61f\")>\ncur_language = 'nl', cur_country = 'nl', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step('Start retest manual AT_55!660  The page with \"404 Pagina niet gevonden.\" text is displayed')\n    @pytest.mark.parametrize('cur_language', ['nl'])\n    @pytest.mark.parametrize('cur_country', ['nl'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_660\n    def test_660(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Menu section [Learn] > Menu item [Market guides] > Click on the \"Commodity trading guide\" link >\n                Click on the \"commodities market\" link\n        Language: NL\n        License: CYSEC\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"660\", 'The page with \"404 Pagina niet gevonden.\" text is displayed after clicking the '\n                   '[grondstoffenmarkt](commodities market) link in \"Een complete gids...\"(A complete guide...) '\n                   'block after selected NL language and country'\n        )\n    \n>       link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:962: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:154: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7ffb659932c0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"171a5b3f0abb8b33521b4c72ea77a61f\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'NoAuth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","steps":[{"name":"Start retest manual AT_55!660  The page with \"404 Pagina niet gevonden.\" text is displayed","time":{"start":1743122500823,"stop":1743122506610,"duration":5787},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py\", line 962, in test_660\n    link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 78, in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 154, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1743122500824,"stop":1743122500825,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"171a5b3f0abb8b33521b4c72ea77a61f\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'nl'"},{"name":"cur_country","value":"'nl'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'660'"},{"name":"desc_tc","value":"'The page with \"404 Pagina niet gevonden.\" text is displayed after clicking the [grondstoffenmarkt](commodities market) link in \"Een complete gids...\"(A complete guide...) block after selected NL language and country'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1743122500825,"stop":1743122506609,"duration":5784},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 154, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"2025-03-28 00:13:28.412534   Start Authorization","time":{"start":1743122505537,"stop":1743122506609,"duration":1072},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"171a5b3f0abb8b33521b4c72ea77a61f\")>"},{"name":"link","value":"'https://capital.com/en-gb'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"171a5b3f0abb8b33521b4c72ea77a61f\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'nl'"},{"name":"cur_country","value":"'nl'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"171a5b3f0abb8b33521b4c72ea77a61f\")>"},{"name":"cur_language","value":"'nl'"},{"name":"cur_country","value":"'nl'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"8d7cd41013a97df5","name":"Screenshot","source":"8d7cd41013a97df5.png","type":"image/png","size":611008},{"uid":"dbd46abffa9e995e","name":"stdout","source":"dbd46abffa9e995e.txt","type":"text/plain","size":1962}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1743122533231,"stop":1743122533539,"duration":308},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!660 | The page with \"404 Pagina niet gevonden.\" text is displayed after clicking the [grondstoffenmarkt](commodities market) link in \"Een complete gids...\"(A complete guide...) block after selected NL language and country"},{"name":"feature","value":"Role: NoAuth"},{"name":"story","value":"Country: nl"},{"name":"tag","value":"bug_660"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az1945-274"},{"name":"thread","value":"33249-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'nl'"},{"name":"cur_language","value":"'nl'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":20,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":20},"items":[{"uid":"c98cf32b2256b22f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/360//#testresult/c98cf32b2256b22f","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743035394513,"stop":1743035400410,"duration":5897}},{"uid":"2c2a3e9fbe2485a","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/359//#testresult/2c2a3e9fbe2485a","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742948898130,"stop":1742948904111,"duration":5981}},{"uid":"87727f9970f39ed6","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/358//#testresult/87727f9970f39ed6","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742862307194,"stop":1742862313367,"duration":6173}},{"uid":"c249433ea1af12fe","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/357//#testresult/c249433ea1af12fe","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742775978008,"stop":1742775983793,"duration":5785}},{"uid":"b4d77d4b67288786","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/356//#testresult/b4d77d4b67288786","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742690312682,"stop":1742690318547,"duration":5865}},{"uid":"9aa27d83f94ec376","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/355//#testresult/9aa27d83f94ec376","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742603948599,"stop":1742603954580,"duration":5981}},{"uid":"bf27466b19f4a6d4","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/354//#testresult/bf27466b19f4a6d4","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742516526192,"stop":1742516532224,"duration":6032}},{"uid":"82f7d95a3294529f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/353//#testresult/82f7d95a3294529f","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742430164624,"stop":1742430170844,"duration":6220}},{"uid":"ba3cdc513ff3da62","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/352//#testresult/ba3cdc513ff3da62","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742343283668,"stop":1742343289599,"duration":5931}},{"uid":"ff61944f1c9dfc05","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/351//#testresult/ff61944f1c9dfc05","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742258427041,"stop":1742258433081,"duration":6040}},{"uid":"5deef76cd40893f6","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/350//#testresult/5deef76cd40893f6","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742171818276,"stop":1742171824157,"duration":5881}},{"uid":"62b9a6c0af4e3978","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/349//#testresult/62b9a6c0af4e3978","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742085735862,"stop":1742085741690,"duration":5828}},{"uid":"14eedb71c933b013","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/348//#testresult/14eedb71c933b013","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1741998271837,"stop":1741998277638,"duration":5801}},{"uid":"67df2d25e15b0830","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/347//#testresult/67df2d25e15b0830","status":"failed","statusDetails":"Failed: #Bug # 55!660 \nExpected result: The page 'Grondstoffen'(Commodities) with 'https://capital.com/nl-nl/markets/commodities' URL is displayed\nActual result: The page '404' with URL 'https://capital.com/nl-nl/learn/market-guides/%E2%80%9Chttps:/capital.com/nl-nl/markets/commodities%E2%80%9D' is displayed","time":{"start":1741917805415,"stop":1741917827488,"duration":22073}},{"uid":"caff4db94ff02a6b","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/346//#testresult/caff4db94ff02a6b","status":"failed","statusDetails":"Failed: #Bug # 55!660 \nExpected result: The page 'Grondstoffen'(Commodities) with 'https://capital.com/nl-nl/markets/commodities' URL is displayed\nActual result: The page '404' with URL 'https://capital.com/nl-nl/learn/market-guides/%E2%80%9Chttps:/capital.com/nl-nl/markets/commodities%E2%80%9D' is displayed","time":{"start":1741830657899,"stop":1741830681443,"duration":23544}},{"uid":"86ed55ff93cd1b43","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/345//#testresult/86ed55ff93cd1b43","status":"failed","statusDetails":"Failed: #Bug # 55!660 \nExpected result: The page 'Grondstoffen'(Commodities) with 'https://capital.com/nl-nl/markets/commodities' URL is displayed\nActual result: The page '404' with URL 'https://capital.com/nl-nl/learn/market-guides/%E2%80%9Chttps:/capital.com/nl-nl/markets/commodities%E2%80%9D' is displayed","time":{"start":1741750830661,"stop":1741750855666,"duration":25005}},{"uid":"36e0cb78be5c4d90","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/344//#testresult/36e0cb78be5c4d90","status":"failed","statusDetails":"Failed: #Bug # 55!660 \nExpected result: The page 'Grondstoffen'(Commodities) with 'https://capital.com/nl-nl/markets/commodities' URL is displayed\nActual result: The page '404' with URL 'https://capital.com/nl-nl/learn/market-guides/%E2%80%9Chttps:/capital.com/nl-nl/markets/commodities%E2%80%9D' is displayed","time":{"start":1741664734515,"stop":1741664759424,"duration":24909}},{"uid":"cd32e124c1b88808","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/343//#testresult/cd32e124c1b88808","status":"failed","statusDetails":"Failed: #Bug # 55!660 \nExpected result: The page 'Grondstoffen'(Commodities) with 'https://capital.com/nl-nl/markets/commodities' URL is displayed\nActual result: The page '404' with URL 'https://capital.com/nl-nl/learn/market-guides/%E2%80%9Chttps:/capital.com/nl-nl/markets/commodities%E2%80%9D' is displayed","time":{"start":1741571535336,"stop":1741571558665,"duration":23329}},{"uid":"49f144a40b3044cf","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/342//#testresult/49f144a40b3044cf","status":"failed","statusDetails":"Failed: #Bug # 55!660 \nExpected result: The page 'Grondstoffen'(Commodities) with 'https://capital.com/nl-nl/markets/commodities' URL is displayed\nActual result: The page '404' with URL 'https://capital.com/nl-nl/learn/market-guides/%E2%80%9Chttps:/capital.com/nl-nl/markets/commodities%E2%80%9D' is displayed","time":{"start":1741484581029,"stop":1741484603566,"duration":22537}}]},"tags":["bug_660","us_55"]},"source":"4c7dd53337c31b43.json","parameterValues":["'nl'","'nl'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoAuth'","'Chrome'"]}