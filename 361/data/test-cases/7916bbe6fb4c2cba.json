{"uid":"7916bbe6fb4c2cba","name":"TC_55!624 (Lang: en) | Bid:55!624-en.ae.Auth","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_624","historyId":"9fc142c1c933d49c16aec7d390e8ee91","time":{"start":1743122388881,"stop":1743122396936,"duration":8055},"description":"\n        Check: Menu section [Learn] > Menu item  [Market guides] > Click the link “Shares trading guide”\n                > Сlick the link “Netflix” > Сlick the link “Trade Coca-Cola shares”\n                > Сlick the link “KO” in the block “Performance of the Coca-Cola stock in recent years”\n        Language: EN\n        License: FCA\n        Author: Kasila\n        ","descriptionHtml":"<pre><code>    Check: Menu section [Learn] &gt; Menu item  [Market guides] &gt; Click the link “Shares trading guide”\n            &gt; Сlick the link “Netflix” &gt; Сlick the link “Trade Coca-Cola shares”\n            &gt; Сlick the link “KO” in the block “Performance of the Coca-Cola stock in recent years”\n    Language: EN\n    License: FCA\n    Author: Kasila\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7ffb6516b2f0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"171a5b3f0abb8b33521b4c72ea77a61f\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ffb64fab170>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55f9c3e84e76 \\\\u003Cunknown>\\\\n#22 0x7f2c4cc9caa4 \\\\u003Cunknown>\\\\n#23 0x7f2c4cd29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.165)\nE       Stacktrace:\nE       #0 0x55f9c3e85ffa <unknown>\nE       #1 0x55f9c3944970 <unknown>\nE       #2 0x55f9c399d1ec <unknown>\nE       #3 0x55f9c399b055 <unknown>\nE       #4 0x55f9c39986f2 <unknown>\nE       #5 0x55f9c39978ca <unknown>\nE       #6 0x55f9c398a4cd <unknown>\nE       #7 0x55f9c39bc292 <unknown>\nE       #8 0x55f9c3989e4a <unknown>\nE       #9 0x55f9c39bc45e <unknown>\nE       #10 0x55f9c39e270c <unknown>\nE       #11 0x55f9c39bc063 <unknown>\nE       #12 0x55f9c3988328 <unknown>\nE       #13 0x55f9c3989491 <unknown>\nE       #14 0x55f9c3e4d42b <unknown>\nE       #15 0x55f9c3e512ec <unknown>\nE       #16 0x55f9c3e34a22 <unknown>\nE       #17 0x55f9c3e51e64 <unknown>\nE       #18 0x55f9c3e18bef <unknown>\nE       #19 0x55f9c3e74558 <unknown>\nE       #20 0x55f9c3e74736 <unknown>\nE       #21 0x55f9c3e84e76 <unknown>\nE       #22 0x7f2c4cc9caa4 <unknown>\nE       #23 0x7f2c4cd29c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7ffb65d94a70>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"171a5b3f0abb8b33521b4c72ea77a61f\")>\ncur_language = '', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step('Start retest manual AT_55!624 The error message “This site can’t be reached” is displayed')\n    @pytest.mark.parametrize('cur_language', [''])\n    @pytest.mark.parametrize('cur_country', ['ae', 'gb', 'au'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_624\n    def test_624(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Menu section [Learn] > Menu item  [Market guides] > Click the link “Shares trading guide”\n                > Сlick the link “Netflix” > Сlick the link “Trade Coca-Cola shares”\n                > Сlick the link “KO” in the block “Performance of the Coca-Cola stock in recent years”\n        Language: EN\n        License: FCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"624\", 'Error message “This site can’t be reached” is displayed after clicking the link “KO” '\n                   'in the block “Performance of the Coca-Cola stock in recent years” on the page “How to trade '\n                   'Coca-Cola stocks” when EN language is selected (SCA / FCA / ASIC licenses)'\n        )\n    \n>       link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:864: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:152: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7ffb6516b2f0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"171a5b3f0abb8b33521b4c72ea77a61f\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1743120808449,"stop":1743120809570,"duration":1121},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1743120809570,"stop":1743120809570,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1743120809570,"stop":1743120809570,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1743120809570,"stop":1743120809570,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Menu section [Learn] > Menu item  [Market guides] > Click the link “Shares trading guide”\n                > Сlick the link “Netflix” > Сlick the link “Trade Coca-Cola shares”\n                > Сlick the link “KO” in the block “Performance of the Coca-Cola stock in recent years”\n        Language: EN\n        License: FCA\n        Author: Kasila\n        ","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7ffb6516b2f0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"171a5b3f0abb8b33521b4c72ea77a61f\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ffb64fab170>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55f9c3e84e76 \\\\u003Cunknown>\\\\n#22 0x7f2c4cc9caa4 \\\\u003Cunknown>\\\\n#23 0x7f2c4cd29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.165)\nE       Stacktrace:\nE       #0 0x55f9c3e85ffa <unknown>\nE       #1 0x55f9c3944970 <unknown>\nE       #2 0x55f9c399d1ec <unknown>\nE       #3 0x55f9c399b055 <unknown>\nE       #4 0x55f9c39986f2 <unknown>\nE       #5 0x55f9c39978ca <unknown>\nE       #6 0x55f9c398a4cd <unknown>\nE       #7 0x55f9c39bc292 <unknown>\nE       #8 0x55f9c3989e4a <unknown>\nE       #9 0x55f9c39bc45e <unknown>\nE       #10 0x55f9c39e270c <unknown>\nE       #11 0x55f9c39bc063 <unknown>\nE       #12 0x55f9c3988328 <unknown>\nE       #13 0x55f9c3989491 <unknown>\nE       #14 0x55f9c3e4d42b <unknown>\nE       #15 0x55f9c3e512ec <unknown>\nE       #16 0x55f9c3e34a22 <unknown>\nE       #17 0x55f9c3e51e64 <unknown>\nE       #18 0x55f9c3e18bef <unknown>\nE       #19 0x55f9c3e74558 <unknown>\nE       #20 0x55f9c3e74736 <unknown>\nE       #21 0x55f9c3e84e76 <unknown>\nE       #22 0x7f2c4cc9caa4 <unknown>\nE       #23 0x7f2c4cd29c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7ffb65d94a70>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"171a5b3f0abb8b33521b4c72ea77a61f\")>\ncur_language = '', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step('Start retest manual AT_55!624 The error message “This site can’t be reached” is displayed')\n    @pytest.mark.parametrize('cur_language', [''])\n    @pytest.mark.parametrize('cur_country', ['ae', 'gb', 'au'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_624\n    def test_624(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Menu section [Learn] > Menu item  [Market guides] > Click the link “Shares trading guide”\n                > Сlick the link “Netflix” > Сlick the link “Trade Coca-Cola shares”\n                > Сlick the link “KO” in the block “Performance of the Coca-Cola stock in recent years”\n        Language: EN\n        License: FCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"624\", 'Error message “This site can’t be reached” is displayed after clicking the link “KO” '\n                   'in the block “Performance of the Coca-Cola stock in recent years” on the page “How to trade '\n                   'Coca-Cola stocks” when EN language is selected (SCA / FCA / ASIC licenses)'\n        )\n    \n>       link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:864: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:152: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7ffb6516b2f0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"171a5b3f0abb8b33521b4c72ea77a61f\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","steps":[{"name":"Start retest manual AT_55!624 The error message “This site can’t be reached” is displayed","time":{"start":1743122388881,"stop":1743122396935,"duration":8054},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py\", line 864, in test_624\n    link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 78, in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 152, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1743122388881,"stop":1743122388883,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"171a5b3f0abb8b33521b4c72ea77a61f\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'624'"},{"name":"desc_tc","value":"'Error message “This site can’t be reached” is displayed after clicking the link “KO” in the block “Performance of the Coca-Cola stock in recent years” on the page “How to trade Coca-Cola stocks” when EN language is selected (SCA / FCA / ASIC licenses)'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1743122388883,"stop":1743122396934,"duration":8051},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 152, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"2025-03-28 00:13:28.412534   Start Authorization","time":{"start":1743122395855,"stop":1743122396934,"duration":1079},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"171a5b3f0abb8b33521b4c72ea77a61f\")>"},{"name":"link","value":"'https://capital.com/en-gb'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"171a5b3f0abb8b33521b4c72ea77a61f\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"171a5b3f0abb8b33521b4c72ea77a61f\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"6e3b23fb4987e7c2","name":"Screenshot","source":"6e3b23fb4987e7c2.png","type":"image/png","size":611008},{"uid":"5d85b15332629fa6","name":"stdout","source":"5d85b15332629fa6.txt","type":"text/plain","size":2239}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1743122533231,"stop":1743122533539,"duration":308},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!624 | Error message “This site can’t be reached” is displayed after clicking the link “KO” in the block “Performance of the Coca-Cola stock in recent years” on the page “How to trade Coca-Cola stocks” when EN language is selected (SCA / FCA / ASIC licenses)"},{"name":"feature","value":"Role: Auth"},{"name":"story","value":"Country: ae"},{"name":"tag","value":"bug_624"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az1945-274"},{"name":"thread","value":"33249-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":20},"items":[{"uid":"2428f56e6255f01a","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/360//#testresult/2428f56e6255f01a","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743035280146,"stop":1743035288455,"duration":8309}},{"uid":"15ab2e0bbc0d095f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/359//#testresult/15ab2e0bbc0d095f","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742948785113,"stop":1742948793525,"duration":8412}},{"uid":"a2da115ec3284041","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/358//#testresult/a2da115ec3284041","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742862193477,"stop":1742862201833,"duration":8356}},{"uid":"e3e3533d71b82356","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/357//#testresult/e3e3533d71b82356","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742775866197,"stop":1742775874314,"duration":8117}},{"uid":"5b7188194a029a38","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/356//#testresult/5b7188194a029a38","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742690198964,"stop":1742690207380,"duration":8416}},{"uid":"ebee850a31eebe94","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/355//#testresult/ebee850a31eebe94","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742603834947,"stop":1742603843474,"duration":8527}},{"uid":"adf9cab6473113ef","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/354//#testresult/adf9cab6473113ef","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742516412496,"stop":1742516420843,"duration":8347}},{"uid":"171ca6c9533f2438","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/353//#testresult/171ca6c9533f2438","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742430051569,"stop":1742430060071,"duration":8502}},{"uid":"8c72c96dc4dde6a5","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/352//#testresult/8c72c96dc4dde6a5","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742343167535,"stop":1742343175968,"duration":8433}},{"uid":"2091e227f4f421ad","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/351//#testresult/2091e227f4f421ad","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742258314411,"stop":1742258322771,"duration":8360}},{"uid":"fd0d0510c162eb1f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/350//#testresult/fd0d0510c162eb1f","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742171704007,"stop":1742171712437,"duration":8430}},{"uid":"1db483e2e36e01d9","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/349//#testresult/1db483e2e36e01d9","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742085621942,"stop":1742085630081,"duration":8139}},{"uid":"c46c4563a9cad5bc","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/348//#testresult/c46c4563a9cad5bc","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1741998158718,"stop":1741998167186,"duration":8468}},{"uid":"4745fbef97ca1427","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/347//#testresult/4745fbef97ca1427","status":"passed","time":{"start":1741917497872,"stop":1741917525717,"duration":27845}},{"uid":"434e595a541fdd76","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/346//#testresult/434e595a541fdd76","status":"passed","time":{"start":1741830348646,"stop":1741830376520,"duration":27874}},{"uid":"2360c786988f2ae2","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/345//#testresult/2360c786988f2ae2","status":"passed","time":{"start":1741750516034,"stop":1741750544763,"duration":28729}},{"uid":"3ca56956b3f60151","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/344//#testresult/3ca56956b3f60151","status":"passed","time":{"start":1741664416094,"stop":1741664445353,"duration":29259}},{"uid":"aff5c77195453062","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/343//#testresult/aff5c77195453062","status":"passed","time":{"start":1741571225847,"stop":1741571254196,"duration":28349}},{"uid":"5ab5669288cd78c7","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/342//#testresult/5ab5669288cd78c7","status":"passed","time":{"start":1741484280862,"stop":1741484308524,"duration":27662}}]},"tags":["us_55","bug_624"]},"source":"7916bbe6fb4c2cba.json","parameterValues":["'ae'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'Auth'","'Chrome'"]}