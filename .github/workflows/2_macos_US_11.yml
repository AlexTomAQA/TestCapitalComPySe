name: 2. MacOS, All US
on:
#  push:
  workflow_dispatch:
  
permissions:
  contents: write

#  schedule:
#    - cron: '00 13 * * *'
#    - cron: '10 06 * * *'

jobs:
  tests:
    name: I. Building environment and testing the capital.com website
    runs-on: macos-latest

    steps:
      - name: 1. Check out this repo, master branch
        uses: actions/checkout@v4
        with:
          ref: master

      - name: 2.1. Install Python
        if: always()
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.1"

      - name: 3.1. Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: 3.3. Install Neofetch
        if: always()
        run: brew install neofetch

#      - name: python3.11 -m pip install --upgrade pip
#        run: python3.11 -m pip install --upgrade pip
      - name: For Run hwinfo.py first time
        if: always()
        run: pip3 install psutil
      - name: For Run hwinfo.py first time
        if: always()
        run: pip3 install speedtest
      - name: Run hwinfo.py first time
        if: always()
        run: python3 tests/hwinfo.py

      - name: 4. Install Zbar for QReader
        if: always()
        run: brew install zbar

      - name: 4. install Poetry
        if: always()
        run: pip3 install poetry

#      - name: 4.1. python3.11 -m venv .venv
#        if: always()
#        run: python3 -m venv .venv
#      - name: 4.2. poetry env use python3.11
#        run: poetry env use python3.11
#
#      - name: pwd
#        run: pwd
#      - name: ls -la
#        run: ls -la

#      - name: 4.3. poetry shell
#        if: always()
#        run: poetry shell
#
      - name: 5. install dependencies
        if: always()
        run: poetry install

      - name: Run hwinfo.py
        if: always()
        run: poetry run python3 tests/hwinfo.py

#      - name: pwd
#        run: pwd
#      - name: ls -la
#        run: ls -la
#
      - name: 8. Run US_11-01-01 (Мила Д/Саша Т)
        if: always()
        run: poetry run pytest -vv -l --full-trace tests/US_11_Education/US_11-01-01_Learning_hub/US_11-01-01_Learning_hub.py
        continue-on-error: true

      - name: 8. Run US_11-01-05 (Мила Д/Саша Т)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-01-05_Trading_courses/US_11-01-05-00_Trading_courses_test.py
        continue-on-error: true
      - name: 8. Run US_11-01-05-01_test (Мила Д/Саша Т)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-01-05_Trading_courses/US_11-01-05-01_Trading_courses_test.py
        continue-on-error: true

      - name: 8. Run US_11.02.05.00 test (Сулейман/Саша Т/Дима)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-02-05_Cryptocurrency_trading/us_11-02-05-00_cryptocurrency_trading_test.py
        continue-on-error: true
      - name: 8. Run US_11.02.05.01 test (Сулейман/Саша Т/Дима)
        if: always()
        run: poetry run pytest --no-summary -v tests/US_11_Education/US_11-02-05_Cryptocurrency_trading/us_11-02-05-01_cryptocurrency_trading_test.py
        continue-on-error: true

      - name: Run hwinfo.py
        if: always()
        run: poetry run python3 tests/hwinfo.py

      - name: 9. Upload artifact "allure-results"
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results/
          retention-days: 1

  generate_report:
    name: II. Generate & Deploy Allure report
    runs-on: ubuntu-latest
    if: always()
    needs: [ tests ]

    steps:
      - name: 1. Get Allure history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: 2. Download Artifacts
        uses: actions/download-artifact@v3
        id: download
        with:
          name: allure-results
          path: allure-results

      - name: 3. Create Allure report
        uses: simple-elf/allure-report-action@master
        if: always()
        id: allure-report
        with:
          allure_results: allure-results
          allure_history: allure-history
          allure_report: allure-report
          gh_pages: gh-pages
          ref: gh-pages
          path: gh-pages
          keep_reports: 100

      - name: 4. Deploy report to Github Pages
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          personal_token: ${{ secrets.GITHUB_TOKEN }}
#          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: ./allure-history
          commit_message: ${{ github.event.head_commit.message }}

#      - name: 12. Send telegram message on push
#        uses: appleboy/telegram-action@master
#        if: always()
#        with:
#          to: ${{ secrets.TELEGRAM_TO_ALEXTOM22 }}
##           to: ${{ secrets.TELEGRAM_TO }}
#          token: ${{ secrets.TELEGRAM_TOKEN }}
##           disable_web_page_preview: true
#          message: |
#            Message from GitHub CI Actions
#
#            Testing of the "Capital.com" web application in the "macOS/Chrome" environment is completed!
#
#            See allure-result testing: https://${{ github.actor }}.github.io/TestCapitalCom/
##             Tests Repository: https://github.com/${{ github.repository }}
