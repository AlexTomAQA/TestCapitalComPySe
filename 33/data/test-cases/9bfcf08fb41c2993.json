{"uid":"9bfcf08fb41c2993","name":"TC_11.02.06_06 with parameters: en, ae, Auth","fullName":"tests.US_11_Education.US_11-02-06_Indices_trading.us_11-02-06_indices_trading_test.TestIndicesTrading#test_06_start_trading_in_content_block_button","historyId":"e9d13a4091478c40acc593edff8233be","time":{"start":1702586455863,"stop":1702586475811,"duration":19948},"description":"\n        Check: Button [Start trading] in article\n        Language: All. License: All.\n        ","descriptionHtml":"<pre><code>    Check: Button [Start trading] in article\n    Language: All. License: All.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Bug # 10. Loaded page with https://capital.com/trade-hangseng url, but expected the Trading platform inLive mode(timeout=30c)","statusTrace":"self = <us_11-02-06_indices_trading_test.TestIndicesTrading object at 0x7f5883d90cd0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3aee6fbefdf01cf68e56cde1d7d54b32\")>\ncur_language = '', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\ncur_item_link = 'https://capital.com/trade-hangseng', prob_run_tc = ''\n\n    @allure.step(\"Start test of button [Start trading] in content block\")\n    def test_06_start_trading_in_content_block_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link,\n            prob_run_tc):\n        \"\"\"\n        Check: Button [Start trading] in article\n        Language: All. License: All.\n        \"\"\"\n        test_title = (\"11.02.06\", \"Educations > Menu item [Indices Trading]\",\n                      \"06\", \"Testing button [Start trading] in Content block\")\n    \n        logger.info(f\"====== START testing {', '.join(test_title)} ======\")\n    \n        build_dynamic_arg_v2(self, d, worker_id, cur_language, cur_country, cur_role, prob_run_tc, *test_title)\n    \n        self.only_four_tests(cur_item_link)\n        self.not_for_the_sixth_test(cur_item_link)\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = ContentStartTrading(d, cur_item_link)\n        test_elements_list = test_element.arrange_v2_()\n    \n        for index, element in enumerate(test_elements_list):\n            logger.info(f\"Testing element #{index + 1}\")\n            if not test_element.element_click_v2(element):\n                logger.warning(f\"Testing element is not clicked\")\n                logger.info(f\"====== FAIL testing {', '.join(test_title)} ======\")\n                pytest.fail(\"Testing element is not clicked\")\n    \n            check_element = AssertClass(d, cur_item_link)\n            match cur_role:\n                case \"NoReg\":\n                    check_element.assert_signup(d, cur_language, cur_item_link)\n                case \"Reg/NoAuth\":\n                    check_element.assert_login(d, cur_language, cur_item_link)\n                case \"Auth\":\n>                   check_element.assert_trading_platform_v4(d, cur_item_link)\n\ntests/US_11_Education/US_11-02-06_Indices_trading/us_11-02-06_indices_trading_test.py:308: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/AssertClass.py:106: in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Capital.Trading_platform.trading_platform.TradingPlatform object at 0x7f5883e35790>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3aee6fbefdf01cf68e56cde1d7d54b32\")>\ncur_link = 'https://capital.com/trade-hangseng', tpd = False, tpi = False\ntrade_instrument = ''\n\n    @allure.step(\"Checking that the trading platform page has opened - ver 4\")\n    def should_be_trading_platform_page_v4(self, d, cur_link, tpd, tpi, trade_instrument):\n        \"\"\"\n        Check if the trading platform page for the corresponding trade instrument is opened\n        Args:\n            d: Webdriver\n            cur_link: Link in the list of 3 random items and start page of the sidebar\n            tpd: open Trade platform in Demo mode (True). Live mode (False)\n            tpi: open Trade platform for corresponding trade instrument (False)\n            trade_instrument: corresponding trade instrument (False)\n        \"\"\"\n        print(f\"{datetime.now()}   Checking that the trading platform page has opened (v4) =>\")\n        platform_url = data[\"PLATFORM_URL/\"]\n        cur_url = self.browser.current_url\n        if self.wait_for_target_url(platform_url, 15):\n    \n            self.should_be_page_title_v2(data[\"PAGE_TITLE\"])\n            self.should_be_platform_logo()\n            if tpd:\n                self.should_be_platform_demo_mode()\n                print(f\"{datetime.now()}   => The page with {cur_url} url was opened in DEMO mode\")\n            else:\n                self.should_be_platform_live_mode()\n                print(f\"{datetime.now()}   => The page with {cur_url} url was opened in lIVE mode\")\n            if tpi:\n                print(f\"{datetime.now()}   => Opened page with {cur_url} url for corresponding trading\"\n                      f\" instrument '{trade_instrument}'\")\n                self.should_be_corresponding_trading_instrument(cur_url, trade_instrument)\n    \n            assert True, 'Trading platform with title \"Trading Platform | Capital.com\" opened'\n            self.open_page()\n        else:\n            if tpd:\n                print(f\"{datetime.now()}   => Loaded page {self.browser.current_url} with not {platform_url} url\")\n                assert False, (f\"Bug # 9. Loaded page with {cur_url} url, but expected the Trading platform in\"\n                               f\"Demo mode(timeout=30c)\")\n            else:\n                print(f\"{datetime.now()}   => Loaded page {self.browser.current_url} with not {platform_url} url\")\n>               assert False, (f\"Bug # 10. Loaded page with {cur_url} url, but expected the Trading platform in\"\n                               f\"Live mode(timeout=30c)\")\nE               AssertionError: Bug # 10. Loaded page with https://capital.com/trade-hangseng url, but expected the Trading platform inLive mode(timeout=30c)\n\npages/Capital/Trading_platform/trading_platform.py:119: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1702586243482,"stop":1702586244398,"duration":916},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1702586243482,"stop":1702586243482,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"go","time":{"start":1702586244398,"stop":1702586244398,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1702586244398,"stop":1702586244398,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1702586244398,"stop":1702586244398,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1702586244399,"stop":1702586244399,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1702586244399,"stop":1702586244399,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1702586390515,"stop":1702586390515,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"prob_run_tc","time":{"start":1702586455862,"stop":1702586455863,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [Start trading] in article\n        Language: All. License: All.\n        ","status":"failed","statusMessage":"AssertionError: Bug # 10. Loaded page with https://capital.com/trade-hangseng url, but expected the Trading platform inLive mode(timeout=30c)","statusTrace":"self = <us_11-02-06_indices_trading_test.TestIndicesTrading object at 0x7f5883d90cd0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3aee6fbefdf01cf68e56cde1d7d54b32\")>\ncur_language = '', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\ncur_item_link = 'https://capital.com/trade-hangseng', prob_run_tc = ''\n\n    @allure.step(\"Start test of button [Start trading] in content block\")\n    def test_06_start_trading_in_content_block_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link,\n            prob_run_tc):\n        \"\"\"\n        Check: Button [Start trading] in article\n        Language: All. License: All.\n        \"\"\"\n        test_title = (\"11.02.06\", \"Educations > Menu item [Indices Trading]\",\n                      \"06\", \"Testing button [Start trading] in Content block\")\n    \n        logger.info(f\"====== START testing {', '.join(test_title)} ======\")\n    \n        build_dynamic_arg_v2(self, d, worker_id, cur_language, cur_country, cur_role, prob_run_tc, *test_title)\n    \n        self.only_four_tests(cur_item_link)\n        self.not_for_the_sixth_test(cur_item_link)\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = ContentStartTrading(d, cur_item_link)\n        test_elements_list = test_element.arrange_v2_()\n    \n        for index, element in enumerate(test_elements_list):\n            logger.info(f\"Testing element #{index + 1}\")\n            if not test_element.element_click_v2(element):\n                logger.warning(f\"Testing element is not clicked\")\n                logger.info(f\"====== FAIL testing {', '.join(test_title)} ======\")\n                pytest.fail(\"Testing element is not clicked\")\n    \n            check_element = AssertClass(d, cur_item_link)\n            match cur_role:\n                case \"NoReg\":\n                    check_element.assert_signup(d, cur_language, cur_item_link)\n                case \"Reg/NoAuth\":\n                    check_element.assert_login(d, cur_language, cur_item_link)\n                case \"Auth\":\n>                   check_element.assert_trading_platform_v4(d, cur_item_link)\n\ntests/US_11_Education/US_11-02-06_Indices_trading/us_11-02-06_indices_trading_test.py:308: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/AssertClass.py:106: in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Capital.Trading_platform.trading_platform.TradingPlatform object at 0x7f5883e35790>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3aee6fbefdf01cf68e56cde1d7d54b32\")>\ncur_link = 'https://capital.com/trade-hangseng', tpd = False, tpi = False\ntrade_instrument = ''\n\n    @allure.step(\"Checking that the trading platform page has opened - ver 4\")\n    def should_be_trading_platform_page_v4(self, d, cur_link, tpd, tpi, trade_instrument):\n        \"\"\"\n        Check if the trading platform page for the corresponding trade instrument is opened\n        Args:\n            d: Webdriver\n            cur_link: Link in the list of 3 random items and start page of the sidebar\n            tpd: open Trade platform in Demo mode (True). Live mode (False)\n            tpi: open Trade platform for corresponding trade instrument (False)\n            trade_instrument: corresponding trade instrument (False)\n        \"\"\"\n        print(f\"{datetime.now()}   Checking that the trading platform page has opened (v4) =>\")\n        platform_url = data[\"PLATFORM_URL/\"]\n        cur_url = self.browser.current_url\n        if self.wait_for_target_url(platform_url, 15):\n    \n            self.should_be_page_title_v2(data[\"PAGE_TITLE\"])\n            self.should_be_platform_logo()\n            if tpd:\n                self.should_be_platform_demo_mode()\n                print(f\"{datetime.now()}   => The page with {cur_url} url was opened in DEMO mode\")\n            else:\n                self.should_be_platform_live_mode()\n                print(f\"{datetime.now()}   => The page with {cur_url} url was opened in lIVE mode\")\n            if tpi:\n                print(f\"{datetime.now()}   => Opened page with {cur_url} url for corresponding trading\"\n                      f\" instrument '{trade_instrument}'\")\n                self.should_be_corresponding_trading_instrument(cur_url, trade_instrument)\n    \n            assert True, 'Trading platform with title \"Trading Platform | Capital.com\" opened'\n            self.open_page()\n        else:\n            if tpd:\n                print(f\"{datetime.now()}   => Loaded page {self.browser.current_url} with not {platform_url} url\")\n                assert False, (f\"Bug # 9. Loaded page with {cur_url} url, but expected the Trading platform in\"\n                               f\"Demo mode(timeout=30c)\")\n            else:\n                print(f\"{datetime.now()}   => Loaded page {self.browser.current_url} with not {platform_url} url\")\n>               assert False, (f\"Bug # 10. Loaded page with {cur_url} url, but expected the Trading platform in\"\n                               f\"Live mode(timeout=30c)\")\nE               AssertionError: Bug # 10. Loaded page with https://capital.com/trade-hangseng url, but expected the Trading platform inLive mode(timeout=30c)\n\npages/Capital/Trading_platform/trading_platform.py:119: AssertionError","steps":[{"name":"Start test of button [Start trading] in content block","time":{"start":1702586455863,"stop":1702586475810,"duration":19947},"status":"failed","statusMessage":"AssertionError: Bug # 10. Loaded page with https://capital.com/trade-hangseng url, but expected the Trading platform inLive mode(timeout=30c)\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_11_Education/US_11-02-06_Indices_trading/us_11-02-06_indices_trading_test.py\", line 308, in test_06_start_trading_in_content_block_button\n    check_element.assert_trading_platform_v4(d, cur_item_link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 106, in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 119, in should_be_trading_platform_page_v4\n    assert False, (f\"Bug # 10. Loaded page with {cur_url} url, but expected the Trading platform in\"\n","steps":[{"name":"Set preconditions","time":{"start":1702586455910,"stop":1702586460384,"duration":4474},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3aee6fbefdf01cf68e56cde1d7d54b32\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Works ARRANGE START_TRADING_IN_ARTICLE (generator) - ver 2","time":{"start":1702586460384,"stop":1702586460384,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Click button START_TRADING_IN_ARTICLE - ver 2","time":{"start":1702586460401,"stop":1702586460670,"duration":269},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"web_element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"3aee6fbefdf01cf68e56cde1d7d54b32\", element=\"98F37C6CBE147E8C6FFD2A1609F8E03F_element_1570\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Checking that \"Trading platform\" page opened - ver 4","time":{"start":1702586460670,"stop":1702586475810,"duration":15140},"status":"failed","statusMessage":"AssertionError: Bug # 10. Loaded page with https://capital.com/trade-hangseng url, but expected the Trading platform inLive mode(timeout=30c)\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 106, in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 119, in should_be_trading_platform_page_v4\n    assert False, (f\"Bug # 10. Loaded page with {cur_url} url, but expected the Trading platform in\"\n","steps":[{"name":"Checking that the trading platform page has opened - ver 4","time":{"start":1702586460670,"stop":1702586475810,"duration":15140},"status":"failed","statusMessage":"AssertionError: Bug # 10. Loaded page with https://capital.com/trade-hangseng url, but expected the Trading platform inLive mode(timeout=30c)\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 119, in should_be_trading_platform_page_v4\n    assert False, (f\"Bug # 10. Loaded page with {cur_url} url, but expected the Trading platform in\"\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3aee6fbefdf01cf68e56cde1d7d54b32\")>"},{"name":"cur_link","value":"'https://capital.com/trade-hangseng'"},{"name":"tpd","value":"False"},{"name":"tpi","value":"False"},{"name":"trade_instrument","value":"''"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3aee6fbefdf01cf68e56cde1d7d54b32\")>"},{"name":"cur_link","value":"'https://capital.com/trade-hangseng'"},{"name":"tpd","value":"False"},{"name":"tpi","value":"False"},{"name":"trade_instrument","value":"''"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3aee6fbefdf01cf68e56cde1d7d54b32\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_item_link","value":"'https://capital.com/trade-hangseng'"},{"name":"prob_run_tc","value":"''"}],"shouldDisplayMessage":false,"stepsCount":5,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"ee2ca41b0992b1fd","name":"Screenshot","source":"ee2ca41b0992b1fd.png","type":"image/png","size":263125},{"uid":"808d7bae27e73c73","name":"log","source":"808d7bae27e73c73.txt","type":"text/plain","size":781},{"uid":"ceea65982a08e17d","name":"stdout","source":"ceea65982a08e17d.txt","type":"text/plain","size":1787}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"go::0","time":{"start":1702586918123,"stop":1702586918287,"duration":164},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Language: en / US_11.02.06 | Educations > Menu item [Indices Trading]"},{"name":"feature","value":"Country: ae / Role: Auth / TS_11.02.06 | Educations > Menu item [Indices Trading]"},{"name":"story","value":"TC_11.02.06_06 | Testing button [Start trading] in Content block"},{"name":"tag","value":"us_11_02_06"},{"name":"parentSuite","value":"tests.US_11_Education.US_11-02-06_Indices_trading"},{"name":"suite","value":"us_11-02-06_indices_trading_test"},{"name":"subSuite","value":"TestIndicesTrading"},{"name":"host","value":"fv-az837-698"},{"name":"thread","value":"35496-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_11_Education.US_11-02-06_Indices_trading.us_11-02-06_indices_trading_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_item_link","value":"'https://capital.com/trade-hangseng'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_role","value":"'Auth'"},{"name":"go","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["us_11_02_06"]},"source":"9bfcf08fb41c2993.json","parameterValues":["'ae'","'https://capital.com/trade-hangseng'","''","'aqa.tomelo.an@gmail.com'","'iT9Vgqi6d$fiZ*Z'","'Auth'","'chrome'"]}