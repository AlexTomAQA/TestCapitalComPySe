{"uid":"d12a0a405575ca47","name":"TC_00.00_105 | Testing button [Sell] in Block 'Our markets' 'Indices' market, 'Middle' instrument. Bid:00.00_105-en.gb.NoReg","fullName":"tests.US_00_Main_page.US_00-00_Main_page.us_00-00_main_page_test.TestMainPage#test_105_our_markets_block_sell_button","historyId":"28e086cbffb20162bb094107ccd07ff1","time":{"start":1716008318396,"stop":1716008319443,"duration":1047},"description":"\n        Check: Button [Sell] in Block 'Our markets' Main Page\n        Language: EN. License: FCA.\n        ","descriptionHtml":"<pre><code>    Check: Button [Sell] in Block 'Our markets' Main Page\n    Language: EN. License: FCA.\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=124.0.6367.208)\nStacktrace:\n\tGetHandleVerifier [0x0041C113+48259]\n\t(No symbol) [0x003ACA41]\n\t(No symbol) [0x002A08A3]\n\t(No symbol) [0x0028C89F]\n\t(No symbol) [0x0028B4DD]\n\t(No symbol) [0x0028B8BB]\n\t(No symbol) [0x002A315A]\n\t(No symbol) [0x0031A297]\n\t(No symbol) [0x00300D9C]\n\t(No symbol) [0x00319B9C]\n\t(No symbol) [0x00300B36]\n\t(No symbol) [0x002D570D]\n\t(No symbol) [0x002D62CD]\n\tGetHandleVerifier [0x006D65A3+2908435]\n\tGetHandleVerifier [0x00713BBB+3159851]\n\tGetHandleVerifier [0x004B50CB+674875]\n\tGetHandleVerifier [0x004BB28C+699900]\n\t(No symbol) [0x003B6244]\n\t(No symbol) [0x003B2298]\n\t(No symbol) [0x003B242C]\n\t(No symbol) [0x003A4BB0]\n\tBaseThreadInitThunk [0x767867F9+25]\n\tRtlGetFullPathName_UEx [0x77CF7F4D+173]\n\tRtlGetFullPathName_UEx [0x77CF7F1B+123]","statusTrace":"self = <us_00-00_main_page_test.TestMainPage object at 0x00000204CC494B30>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f49879dc0b28b2ae4157e20fab45a7b6\")>\ncur_language = '', cur_country = 'gb', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_market = 'Indices', instrument = 'Middle'\n\n    @allure.step(\"Start test of button [Sell] in Block 'Our markets'\")\n    @pytest.mark.test_105\n    def test_105_our_markets_block_sell_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_market, instrument):\n        \"\"\"\n        Check: Button [Sell] in Block 'Our markets' Main Page\n        Language: EN. License: FCA.\n        \"\"\"\n        # test_title = (\"00\", \"Main Page\",\n        #               \".00_105\",\n        #               f\"Testing button [Sell] in Block 'Our markets' {market} market, {instrument} instrument\")\n    \n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"00\", \"Main Page\",\n            \".00_105\",\n            f\"Testing button [Sell] in Block 'Our markets' '{cur_market}' market, '{instrument}' instrument\",\n            False, True\n        )\n    \n        Common().check_language_in_list_and_skip_if_not_present(cur_language, [''])\n        Common().check_country_in_list_and_skip_if_not_present(cur_country, ['gb'])\n        Common().check_market_in_list_and_skip_if_present(cur_market, [\n            'Cryptocurrencies', 'Commodities', 'Shares', 'Forex'\n        ])\n    \n        page_conditions = NewConditions(d, \"\")\n>       main_page_link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL_NEW, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests\\US_00_Main_page\\US_00-00_Main_page\\us_00-00_main_page_test.py:183: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\ReTestsManual\\pages\\conditions_new.py:99: in preconditions\n    self.open_page()\npages\\base_page.py:150: in open_page\n    self.driver.get(link)\nC:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\nC:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000204CC5CC4D0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"invalid argument\\\\n  (Session info: chrome=1...Thunk [0x767867F9+25]\\\\n\\\\tRtlGetFullPathName_UEx [0x77CF7F4D+173]\\\\n\\\\tRtlGetFullPathName_UEx [0x77CF7F1B+123]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\nE         (Session info: chrome=124.0.6367.208)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0041C113+48259]\nE       \t(No symbol) [0x003ACA41]\nE       \t(No symbol) [0x002A08A3]\nE       \t(No symbol) [0x0028C89F]\nE       \t(No symbol) [0x0028B4DD]\nE       \t(No symbol) [0x0028B8BB]\nE       \t(No symbol) [0x002A315A]\nE       \t(No symbol) [0x0031A297]\nE       \t(No symbol) [0x00300D9C]\nE       \t(No symbol) [0x00319B9C]\nE       \t(No symbol) [0x00300B36]\nE       \t(No symbol) [0x002D570D]\nE       \t(No symbol) [0x002D62CD]\nE       \tGetHandleVerifier [0x006D65A3+2908435]\nE       \tGetHandleVerifier [0x00713BBB+3159851]\nE       \tGetHandleVerifier [0x004B50CB+674875]\nE       \tGetHandleVerifier [0x004BB28C+699900]\nE       \t(No symbol) [0x003B6244]\nE       \t(No symbol) [0x003B2298]\nE       \t(No symbol) [0x003B242C]\nE       \t(No symbol) [0x003A4BB0]\nE       \tBaseThreadInitThunk [0x767867F9+25]\nE       \tRtlGetFullPathName_UEx [0x77CF7F4D+173]\nE       \tRtlGetFullPathName_UEx [0x77CF7F1B+123]\n\nC:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: InvalidArgumentException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1716008046496,"stop":1716008077432,"duration":30936},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1716008077432,"stop":1716008077432,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1716008077433,"stop":1716008077433,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1716008077433,"stop":1716008077433,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1716008077433,"stop":1716008077433,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1716008077433,"stop":1716008077433,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1716008307320,"stop":1716008307320,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"instrument","time":{"start":1716008318396,"stop":1716008318396,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_market","time":{"start":1716008318396,"stop":1716008318396,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [Sell] in Block 'Our markets' Main Page\n        Language: EN. License: FCA.\n        ","status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=124.0.6367.208)\nStacktrace:\n\tGetHandleVerifier [0x0041C113+48259]\n\t(No symbol) [0x003ACA41]\n\t(No symbol) [0x002A08A3]\n\t(No symbol) [0x0028C89F]\n\t(No symbol) [0x0028B4DD]\n\t(No symbol) [0x0028B8BB]\n\t(No symbol) [0x002A315A]\n\t(No symbol) [0x0031A297]\n\t(No symbol) [0x00300D9C]\n\t(No symbol) [0x00319B9C]\n\t(No symbol) [0x00300B36]\n\t(No symbol) [0x002D570D]\n\t(No symbol) [0x002D62CD]\n\tGetHandleVerifier [0x006D65A3+2908435]\n\tGetHandleVerifier [0x00713BBB+3159851]\n\tGetHandleVerifier [0x004B50CB+674875]\n\tGetHandleVerifier [0x004BB28C+699900]\n\t(No symbol) [0x003B6244]\n\t(No symbol) [0x003B2298]\n\t(No symbol) [0x003B242C]\n\t(No symbol) [0x003A4BB0]\n\tBaseThreadInitThunk [0x767867F9+25]\n\tRtlGetFullPathName_UEx [0x77CF7F4D+173]\n\tRtlGetFullPathName_UEx [0x77CF7F1B+123]","statusTrace":"self = <us_00-00_main_page_test.TestMainPage object at 0x00000204CC494B30>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f49879dc0b28b2ae4157e20fab45a7b6\")>\ncur_language = '', cur_country = 'gb', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_market = 'Indices', instrument = 'Middle'\n\n    @allure.step(\"Start test of button [Sell] in Block 'Our markets'\")\n    @pytest.mark.test_105\n    def test_105_our_markets_block_sell_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_market, instrument):\n        \"\"\"\n        Check: Button [Sell] in Block 'Our markets' Main Page\n        Language: EN. License: FCA.\n        \"\"\"\n        # test_title = (\"00\", \"Main Page\",\n        #               \".00_105\",\n        #               f\"Testing button [Sell] in Block 'Our markets' {market} market, {instrument} instrument\")\n    \n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"00\", \"Main Page\",\n            \".00_105\",\n            f\"Testing button [Sell] in Block 'Our markets' '{cur_market}' market, '{instrument}' instrument\",\n            False, True\n        )\n    \n        Common().check_language_in_list_and_skip_if_not_present(cur_language, [''])\n        Common().check_country_in_list_and_skip_if_not_present(cur_country, ['gb'])\n        Common().check_market_in_list_and_skip_if_present(cur_market, [\n            'Cryptocurrencies', 'Commodities', 'Shares', 'Forex'\n        ])\n    \n        page_conditions = NewConditions(d, \"\")\n>       main_page_link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL_NEW, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests\\US_00_Main_page\\US_00-00_Main_page\\us_00-00_main_page_test.py:183: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\ReTestsManual\\pages\\conditions_new.py:99: in preconditions\n    self.open_page()\npages\\base_page.py:150: in open_page\n    self.driver.get(link)\nC:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\nC:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000204CC5CC4D0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"invalid argument\\\\n  (Session info: chrome=1...Thunk [0x767867F9+25]\\\\n\\\\tRtlGetFullPathName_UEx [0x77CF7F4D+173]\\\\n\\\\tRtlGetFullPathName_UEx [0x77CF7F1B+123]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\nE         (Session info: chrome=124.0.6367.208)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0041C113+48259]\nE       \t(No symbol) [0x003ACA41]\nE       \t(No symbol) [0x002A08A3]\nE       \t(No symbol) [0x0028C89F]\nE       \t(No symbol) [0x0028B4DD]\nE       \t(No symbol) [0x0028B8BB]\nE       \t(No symbol) [0x002A315A]\nE       \t(No symbol) [0x0031A297]\nE       \t(No symbol) [0x00300D9C]\nE       \t(No symbol) [0x00319B9C]\nE       \t(No symbol) [0x00300B36]\nE       \t(No symbol) [0x002D570D]\nE       \t(No symbol) [0x002D62CD]\nE       \tGetHandleVerifier [0x006D65A3+2908435]\nE       \tGetHandleVerifier [0x00713BBB+3159851]\nE       \tGetHandleVerifier [0x004B50CB+674875]\nE       \tGetHandleVerifier [0x004BB28C+699900]\nE       \t(No symbol) [0x003B6244]\nE       \t(No symbol) [0x003B2298]\nE       \t(No symbol) [0x003B242C]\nE       \t(No symbol) [0x003A4BB0]\nE       \tBaseThreadInitThunk [0x767867F9+25]\nE       \tRtlGetFullPathName_UEx [0x77CF7F4D+173]\nE       \tRtlGetFullPathName_UEx [0x77CF7F1B+123]\n\nC:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: InvalidArgumentException","steps":[{"name":"Start test of button [Sell] in Block 'Our markets'","time":{"start":1716008318396,"stop":1716008319428,"duration":1032},"status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=124.0.6367.208)\nStacktrace:\n\tGetHandleVerifier [0x0041C113+48259]\n\t(No symbol) [0x003ACA41]\n\t(No symbol) [0x002A08A3]\n\t(No symbol) [0x0028C89F]\n\t(No symbol) [0x0028B4DD]\n\t(No symbol) [0x0028B8BB]\n\t(No symbol) [0x002A315A]\n\t(No symbol) [0x0031A297]\n\t(No symbol) [0x00300D9C]\n\t(No symbol) [0x00319B9C]\n\t(No symbol) [0x00300B36]\n\t(No symbol) [0x002D570D]\n\t(No symbol) [0x002D62CD]\n\tGetHandleVerifier [0x006D65A3+2908435]\n\tGetHandleVerifier [0x00713BBB+3159851]\n\tGetHandleVerifier [0x004B50CB+674875]\n\tGetHandleVerifier [0x004BB28C+699900]\n\t(No symbol) [0x003B6244]\n\t(No symbol) [0x003B2298]\n\t(No symbol) [0x003B242C]\n\t(No symbol) [0x003A4BB0]\n\tBaseThreadInitThunk [0x767867F9+25]\n\tRtlGetFullPathName_UEx [0x77CF7F4D+173]\n\tRtlGetFullPathName_UEx [0x77CF7F1B+123]\n\n","statusTrace":"  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\a\\TestCapitalComPySe\\TestCapitalComPySe\\tests\\US_00_Main_page\\US_00-00_Main_page\\us_00-00_main_page_test.py\", line 183, in test_105_our_markets_block_sell_button\n    main_page_link = page_conditions.preconditions(\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\a\\TestCapitalComPySe\\TestCapitalComPySe\\tests\\ReTestsManual\\pages\\conditions_new.py\", line 99, in preconditions\n    self.open_page()\n  File \"D:\\a\\TestCapitalComPySe\\TestCapitalComPySe\\pages\\base_page.py\", line 150, in open_page\n    self.driver.get(link)\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 356, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"   Set New preconditions","time":{"start":1716008318411,"stop":1716008319428,"duration":1017},"status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=124.0.6367.208)\nStacktrace:\n\tGetHandleVerifier [0x0041C113+48259]\n\t(No symbol) [0x003ACA41]\n\t(No symbol) [0x002A08A3]\n\t(No symbol) [0x0028C89F]\n\t(No symbol) [0x0028B4DD]\n\t(No symbol) [0x0028B8BB]\n\t(No symbol) [0x002A315A]\n\t(No symbol) [0x0031A297]\n\t(No symbol) [0x00300D9C]\n\t(No symbol) [0x00319B9C]\n\t(No symbol) [0x00300B36]\n\t(No symbol) [0x002D570D]\n\t(No symbol) [0x002D62CD]\n\tGetHandleVerifier [0x006D65A3+2908435]\n\tGetHandleVerifier [0x00713BBB+3159851]\n\tGetHandleVerifier [0x004B50CB+674875]\n\tGetHandleVerifier [0x004BB28C+699900]\n\t(No symbol) [0x003B6244]\n\t(No symbol) [0x003B2298]\n\t(No symbol) [0x003B242C]\n\t(No symbol) [0x003A4BB0]\n\tBaseThreadInitThunk [0x767867F9+25]\n\tRtlGetFullPathName_UEx [0x77CF7F4D+173]\n\tRtlGetFullPathName_UEx [0x77CF7F1B+123]\n\n","statusTrace":"  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\a\\TestCapitalComPySe\\TestCapitalComPySe\\tests\\ReTestsManual\\pages\\conditions_new.py\", line 99, in preconditions\n    self.open_page()\n  File \"D:\\a\\TestCapitalComPySe\\TestCapitalComPySe\\pages\\base_page.py\", line 150, in open_page\n    self.driver.get(link)\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 356, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"2024-05-18 04:54:06.371283   Start Checking Captcha","time":{"start":1716008318428,"stop":1716008319428,"duration":1000},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f49879dc0b28b2ae4157e20fab45a7b6\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'gb'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f49879dc0b28b2ae4157e20fab45a7b6\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'gb'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_market","value":"'Indices'"},{"name":"instrument","value":"'Middle'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"fb5d5aeadcd53599","name":"Screenshot","source":"fb5d5aeadcd53599.png","type":"image/png","size":113904},{"uid":"d74486913ca1fb7a","name":"stdout","source":"d74486913ca1fb7a.txt","type":"text/plain","size":1264}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1716008338420,"stop":1716008340733,"duration":2313},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_00 | Main Page"},{"name":"feature","value":"Language: en"},{"name":"story","value":"Country: gb / Role: NoReg"},{"name":"tag","value":"test_105"},{"name":"tag","value":"us_00_00"},{"name":"parentSuite","value":"tests.US_00_Main_page.US_00-00_Main_page"},{"name":"suite","value":"us_00-00_main_page_test"},{"name":"subSuite","value":"TestMainPage"},{"name":"host","value":"fv-az1760-216"},{"name":"thread","value":"6196-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_00_Main_page.US_00-00_Main_page.us_00-00_main_page_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'gb'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_market","value":"'Indices'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoReg'"},{"name":"d","value":"'Chrome'"},{"name":"instrument","value":"'Middle'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["test_105","us_00_00"]},"source":"d12a0a405575ca47.json","parameterValues":["'gb'","''","'test001.miketar+1@gmail.com'","'Indices'","'Qwer1234-!@#$'","'NoReg'","'Chrome'","'Middle'"]}