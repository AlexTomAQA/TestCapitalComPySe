{"uid":"86db5dbf055e5552","name":"TC_11.02.06.01_03 | Testing button [Trade] in Most traded block. Bid:11.02.06.01_03-it.de.Auth","fullName":"tests.US_11_Education.US_11-02-06_Indices_trading.us_11-02-06-01_indices_trading_test.TestIndicesTrading#test_03_most_traded_trade_button","historyId":"929029680a3f1ab55587089723e761e3","time":{"start":1712225520610,"stop":1712225527423,"duration":6813},"description":"\n        Check: Button [Trade] in Most traded block\n        Language: EN, DE, ES, IT, RU, ZH. License: All (Except: FCA).\n        ","descriptionHtml":"<pre><code>    Check: Button [Trade] in Most traded block\n    Language: EN, DE, ES, IT, RU, ZH. License: All (Except: FCA).\n</code></pre>\n","status":"broken","statusMessage":"AttributeError: 'list' object has no attribute 'text'","statusTrace":"self = <us_11-02-06-01_indices_trading_test.TestIndicesTrading object at 0x7f163fdba240>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f05012c3bffb4f3c2eddefafb466b693\")>\ncur_language = 'it', cur_country = 'de', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_item_link = 'https://capital.com/it/negozia-cac-40'\n\n    @allure.step(\"Start test of buttons [Trade] in Most traded block\")\n    @pytest.mark.test_03\n    def test_03_most_traded_trade_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link):\n        \"\"\"\n        Check: Button [Trade] in Most traded block\n        Language: EN, DE, ES, IT, RU, ZH. License: All (Except: FCA).\n        \"\"\"\n        test_title = (\"11.02.06\", \"Education > Menu item [Indices Trading]\",\n                      \".01_03\", \"Testing button [Trade] in Most traded block\")\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role, *test_title)\n    \n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n        Common().check_language_in_list_and_skip_if_not_present(\n            cur_language, [\"\", \"de\", \"es\", \"it\", \"ru\", \"zh\"])\n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = ButtonTradeOnWidgetMostTraded(d, cur_item_link, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link)\n\ntests/US_11_Education/US_11-02-06_Indices_trading/us_11-02-06-01_indices_trading_test.py:138: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/MostTradedWidgetTradeButton.py:50: in full_test_with_tpi\n    test_element.assert_trading_platform_v4(d, cur_item_link, False, True, trade_instrument)\npages/Elements/AssertClass.py:164: in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\npages/Capital/Trading_platform/trading_platform.py:131: in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Capital.Trading_platform.trading_platform.TradingPlatform object at 0x7f163fe412b0>\ntest_link = 'https://capital.com/it/negozia-cac-40'\ntrade_instrument = 'US Tech 100'\n\n    def should_be_corresponding_trading_instrument(self, test_link, trade_instrument):\n        \"\"\"\n        Check Trading platform is opened for corresponding trade instrument\n        \"\"\"\n        allure.step(f\"{datetime.now()}   Check if Trading platform open for corresponding trade instrument\")\n    \n        # cur_url = self.driver.current_url\n        print(f\"\\n{datetime.now()}   trade_instrument = '{trade_instrument}'\")\n        # trade_instrument_name = trade_instrument.split(\" \")[0]\n        # print(f\"{datetime.now()}   => trade_instrument_name = '{trade_instrument_name}'\")\n    \n        # 4.1. проверяем, что открыта трейдинговая платформа на вкладке [Charts]\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.1. Check that Trading Platform is opened in Chart mode\")\n        menu_chart = self.elements_are_present(*ChartingLocators.MENU_CHART)\n        if len(menu_chart) == 0:\n            print(f\"{datetime.now()}   => Trading Platform opened, but not Chart mode\")\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '14', self.link)\n            msg = \"Bug # 14. Trading platform opened, but not Chart mode\"\n            Common().assert_true_false(False, msg)\n        print(f\"{datetime.now()}   => Trading Platform opened in Chart mode\")\n    \n        # 4.2. определяем, какие вкладки открыты и избегаем ошибки пустого списка\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.2. Check that Top Charts List of Trading Platform not empty =>\")\n        top_chart_trade_list = self.elements_are_located(TradingInstruments.LIST_TRADE_INSTRUMENTS, 5)\n        if len(top_chart_trade_list) == 0:\n            print(f\"{datetime.now()}   => Trading Platform opened in Chart mode, but Top Charts List is empty\")\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '15', self.link)\n            msg = (\"Bug # 15. Trading platform was opened, \"\n                   \"but does no contain any trade instrument in the Top Charts List\")\n            Common().assert_true_false(False, msg)\n            # Common().browser_back_to_link_and_test_fail(self.driver, test_link, msg)\n    \n        # 4.3. проверяем, открыты ли детали выбранного торгового инструмента\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.3. Check that opened trade instrument info page =>\")\n        open_ticket = self.driver.find_elements(*TradingInstruments.OPEN_TICKET_TRADE_INSTRUMENTS)\n        if len(open_ticket) == 0:\n            msg = (\"Trading platform was opened, \"\n                   \"but does not contain any trading info\")\n            print(f\"{datetime.now()}   => {msg}\")\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '16', self.link)\n            Common().pytest_fail(f\"Bug # 16. {msg}\")\n    \n        # 4.4. проверяем, открыты ли детали выбранного торгового инструмента\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.4. Check that opened Info page of selected '{trade_instrument}' trade instrument =>\")\n        print(f\"{datetime.now()}   Trading instrument - '{trade_instrument}'\")\n>       print(f\"{datetime.now()}   Title opened trading instrument info page - '{open_ticket.text}'\")\nE       AttributeError: 'list' object has no attribute 'text'\n\npages/Capital/Trading_platform/trading_platform.py:338: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1712225489877,"stop":1712225490266,"duration":389},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1712225490266,"stop":1712225490266,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1712225490266,"stop":1712225490266,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1712225490266,"stop":1712225490266,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1712225490266,"stop":1712225490266,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1712225490266,"stop":1712225490266,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1712225490267,"stop":1712225490267,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [Trade] in Most traded block\n        Language: EN, DE, ES, IT, RU, ZH. License: All (Except: FCA).\n        ","status":"broken","statusMessage":"AttributeError: 'list' object has no attribute 'text'","statusTrace":"self = <us_11-02-06-01_indices_trading_test.TestIndicesTrading object at 0x7f163fdba240>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f05012c3bffb4f3c2eddefafb466b693\")>\ncur_language = 'it', cur_country = 'de', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_item_link = 'https://capital.com/it/negozia-cac-40'\n\n    @allure.step(\"Start test of buttons [Trade] in Most traded block\")\n    @pytest.mark.test_03\n    def test_03_most_traded_trade_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link):\n        \"\"\"\n        Check: Button [Trade] in Most traded block\n        Language: EN, DE, ES, IT, RU, ZH. License: All (Except: FCA).\n        \"\"\"\n        test_title = (\"11.02.06\", \"Education > Menu item [Indices Trading]\",\n                      \".01_03\", \"Testing button [Trade] in Most traded block\")\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role, *test_title)\n    \n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n        Common().check_language_in_list_and_skip_if_not_present(\n            cur_language, [\"\", \"de\", \"es\", \"it\", \"ru\", \"zh\"])\n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = ButtonTradeOnWidgetMostTraded(d, cur_item_link, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link)\n\ntests/US_11_Education/US_11-02-06_Indices_trading/us_11-02-06-01_indices_trading_test.py:138: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/MostTradedWidgetTradeButton.py:50: in full_test_with_tpi\n    test_element.assert_trading_platform_v4(d, cur_item_link, False, True, trade_instrument)\npages/Elements/AssertClass.py:164: in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\npages/Capital/Trading_platform/trading_platform.py:131: in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Capital.Trading_platform.trading_platform.TradingPlatform object at 0x7f163fe412b0>\ntest_link = 'https://capital.com/it/negozia-cac-40'\ntrade_instrument = 'US Tech 100'\n\n    def should_be_corresponding_trading_instrument(self, test_link, trade_instrument):\n        \"\"\"\n        Check Trading platform is opened for corresponding trade instrument\n        \"\"\"\n        allure.step(f\"{datetime.now()}   Check if Trading platform open for corresponding trade instrument\")\n    \n        # cur_url = self.driver.current_url\n        print(f\"\\n{datetime.now()}   trade_instrument = '{trade_instrument}'\")\n        # trade_instrument_name = trade_instrument.split(\" \")[0]\n        # print(f\"{datetime.now()}   => trade_instrument_name = '{trade_instrument_name}'\")\n    \n        # 4.1. проверяем, что открыта трейдинговая платформа на вкладке [Charts]\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.1. Check that Trading Platform is opened in Chart mode\")\n        menu_chart = self.elements_are_present(*ChartingLocators.MENU_CHART)\n        if len(menu_chart) == 0:\n            print(f\"{datetime.now()}   => Trading Platform opened, but not Chart mode\")\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '14', self.link)\n            msg = \"Bug # 14. Trading platform opened, but not Chart mode\"\n            Common().assert_true_false(False, msg)\n        print(f\"{datetime.now()}   => Trading Platform opened in Chart mode\")\n    \n        # 4.2. определяем, какие вкладки открыты и избегаем ошибки пустого списка\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.2. Check that Top Charts List of Trading Platform not empty =>\")\n        top_chart_trade_list = self.elements_are_located(TradingInstruments.LIST_TRADE_INSTRUMENTS, 5)\n        if len(top_chart_trade_list) == 0:\n            print(f\"{datetime.now()}   => Trading Platform opened in Chart mode, but Top Charts List is empty\")\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '15', self.link)\n            msg = (\"Bug # 15. Trading platform was opened, \"\n                   \"but does no contain any trade instrument in the Top Charts List\")\n            Common().assert_true_false(False, msg)\n            # Common().browser_back_to_link_and_test_fail(self.driver, test_link, msg)\n    \n        # 4.3. проверяем, открыты ли детали выбранного торгового инструмента\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.3. Check that opened trade instrument info page =>\")\n        open_ticket = self.driver.find_elements(*TradingInstruments.OPEN_TICKET_TRADE_INSTRUMENTS)\n        if len(open_ticket) == 0:\n            msg = (\"Trading platform was opened, \"\n                   \"but does not contain any trading info\")\n            print(f\"{datetime.now()}   => {msg}\")\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '16', self.link)\n            Common().pytest_fail(f\"Bug # 16. {msg}\")\n    \n        # 4.4. проверяем, открыты ли детали выбранного торгового инструмента\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.4. Check that opened Info page of selected '{trade_instrument}' trade instrument =>\")\n        print(f\"{datetime.now()}   Trading instrument - '{trade_instrument}'\")\n>       print(f\"{datetime.now()}   Title opened trading instrument info page - '{open_ticket.text}'\")\nE       AttributeError: 'list' object has no attribute 'text'\n\npages/Capital/Trading_platform/trading_platform.py:338: AttributeError","steps":[{"name":"Start test of buttons [Trade] in Most traded block","time":{"start":1712225520610,"stop":1712225527422,"duration":6812},"status":"broken","statusMessage":"AttributeError: 'list' object has no attribute 'text'\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_11_Education/US_11-02-06_Indices_trading/us_11-02-06-01_indices_trading_test.py\", line 138, in test_03_most_traded_trade_button\n    test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/MostTradedWidgetTradeButton.py\", line 50, in full_test_with_tpi\n    test_element.assert_trading_platform_v4(d, cur_item_link, False, True, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 164, in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 131, in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 338, in should_be_corresponding_trading_instrument\n    print(f\"{datetime.now()}   Title opened trading instrument info page - '{open_ticket.text}'\")\n                                                                             ^^^^^^^^^^^^^^^^\n","steps":[{"name":"Preconditions","time":{"start":1712225520618,"stop":1712225521888,"duration":1270},"status":"passed","steps":[{"name":"2024-04-04 10:11:29.754546   Start Checking Captcha","time":{"start":1712225520835,"stop":1712225521886,"duration":1051},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f05012c3bffb4f3c2eddefafb466b693\")>"},{"name":"host","value":"'https://capital.com/'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'it'"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-04-04 10:11:29.751216   Start Full test Trade button on Most Traded widget","time":{"start":1712225521889,"stop":1712225527421,"duration":5532},"status":"broken","statusMessage":"AttributeError: 'list' object has no attribute 'text'\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/MostTradedWidgetTradeButton.py\", line 50, in full_test_with_tpi\n    test_element.assert_trading_platform_v4(d, cur_item_link, False, True, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 164, in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 131, in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 338, in should_be_corresponding_trading_instrument\n    print(f\"{datetime.now()}   Title opened trading instrument info page - '{open_ticket.text}'\")\n                                                                             ^^^^^^^^^^^^^^^^\n","steps":[{"name":"Click Trade button on Most traded widget","time":{"start":1712225521905,"stop":1712225525531,"duration":3626},"status":"passed","steps":[{"name":"2024-04-04 10:11:29.743070   Check that form [Sign up] opened","time":{"start":1712225521905,"stop":1712225523435,"duration":1530},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"timeout","value":"1"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"random_index","value":"0"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Checking that \"Trading platform\" page opened - ver 4","time":{"start":1712225525531,"stop":1712225527421,"duration":1890},"status":"broken","statusMessage":"AttributeError: 'list' object has no attribute 'text'\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 164, in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 131, in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 338, in should_be_corresponding_trading_instrument\n    print(f\"{datetime.now()}   Title opened trading instrument info page - '{open_ticket.text}'\")\n                                                                             ^^^^^^^^^^^^^^^^\n","steps":[{"name":"Checking that the trading platform page has opened - ver 4","time":{"start":1712225525531,"stop":1712225527420,"duration":1889},"status":"broken","statusMessage":"AttributeError: 'list' object has no attribute 'text'\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 131, in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 338, in should_be_corresponding_trading_instrument\n    print(f\"{datetime.now()}   Title opened trading instrument info page - '{open_ticket.text}'\")\n                                                                             ^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f05012c3bffb4f3c2eddefafb466b693\")>"},{"name":"test_link","value":"'https://capital.com/it/negozia-cac-40'"},{"name":"tpd","value":"False"},{"name":"tpi","value":"True"},{"name":"trade_instrument","value":"'US Tech 100'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f05012c3bffb4f3c2eddefafb466b693\")>"},{"name":"cur_link","value":"'https://capital.com/it/negozia-cac-40'"},{"name":"tpd","value":"False"},{"name":"tpi","value":"True"},{"name":"trade_instrument","value":"'US Tech 100'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f05012c3bffb4f3c2eddefafb466b693\")>"},{"name":"cur_language","value":"'it'"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_item_link","value":"'https://capital.com/it/negozia-cac-40'"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f05012c3bffb4f3c2eddefafb466b693\")>"},{"name":"cur_language","value":"'it'"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_item_link","value":"'https://capital.com/it/negozia-cac-40'"}],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"a786926e4a78f378","name":"Screenshot","source":"a786926e4a78f378.png","type":"image/png","size":80466},{"uid":"10ba21de6482b6e3","name":"log","source":"10ba21de6482b6e3.txt","type":"text/plain","size":1391},{"uid":"17053473b9f07d1f","name":"stdout","source":"17053473b9f07d1f.txt","type":"text/plain","size":6299}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":8,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1712226210145,"stop":1712226210300,"duration":155},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_11.02.06 | Education > Menu item [Indices Trading]"},{"name":"feature","value":"Language: it"},{"name":"story","value":"Country: de / Role: Auth"},{"name":"tag","value":"test_03"},{"name":"tag","value":"us_11_02_06_01"},{"name":"parentSuite","value":"tests.US_11_Education.US_11-02-06_Indices_trading"},{"name":"suite","value":"us_11-02-06-01_indices_trading_test"},{"name":"subSuite","value":"TestIndicesTrading"},{"name":"host","value":"fv-az568-400"},{"name":"thread","value":"51083-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_11_Education.US_11-02-06_Indices_trading.us_11-02-06-01_indices_trading_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'de'"},{"name":"cur_item_link","value":"'https://capital.com/it/negozia-cac-40'"},{"name":"cur_language","value":"'it'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["us_11_02_06_01","test_03"]},"source":"86db5dbf055e5552.json","parameterValues":["'de'","'https://capital.com/it/negozia-cac-40'","'it'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'Auth'","'Chrome'"]}