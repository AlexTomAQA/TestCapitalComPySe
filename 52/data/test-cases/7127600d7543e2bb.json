{"uid":"7127600d7543e2bb","name":"TC_55!039 (Lang: ar) | Bid:55!039-ar.es.NoReg","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_039","historyId":"5be30783cf2a93acf88b6e60e152c74b","time":{"start":1721126359638,"stop":1721126385487,"duration":25849},"description":"\n        Check: Filters application in the 'Live shares prices' widget\n        Language: All\n        License: CYSEC, SCB, ASIC\n        Author: Kasila\n        ","descriptionHtml":"<pre><code>    Check: Filters application in the 'Live shares prices' widget\n    Language: All\n    License: CYSEC, SCB, ASIC\n    Author: Kasila\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x561614d12c7a <unknown>\n#1 0x5616149f5e2c <unknown>\n#2 0x5616149fb539 <unknown>\n#3 0x5616149fd2e5 <unknown>\n#4 0x5616149fd36c <unknown>\n#5 0x561614a3c822 <unknown>\n#6 0x561614a655c2 <unknown>\n#7 0x561614a36ad9 <unknown>\n#8 0x561614a6578e <unknown>\n#9 0x561614a84303 <unknown>\n#10 0x561614a65363 <unknown>\n#11 0x561614a35247 <unknown>\n#12 0x561614a35b9e <unknown>\n#13 0x561614cd924b <unknown>\n#14 0x561614cdd2f1 <unknown>\n#15 0x561614cc4afe <unknown>\n#16 0x561614cdde52 <unknown>\n#17 0x561614ca979f <unknown>\n#18 0x561614d02638 <unknown>\n#19 0x561614d02810 <unknown>\n#20 0x561614d11dac <unknown>\n#21 0x7fbe49094ac3 <unknown>","statusTrace":"self = <pages.BugsManual.bug_039.AppliedFilters object at 0x7f19d20efcb0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c5823908e57c0d1504f4f76f6fe1c8ed\")>\ncur_item_link = 'https://capital.com/ar/asear-alashum-fi-alwaqt-alfielii'\n\n    def arrange_v0(self, d, cur_item_link):\n        print(f\"\\n{datetime.now()}   1. Arrange_v0\")\n    \n        if not self.current_page_is(cur_item_link):\n            self.link = cur_item_link\n            self.open_page()\n    \n        print(f\"{datetime.now()}   Scroll to the labels\")\n        filters_labels = self.driver.find_element(By.CSS_SELECTOR, '#flt_labels')\n        self.driver.execute_script(\n            'return arguments[0].scrollIntoView({block: \"center\", inline: \"nearest\"});',\n            filters_labels\n        )\n        print(f\"{datetime.now()}   Close the filters if selected\")\n        filter_labels_list = self.driver.find_elements(By.CSS_SELECTOR, 'span.cross-button')\n    \n        for attempt in range(3):\n            try:\n                if len(filter_labels_list) > 0:\n                    for element in filter_labels_list:\n                        element.click()\n                break\n            except StaleElementReferenceException:\n                filter_labels_list = self.driver.find_elements(By.CSS_SELECTOR,\n                                                               '#flt_labels > span > span.cross-button')\n    \n        print(f\"{datetime.now()}   Select region filters\")\n        region_checkbox_list = self.driver.find_elements(By.CSS_SELECTOR, '#flt_reg > li > label.checkbox > span')\n        region_random_list = random.sample(region_checkbox_list, 3)\n        for element in region_random_list:\n            ActionChains(d) \\\n                .move_to_element(element) \\\n                .click(element) \\\n                .perform()\n    \n        print(f\"{datetime.now()}   Select sectors filters\")\n        sectors_checkbox_list = self.driver.find_elements(By.CSS_SELECTOR, '#flt_sec > li > label.checkbox > span')\n        sectors_random_list = random.sample(sectors_checkbox_list, 2)\n        for element in sectors_random_list:\n            ActionChains(d) \\\n                .move_to_element(element) \\\n                .pause(0.5) \\\n                .click(element) \\\n                .perform()\n    \n        print(f\"{datetime.now()}   Scroll to selected filters\")\n        self.driver.execute_script(\n            'return arguments[0].scrollIntoView({block: \"center\", inline: \"nearest\"});',\n            filters_labels\n        )\n        selected_filters_locator = (By.CSS_SELECTOR, '#flt_labels > span >span.text-ellipsis')\n        time_out = 10\n    \n        print(f\"{datetime.now()}   Check the labels of the selected filters\")\n    \n        while True:\n            try:\n                WebDriverWait(self.driver, time_out).until(\n                    lambda b: len(self.driver.find_elements(*selected_filters_locator)) == 5\n                )\n                break\n            except TimeoutException:\n                return\n    \n        print(f\"{datetime.now()}   Extract the text attribute from the labels of the selected filters\")\n        try:\n            selected_filters_list = self.driver.find_elements(*selected_filters_locator)\n>           self.selected_filters_text_list = [filters.text for filters in selected_filters_list]\n\npages/BugsManual/bug_039.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:90: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f19d2b89760>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#19 0x561614d02810 \\\\u003Cunknown>\\\\n#20 0x561614d11dac \\\\u003Cunknown>\\\\n#21 0x7fbe49094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x561614d12c7a <unknown>\nE       #1 0x5616149f5e2c <unknown>\nE       #2 0x5616149fb539 <unknown>\nE       #3 0x5616149fd2e5 <unknown>\nE       #4 0x5616149fd36c <unknown>\nE       #5 0x561614a3c822 <unknown>\nE       #6 0x561614a655c2 <unknown>\nE       #7 0x561614a36ad9 <unknown>\nE       #8 0x561614a6578e <unknown>\nE       #9 0x561614a84303 <unknown>\nE       #10 0x561614a65363 <unknown>\nE       #11 0x561614a35247 <unknown>\nE       #12 0x561614a35b9e <unknown>\nE       #13 0x561614cd924b <unknown>\nE       #14 0x561614cdd2f1 <unknown>\nE       #15 0x561614cc4afe <unknown>\nE       #16 0x561614cdde52 <unknown>\nE       #17 0x561614ca979f <unknown>\nE       #18 0x561614d02638 <unknown>\nE       #19 0x561614d02810 <unknown>\nE       #20 0x561614d11dac <unknown>\nE       #21 0x7fbe49094ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7f19d20d6ba0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c5823908e57c0d1504f4f76f6fe1c8ed\")>\ncur_language_2_rnd_from_14 = 'ar', cur_country = 'es', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start retest manual AT_55!00_039 of filters application in the 'Live shares prices' widget\")\n    @pytest.mark.parametrize('cur_country', ['es', 'ua', 'au'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.test_039\n    def test_039(self, worker_id, d, cur_language_2_rnd_from_14, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Filters application in the 'Live shares prices' widget\n        Language: All\n        License: CYSEC, SCB, ASIC\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language_2_rnd_from_14, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"039\", \"Applied filters 'Region/Sectors' are not displayed after selecting an item from the \"\n                   \"'Most traded' dropdown in the 'Live shares prices'  widget on the 'Shares' page\"\n            )\n    \n        page_conditions = Conditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language_2_rnd_from_14, cur_country, cur_role, cur_login, cur_password)\n    \n        menu = MenuSection(d, link)\n        cur_item_link = menu.open_shares_market_menu(d, cur_language_2_rnd_from_14, cur_country, link)\n    \n        test_element = AppliedFilters(d, cur_item_link, bid)\n>       test_element.test_(d, cur_language_2_rnd_from_14, cur_country,cur_role, cur_item_link)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_039.py:29: in test_\n    self.arrange_v0(d, cur_item_link)\npages/BugsManual/bug_039.py:108: in arrange_v0\n    self.selected_filters_text_list = [filters.text for filters in selected_filters_list]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:90: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f19d2b89760>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#19 0x561614d02810 \\\\u003Cunknown>\\\\n#20 0x561614d11dac \\\\u003Cunknown>\\\\n#21 0x7fbe49094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x561614d12c7a <unknown>\nE       #1 0x5616149f5e2c <unknown>\nE       #2 0x5616149fb539 <unknown>\nE       #3 0x5616149fd2e5 <unknown>\nE       #4 0x5616149fd36c <unknown>\nE       #5 0x561614a3c822 <unknown>\nE       #6 0x561614a655c2 <unknown>\nE       #7 0x561614a36ad9 <unknown>\nE       #8 0x561614a6578e <unknown>\nE       #9 0x561614a84303 <unknown>\nE       #10 0x561614a65363 <unknown>\nE       #11 0x561614a35247 <unknown>\nE       #12 0x561614a35b9e <unknown>\nE       #13 0x561614cd924b <unknown>\nE       #14 0x561614cdd2f1 <unknown>\nE       #15 0x561614cc4afe <unknown>\nE       #16 0x561614cdde52 <unknown>\nE       #17 0x561614ca979f <unknown>\nE       #18 0x561614d02638 <unknown>\nE       #19 0x561614d02810 <unknown>\nE       #20 0x561614d11dac <unknown>\nE       #21 0x7fbe49094ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1721126073389,"stop":1721126081904,"duration":8515},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1721126081904,"stop":1721126081904,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1721126081904,"stop":1721126081904,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1721126081904,"stop":1721126081904,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language_2_rnd_from_14","time":{"start":1721126359637,"stop":1721126359637,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Filters application in the 'Live shares prices' widget\n        Language: All\n        License: CYSEC, SCB, ASIC\n        Author: Kasila\n        ","status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x561614d12c7a <unknown>\n#1 0x5616149f5e2c <unknown>\n#2 0x5616149fb539 <unknown>\n#3 0x5616149fd2e5 <unknown>\n#4 0x5616149fd36c <unknown>\n#5 0x561614a3c822 <unknown>\n#6 0x561614a655c2 <unknown>\n#7 0x561614a36ad9 <unknown>\n#8 0x561614a6578e <unknown>\n#9 0x561614a84303 <unknown>\n#10 0x561614a65363 <unknown>\n#11 0x561614a35247 <unknown>\n#12 0x561614a35b9e <unknown>\n#13 0x561614cd924b <unknown>\n#14 0x561614cdd2f1 <unknown>\n#15 0x561614cc4afe <unknown>\n#16 0x561614cdde52 <unknown>\n#17 0x561614ca979f <unknown>\n#18 0x561614d02638 <unknown>\n#19 0x561614d02810 <unknown>\n#20 0x561614d11dac <unknown>\n#21 0x7fbe49094ac3 <unknown>","statusTrace":"self = <pages.BugsManual.bug_039.AppliedFilters object at 0x7f19d20efcb0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c5823908e57c0d1504f4f76f6fe1c8ed\")>\ncur_item_link = 'https://capital.com/ar/asear-alashum-fi-alwaqt-alfielii'\n\n    def arrange_v0(self, d, cur_item_link):\n        print(f\"\\n{datetime.now()}   1. Arrange_v0\")\n    \n        if not self.current_page_is(cur_item_link):\n            self.link = cur_item_link\n            self.open_page()\n    \n        print(f\"{datetime.now()}   Scroll to the labels\")\n        filters_labels = self.driver.find_element(By.CSS_SELECTOR, '#flt_labels')\n        self.driver.execute_script(\n            'return arguments[0].scrollIntoView({block: \"center\", inline: \"nearest\"});',\n            filters_labels\n        )\n        print(f\"{datetime.now()}   Close the filters if selected\")\n        filter_labels_list = self.driver.find_elements(By.CSS_SELECTOR, 'span.cross-button')\n    \n        for attempt in range(3):\n            try:\n                if len(filter_labels_list) > 0:\n                    for element in filter_labels_list:\n                        element.click()\n                break\n            except StaleElementReferenceException:\n                filter_labels_list = self.driver.find_elements(By.CSS_SELECTOR,\n                                                               '#flt_labels > span > span.cross-button')\n    \n        print(f\"{datetime.now()}   Select region filters\")\n        region_checkbox_list = self.driver.find_elements(By.CSS_SELECTOR, '#flt_reg > li > label.checkbox > span')\n        region_random_list = random.sample(region_checkbox_list, 3)\n        for element in region_random_list:\n            ActionChains(d) \\\n                .move_to_element(element) \\\n                .click(element) \\\n                .perform()\n    \n        print(f\"{datetime.now()}   Select sectors filters\")\n        sectors_checkbox_list = self.driver.find_elements(By.CSS_SELECTOR, '#flt_sec > li > label.checkbox > span')\n        sectors_random_list = random.sample(sectors_checkbox_list, 2)\n        for element in sectors_random_list:\n            ActionChains(d) \\\n                .move_to_element(element) \\\n                .pause(0.5) \\\n                .click(element) \\\n                .perform()\n    \n        print(f\"{datetime.now()}   Scroll to selected filters\")\n        self.driver.execute_script(\n            'return arguments[0].scrollIntoView({block: \"center\", inline: \"nearest\"});',\n            filters_labels\n        )\n        selected_filters_locator = (By.CSS_SELECTOR, '#flt_labels > span >span.text-ellipsis')\n        time_out = 10\n    \n        print(f\"{datetime.now()}   Check the labels of the selected filters\")\n    \n        while True:\n            try:\n                WebDriverWait(self.driver, time_out).until(\n                    lambda b: len(self.driver.find_elements(*selected_filters_locator)) == 5\n                )\n                break\n            except TimeoutException:\n                return\n    \n        print(f\"{datetime.now()}   Extract the text attribute from the labels of the selected filters\")\n        try:\n            selected_filters_list = self.driver.find_elements(*selected_filters_locator)\n>           self.selected_filters_text_list = [filters.text for filters in selected_filters_list]\n\npages/BugsManual/bug_039.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:90: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f19d2b89760>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#19 0x561614d02810 \\\\u003Cunknown>\\\\n#20 0x561614d11dac \\\\u003Cunknown>\\\\n#21 0x7fbe49094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x561614d12c7a <unknown>\nE       #1 0x5616149f5e2c <unknown>\nE       #2 0x5616149fb539 <unknown>\nE       #3 0x5616149fd2e5 <unknown>\nE       #4 0x5616149fd36c <unknown>\nE       #5 0x561614a3c822 <unknown>\nE       #6 0x561614a655c2 <unknown>\nE       #7 0x561614a36ad9 <unknown>\nE       #8 0x561614a6578e <unknown>\nE       #9 0x561614a84303 <unknown>\nE       #10 0x561614a65363 <unknown>\nE       #11 0x561614a35247 <unknown>\nE       #12 0x561614a35b9e <unknown>\nE       #13 0x561614cd924b <unknown>\nE       #14 0x561614cdd2f1 <unknown>\nE       #15 0x561614cc4afe <unknown>\nE       #16 0x561614cdde52 <unknown>\nE       #17 0x561614ca979f <unknown>\nE       #18 0x561614d02638 <unknown>\nE       #19 0x561614d02810 <unknown>\nE       #20 0x561614d11dac <unknown>\nE       #21 0x7fbe49094ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7f19d20d6ba0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c5823908e57c0d1504f4f76f6fe1c8ed\")>\ncur_language_2_rnd_from_14 = 'ar', cur_country = 'es', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start retest manual AT_55!00_039 of filters application in the 'Live shares prices' widget\")\n    @pytest.mark.parametrize('cur_country', ['es', 'ua', 'au'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.test_039\n    def test_039(self, worker_id, d, cur_language_2_rnd_from_14, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Filters application in the 'Live shares prices' widget\n        Language: All\n        License: CYSEC, SCB, ASIC\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language_2_rnd_from_14, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"039\", \"Applied filters 'Region/Sectors' are not displayed after selecting an item from the \"\n                   \"'Most traded' dropdown in the 'Live shares prices'  widget on the 'Shares' page\"\n            )\n    \n        page_conditions = Conditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language_2_rnd_from_14, cur_country, cur_role, cur_login, cur_password)\n    \n        menu = MenuSection(d, link)\n        cur_item_link = menu.open_shares_market_menu(d, cur_language_2_rnd_from_14, cur_country, link)\n    \n        test_element = AppliedFilters(d, cur_item_link, bid)\n>       test_element.test_(d, cur_language_2_rnd_from_14, cur_country,cur_role, cur_item_link)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_039.py:29: in test_\n    self.arrange_v0(d, cur_item_link)\npages/BugsManual/bug_039.py:108: in arrange_v0\n    self.selected_filters_text_list = [filters.text for filters in selected_filters_list]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:90: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f19d2b89760>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#19 0x561614d02810 \\\\u003Cunknown>\\\\n#20 0x561614d11dac \\\\u003Cunknown>\\\\n#21 0x7fbe49094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x561614d12c7a <unknown>\nE       #1 0x5616149f5e2c <unknown>\nE       #2 0x5616149fb539 <unknown>\nE       #3 0x5616149fd2e5 <unknown>\nE       #4 0x5616149fd36c <unknown>\nE       #5 0x561614a3c822 <unknown>\nE       #6 0x561614a655c2 <unknown>\nE       #7 0x561614a36ad9 <unknown>\nE       #8 0x561614a6578e <unknown>\nE       #9 0x561614a84303 <unknown>\nE       #10 0x561614a65363 <unknown>\nE       #11 0x561614a35247 <unknown>\nE       #12 0x561614a35b9e <unknown>\nE       #13 0x561614cd924b <unknown>\nE       #14 0x561614cdd2f1 <unknown>\nE       #15 0x561614cc4afe <unknown>\nE       #16 0x561614cdde52 <unknown>\nE       #17 0x561614ca979f <unknown>\nE       #18 0x561614d02638 <unknown>\nE       #19 0x561614d02810 <unknown>\nE       #20 0x561614d11dac <unknown>\nE       #21 0x7fbe49094ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Start retest manual AT_55!00_039 of filters application in the 'Live shares prices' widget","time":{"start":1721126359638,"stop":1721126385485,"duration":25847},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x561614d12c7a <unknown>\n#1 0x5616149f5e2c <unknown>\n#2 0x5616149fb539 <unknown>\n#3 0x5616149fd2e5 <unknown>\n#4 0x5616149fd36c <unknown>\n#5 0x561614a3c822 <unknown>\n#6 0x561614a655c2 <unknown>\n#7 0x561614a36ad9 <unknown>\n#8 0x561614a6578e <unknown>\n#9 0x561614a84303 <unknown>\n#10 0x561614a65363 <unknown>\n#11 0x561614a35247 <unknown>\n#12 0x561614a35b9e <unknown>\n#13 0x561614cd924b <unknown>\n#14 0x561614cdd2f1 <unknown>\n#15 0x561614cc4afe <unknown>\n#16 0x561614cdde52 <unknown>\n#17 0x561614ca979f <unknown>\n#18 0x561614d02638 <unknown>\n#19 0x561614d02810 <unknown>\n#20 0x561614d11dac <unknown>\n#21 0x7fbe49094ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py\", line 79, in test_039\n    test_element.test_(d, cur_language_2_rnd_from_14, cur_country,cur_role, cur_item_link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_039.py\", line 29, in test_\n    self.arrange_v0(d, cur_item_link)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_039.py\", line 108, in arrange_v0\n    self.selected_filters_text_list = [filters.text for filters in selected_filters_list]\n                                       ^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 90, in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Preconditions","time":{"start":1721126359640,"stop":1721126376742,"duration":17102},"status":"passed","steps":[{"name":"2024-07-16 10:34:32.733805   Start Checking Captcha","time":{"start":1721126361623,"stop":1721126362673,"duration":1050},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"2024-07-16 10:34:32.733805   Start Checking Captcha","time":{"start":1721126366255,"stop":1721126367301,"duration":1046},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Open 'Language and Country' menu section.","time":{"start":1721126367306,"stop":1721126368608,"duration":1302},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"test_language","value":"'ar'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Set country (licence)","time":{"start":1721126368608,"stop":1721126371227,"duration":2619},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_country","value":"'es'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-07-16 10:34:32.733805   Start Checking Captcha","time":{"start":1721126371227,"stop":1721126372276,"duration":1049},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Open 'Language and Country' menu section.","time":{"start":1721126372279,"stop":1721126373575,"duration":1296},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"test_language","value":"'ar'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Set language","time":{"start":1721126373575,"stop":1721126375683,"duration":2108},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_language","value":"'ar'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-07-16 10:34:32.733805   Start Checking Captcha","time":{"start":1721126375684,"stop":1721126376739,"duration":1055},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"c5823908e57c0d1504f4f76f6fe1c8ed\")>"},{"name":"host","value":"'https://capital.com/'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'es'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":8,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Markets\" menu, \"Shares\" submenu click","time":{"start":1721126376742,"stop":1721126380414,"duration":3672},"status":"passed","steps":[{"name":"Focus moved to 'Markets' menu","time":{"start":1721126376749,"stop":1721126378541,"duration":1792},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"c5823908e57c0d1504f4f76f6fe1c8ed\")>"},{"name":"test_language","value":"'ar'"},{"name":"test_country","value":"'es'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Focus move to 'Shares' submenu item and click","time":{"start":1721126378542,"stop":1721126380133,"duration":1591},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"c5823908e57c0d1504f4f76f6fe1c8ed\")>"},{"name":"test_language","value":"'ar'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"c5823908e57c0d1504f4f76f6fe1c8ed\")>"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'es'"},{"name":"link","value":"'https://capital.com/ar'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-07-16 10:34:32.711393   Start test the display of the applied filters","time":{"start":1721126380414,"stop":1721126385483,"duration":5069},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x561614d12c7a <unknown>\n#1 0x5616149f5e2c <unknown>\n#2 0x5616149fb539 <unknown>\n#3 0x5616149fd2e5 <unknown>\n#4 0x5616149fd36c <unknown>\n#5 0x561614a3c822 <unknown>\n#6 0x561614a655c2 <unknown>\n#7 0x561614a36ad9 <unknown>\n#8 0x561614a6578e <unknown>\n#9 0x561614a84303 <unknown>\n#10 0x561614a65363 <unknown>\n#11 0x561614a35247 <unknown>\n#12 0x561614a35b9e <unknown>\n#13 0x561614cd924b <unknown>\n#14 0x561614cdd2f1 <unknown>\n#15 0x561614cc4afe <unknown>\n#16 0x561614cdde52 <unknown>\n#17 0x561614ca979f <unknown>\n#18 0x561614d02638 <unknown>\n#19 0x561614d02810 <unknown>\n#20 0x561614d11dac <unknown>\n#21 0x7fbe49094ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_039.py\", line 29, in test_\n    self.arrange_v0(d, cur_item_link)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_039.py\", line 108, in arrange_v0\n    self.selected_filters_text_list = [filters.text for filters in selected_filters_list]\n                                       ^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 90, in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"c5823908e57c0d1504f4f76f6fe1c8ed\")>"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'es'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_item_link","value":"'https://capital.com/ar/asear-alashum-fi-alwaqt-alfielii'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"c5823908e57c0d1504f4f76f6fe1c8ed\")>"},{"name":"cur_language_2_rnd_from_14","value":"'ar'"},{"name":"cur_country","value":"'es'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":13,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9038aa092be871db","name":"Screenshot","source":"9038aa092be871db.png","type":"image/png","size":105259},{"uid":"a542bff59cfa8e01","name":"stdout","source":"a542bff59cfa8e01.txt","type":"text/plain","size":5281}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":14,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1721127333046,"stop":1721127333271,"duration":225},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!039 | Applied filters 'Region/Sectors' are not displayed after selecting an item from the 'Most traded' dropdown in the 'Live shares prices'  widget on the 'Shares' page"},{"name":"feature","value":"Role: NoReg"},{"name":"story","value":"Country: es"},{"name":"tag","value":"test_039"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az1144-762"},{"name":"thread","value":"3653-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'es'"},{"name":"cur_language_2_rnd_from_14","value":"'ar'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoReg'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":8},"items":[{"uid":"5ebb4df6ffec2e","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/50//#testresult/5ebb4df6ffec2e","status":"failed","statusDetails":"Failed: Bug # 55!039  Applied filters 'Region/Sectors': ['ألمانيا', 'النرويج', 'سويسرا', 'المواد الأساسية', 'خدمات الاتصالات'] \nare not displayed after selecting item 'Most traded' from the dropdown, \nonly filters are displayed: ['النرويج']","time":{"start":1721042483674,"stop":1721042511322,"duration":27648}},{"uid":"680e6c7c24d73f87","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/44//#testresult/680e6c7c24d73f87","status":"failed","statusDetails":"Failed: Bug # 55!039  Applied filters 'Region/Sectors': ['بلجيكا', 'سويسرا', 'الولايات المتحدة الامريكية', 'البيانات المالية', 'خدمات الاتصالات'] \nare not displayed after selecting item 'Most traded' from the dropdown, \nonly filters are displayed: ['بلجيكا', 'سويسرا', 'الولايات المتحدة الامريكية', 'خدمات الاتصالات']","time":{"start":1720580537462,"stop":1720580569261,"duration":31799}},{"uid":"ed65fbc87ad1f433","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/41//#testresult/ed65fbc87ad1f433","status":"failed","statusDetails":"Failed: Bug # 55!039  Applied filters 'Region/Sectors': ['هونغ كونغ', 'سنغافورة', 'الولايات المتحدة الامريكية', 'الطاقة', 'الرعاىة الصحية'] \nare not displayed after selecting item 'Most traded' from the dropdown, \nonly filters are displayed: ['هونغ كونغ', 'سنغافورة']","time":{"start":1720417808208,"stop":1720417846077,"duration":37869}},{"uid":"7ebe8e3455ebabe3","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/27//#testresult/7ebe8e3455ebabe3","status":"failed","statusDetails":"AssertionError: Bug#039. Expected result: applied filters \"Region/Sectors\" are displayed ['كندا', 'أيرلندا', 'النرويج', 'البيانات المالية', 'خدمات الاتصالات']\nActual result: applied filters \"Region/Sectors\" are not displayed after selecting an item from the \"Most traded\" dropdown ['كندا', 'أيرلندا', 'النرويج']","time":{"start":1719509820973,"stop":1719509849914,"duration":28941}},{"uid":"9dd4630c64f8e0ef","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/26//#testresult/9dd4630c64f8e0ef","status":"failed","statusDetails":"AssertionError: Bug#039. Expected result: applied filters \"Region/Sectors\" are displayed ['كندا', 'هونغ كونغ', 'سويسرا', 'الشركات الصناعية', 'المنافع']\nActual result: applied filters \"Region/Sectors\" are not displayed after selecting an item from the \"Most traded\" dropdown ['كندا', 'هونغ كونغ', 'سويسرا', 'المنافع']","time":{"start":1719501009596,"stop":1719501045764,"duration":36168}},{"uid":"396dda8c8c3e8a50","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/25//#testresult/396dda8c8c3e8a50","status":"failed","statusDetails":"AssertionError: Bug#039. Expected result: applied filters \"Region/Sectors\" are displayed ['بلجيكا', 'بريطانيا العظمى', 'سنغافورة', 'السلع والخدمات الاستهلاكية الدورية', 'الرعاىة الصحية']\nActual result: applied filters \"Region/Sectors\" are not displayed after selecting an item from the \"Most traded\" dropdown ['بلجيكا', 'بريطانيا العظمى', 'سنغافورة']","time":{"start":1719389463905,"stop":1719389491650,"duration":27745}},{"uid":"71c3160aeec9e5c7","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/24//#testresult/71c3160aeec9e5c7","status":"failed","statusDetails":"AssertionError: Bug#039. Expected result: applied filters \"Region/Sectors\" are displayed ['سنغافورة']\nActual result: applied filters \"Region/Sectors\" are not displayed after selecting an item from the \"Most traded\" dropdown ['بلجيكا', 'هولندا', 'سنغافورة', 'الطاقة', 'صناديق الاستثمار المتداولة']","time":{"start":1719319032282,"stop":1719319064192,"duration":31910}}]},"tags":["test_039","us_55"]},"source":"7127600d7543e2bb.json","parameterValues":["'es'","'ar'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoReg'","'Chrome'"]}