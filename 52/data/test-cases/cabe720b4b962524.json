{"uid":"cabe720b4b962524","name":"TC_01.04.00_003 | Testing button [Buy] on table Widget 'Trading instrument'. Bid:01.04.00_003-de.de.NoReg","fullName":"tests.US_01_Markets.US_01-04_Indices.US_01-04-00_Indices_test.TestIndices#test_003_widget_trading_instrument_buy_button","historyId":"1f9e72fba341115ef455cff3618606fa","time":{"start":1710871489465,"stop":1710871495558,"duration":6093},"description":"\n        Check: Button [Buy]\n        Language: All. License: All,except FCA.\n        ","descriptionHtml":"<pre><code>    Check: Button [Buy]\n    Language: All. License: All,except FCA.\n</code></pre>\n","status":"broken","statusMessage":"TypeError: selenium.webdriver.remote.webdriver.WebDriver.find_element() argument after * must be an iterable, not NoneType","statusTrace":"self = <US_01-04-00_Indices_test.TestIndices object at 0x70862390edb0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ecc76f995b7a558173bb6b08d2edb445\")>\ncur_language = 'de', cur_country = 'de', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_sort = 'Top risers'\n\n    @allure.step(\"Start test of button [Buy] on table Widget 'Trading instrument'\")\n    @pytest.mark.test_003\n    def test_003_widget_trading_instrument_buy_button(\n                self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_sort):\n        \"\"\"\n        Check: Button [Buy]\n        Language: All. License: All,except FCA.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"01.04\", \"Market > Menu item [Indices]\",\n            \".00_003\", \"Testing button [Buy] on table Widget 'Trading instrument'\")\n    \n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n    \n        page_conditions = Conditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        page_menu = MenuSection(d, link)\n        cur_item_link = page_menu.open_indices_markets_menu(d, cur_language, cur_country, link)\n    \n        test_element = TableTradingInstrumentsBuyButton(d, cur_item_link, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link, cur_sort)\n\ntests/US_01_Markets/US_01-04_Indices/US_01-04-00_Indices_test.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/TableTradingInstrumentsBuyButton.py:31: in full_test_with_tpi\n    item_list = self.arrange_(d, cur_item_link, cur_sort)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Elements.TableTradingInstrumentsBuyButton.TableTradingInstrumentsBuyButton object at 0x708623935b20>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ecc76f995b7a558173bb6b08d2edb445\")>\ncur_item_link = 'https://capital.com/de/welt-indizes', cur_sort = 'Top risers'\n\n    def arrange_(self, d, cur_item_link, cur_sort):\n        global COUNT_OF_RUNS\n        print(f\"\\n{datetime.now()}   1. Arrange for Trading instrument and \\\"{cur_sort}\\\" cur_sort\")\n    \n        if not self.current_page_is(cur_item_link):\n            self.link = cur_item_link\n            self.open_page()\n    \n        print(f\"{datetime.now()}   IS TABLE_TRADING_INSTRUMENTS  present on the page? =>\")\n        table_list = self.driver.find_elements(*TableTradingInstrumentsLocators.TABLE_TRADING_INSTRUMENTS)\n        if len(table_list) == 0:\n            print(f\"{datetime.now()}   => TABLE_TRADING_INSTRUMENTS is NOT present on the page!\\n\")\n            pytest.fail(f\" Bug ? Checking element is not on this page\")\n    \n        print(f\"{datetime.now()}   => TABLE_TRADING_INSTRUMENTS is present on the page!\")\n    \n        print(f\"{datetime.now()}   IS FIELD_DROPDOWN_SORT present in the Live prices table? =>\")\n        field_dropdown_list = self.driver.find_elements(*FieldDropdownMarketsLocator.FIELD_DROPDOWN_MARKETS)\n        if len(field_dropdown_list) == 0:\n            pytest.fail(\"Bug # ? FIELD_DROPDOWN_SORT is not present in Live table!\")\n    \n        print(f\"{datetime.now()}   =>  FIELD_DROPDOWN_SORT is present in the Live prices table!\")\n    \n        print(f\"{datetime.now()}   Start scroll and click FIELD_DROPDOWN_SORT =>\")\n        self.driver.execute_script(\n            'return arguments[0].scrollIntoView({block: \"center\", inline: \"nearest\"});',\n            field_dropdown_list[0]\n        )\n        field_dropdown_list[0].click()\n    \n        match cur_sort:\n            case 'most_traded':\n                self.item_sort = ItemSortDropdownLocators.ITEM_DROPDOWN_SORT_MOST_TRADED   # элемент в списке\n                self.sort_locator = FieldDropdownMarketsLocator.FIELD_DROPDOWN_MOST_TRADED  # элемент сортировки\n    \n            case 'top_risers':\n                self.item_sort = ItemSortDropdownLocators.ITEM_DROPDOWN_SORT_TOP_RISERS\n                self.sort_locator = FieldDropdownMarketsLocator.FIELD_DROPDOWN_TOP_RISERS\n    \n            case 'top_fallers':\n                self.item_sort = ItemSortDropdownLocators.ITEM_DROPDOWN_SORT_TOP_FALLERS\n                self.sort_locator = FieldDropdownMarketsLocator.FIELD_DROPDOWN_TOP_FALLERS\n    \n            case 'most_volatile':\n                self.item_sort = ItemSortDropdownLocators.ITEM_DROPDOWN_SORT_MOST_VOLATILE\n                self.sort_locator = FieldDropdownMarketsLocator.FIELD_DROPDOWN_MOST_VOLATILE\n    \n        self.buy_locator = TableTradingInstrumentsLocators.BUTTON_BUY_TRADING_INSTRUMENT  # кнопка buy\n        self.item = TableTradingInstrumentsLocators.ITEM_TRADING_INSTRUMENT  # трейдинговый инструмент\n    \n        print(f\"{datetime.now()}   Is item_sort_list visible on the FIELD_DROPDOWN_SORT ? =>\")\n    \n        item_sort_list = self.element_is_visible(ItemSortDropdownLocators.ALL_ITEM_DROPDOWN_SORT)\n        self.driver.execute_script(\n            'return arguments[0].scrollIntoView({block: \"center\", inline: \"nearest\"});',\n            item_sort_list\n        )\n    \n        if not item_sort_list:\n            pytest.fail(\"Bug ? item_sort_list is not visible\")\n        print(f\"{datetime.now()}   => item_sort_list is visible on the FIELD_DROPDOWN_SORT!\")\n    \n        print(f\"{datetime.now()}   Is cur_sort \\\"{cur_sort}\\\" present in item_sort_list? =>\")\n>       if not self.driver.find_element(*self.item_sort):\nE       TypeError: selenium.webdriver.remote.webdriver.WebDriver.find_element() argument after * must be an iterable, not NoneType\n\npages/Elements/TableTradingInstrumentsBuyButton.py:114: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1710871286939,"stop":1710871287345,"duration":406},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1710871287346,"stop":1710871287346,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1710871287346,"stop":1710871287346,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1710871287346,"stop":1710871287346,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1710871287347,"stop":1710871287347,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1710871287347,"stop":1710871287347,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1710871446658,"stop":1710871446658,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_sort","time":{"start":1710871489464,"stop":1710871489464,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [Buy]\n        Language: All. License: All,except FCA.\n        ","status":"broken","statusMessage":"TypeError: selenium.webdriver.remote.webdriver.WebDriver.find_element() argument after * must be an iterable, not NoneType","statusTrace":"self = <US_01-04-00_Indices_test.TestIndices object at 0x70862390edb0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ecc76f995b7a558173bb6b08d2edb445\")>\ncur_language = 'de', cur_country = 'de', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_sort = 'Top risers'\n\n    @allure.step(\"Start test of button [Buy] on table Widget 'Trading instrument'\")\n    @pytest.mark.test_003\n    def test_003_widget_trading_instrument_buy_button(\n                self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_sort):\n        \"\"\"\n        Check: Button [Buy]\n        Language: All. License: All,except FCA.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"01.04\", \"Market > Menu item [Indices]\",\n            \".00_003\", \"Testing button [Buy] on table Widget 'Trading instrument'\")\n    \n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n    \n        page_conditions = Conditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        page_menu = MenuSection(d, link)\n        cur_item_link = page_menu.open_indices_markets_menu(d, cur_language, cur_country, link)\n    \n        test_element = TableTradingInstrumentsBuyButton(d, cur_item_link, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link, cur_sort)\n\ntests/US_01_Markets/US_01-04_Indices/US_01-04-00_Indices_test.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/TableTradingInstrumentsBuyButton.py:31: in full_test_with_tpi\n    item_list = self.arrange_(d, cur_item_link, cur_sort)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Elements.TableTradingInstrumentsBuyButton.TableTradingInstrumentsBuyButton object at 0x708623935b20>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ecc76f995b7a558173bb6b08d2edb445\")>\ncur_item_link = 'https://capital.com/de/welt-indizes', cur_sort = 'Top risers'\n\n    def arrange_(self, d, cur_item_link, cur_sort):\n        global COUNT_OF_RUNS\n        print(f\"\\n{datetime.now()}   1. Arrange for Trading instrument and \\\"{cur_sort}\\\" cur_sort\")\n    \n        if not self.current_page_is(cur_item_link):\n            self.link = cur_item_link\n            self.open_page()\n    \n        print(f\"{datetime.now()}   IS TABLE_TRADING_INSTRUMENTS  present on the page? =>\")\n        table_list = self.driver.find_elements(*TableTradingInstrumentsLocators.TABLE_TRADING_INSTRUMENTS)\n        if len(table_list) == 0:\n            print(f\"{datetime.now()}   => TABLE_TRADING_INSTRUMENTS is NOT present on the page!\\n\")\n            pytest.fail(f\" Bug ? Checking element is not on this page\")\n    \n        print(f\"{datetime.now()}   => TABLE_TRADING_INSTRUMENTS is present on the page!\")\n    \n        print(f\"{datetime.now()}   IS FIELD_DROPDOWN_SORT present in the Live prices table? =>\")\n        field_dropdown_list = self.driver.find_elements(*FieldDropdownMarketsLocator.FIELD_DROPDOWN_MARKETS)\n        if len(field_dropdown_list) == 0:\n            pytest.fail(\"Bug # ? FIELD_DROPDOWN_SORT is not present in Live table!\")\n    \n        print(f\"{datetime.now()}   =>  FIELD_DROPDOWN_SORT is present in the Live prices table!\")\n    \n        print(f\"{datetime.now()}   Start scroll and click FIELD_DROPDOWN_SORT =>\")\n        self.driver.execute_script(\n            'return arguments[0].scrollIntoView({block: \"center\", inline: \"nearest\"});',\n            field_dropdown_list[0]\n        )\n        field_dropdown_list[0].click()\n    \n        match cur_sort:\n            case 'most_traded':\n                self.item_sort = ItemSortDropdownLocators.ITEM_DROPDOWN_SORT_MOST_TRADED   # элемент в списке\n                self.sort_locator = FieldDropdownMarketsLocator.FIELD_DROPDOWN_MOST_TRADED  # элемент сортировки\n    \n            case 'top_risers':\n                self.item_sort = ItemSortDropdownLocators.ITEM_DROPDOWN_SORT_TOP_RISERS\n                self.sort_locator = FieldDropdownMarketsLocator.FIELD_DROPDOWN_TOP_RISERS\n    \n            case 'top_fallers':\n                self.item_sort = ItemSortDropdownLocators.ITEM_DROPDOWN_SORT_TOP_FALLERS\n                self.sort_locator = FieldDropdownMarketsLocator.FIELD_DROPDOWN_TOP_FALLERS\n    \n            case 'most_volatile':\n                self.item_sort = ItemSortDropdownLocators.ITEM_DROPDOWN_SORT_MOST_VOLATILE\n                self.sort_locator = FieldDropdownMarketsLocator.FIELD_DROPDOWN_MOST_VOLATILE\n    \n        self.buy_locator = TableTradingInstrumentsLocators.BUTTON_BUY_TRADING_INSTRUMENT  # кнопка buy\n        self.item = TableTradingInstrumentsLocators.ITEM_TRADING_INSTRUMENT  # трейдинговый инструмент\n    \n        print(f\"{datetime.now()}   Is item_sort_list visible on the FIELD_DROPDOWN_SORT ? =>\")\n    \n        item_sort_list = self.element_is_visible(ItemSortDropdownLocators.ALL_ITEM_DROPDOWN_SORT)\n        self.driver.execute_script(\n            'return arguments[0].scrollIntoView({block: \"center\", inline: \"nearest\"});',\n            item_sort_list\n        )\n    \n        if not item_sort_list:\n            pytest.fail(\"Bug ? item_sort_list is not visible\")\n        print(f\"{datetime.now()}   => item_sort_list is visible on the FIELD_DROPDOWN_SORT!\")\n    \n        print(f\"{datetime.now()}   Is cur_sort \\\"{cur_sort}\\\" present in item_sort_list? =>\")\n>       if not self.driver.find_element(*self.item_sort):\nE       TypeError: selenium.webdriver.remote.webdriver.WebDriver.find_element() argument after * must be an iterable, not NoneType\n\npages/Elements/TableTradingInstrumentsBuyButton.py:114: TypeError","steps":[{"name":"Start test of button [Buy] on table Widget 'Trading instrument'","time":{"start":1710871489465,"stop":1710871495557,"duration":6092},"status":"broken","statusMessage":"TypeError: selenium.webdriver.remote.webdriver.WebDriver.find_element() argument after * must be an iterable, not NoneType\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_01_Markets/US_01-04_Indices/US_01-04-00_Indices_test.py\", line 94, in test_003_widget_trading_instrument_buy_button\n    test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link, cur_sort)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/TableTradingInstrumentsBuyButton.py\", line 31, in full_test_with_tpi\n    item_list = self.arrange_(d, cur_item_link, cur_sort)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/TableTradingInstrumentsBuyButton.py\", line 114, in arrange_\n    if not self.driver.find_element(*self.item_sort):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[{"name":"2024-03-19 18:01:26.914192   Start Building dynamic arguments for allure report generation","time":{"start":1710871489465,"stop":1710871489467,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ecc76f995b7a558173bb6b08d2edb445\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'de'"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'NoReg'"},{"name":"us","value":"'01.04'"},{"name":"desc_us","value":"'Market > Menu item [Indices]'"},{"name":"num_tc","value":"'.00_003'"},{"name":"desc_tc","value":"'Testing button [Buy] on table Widget 'Trading instrument''"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-03-19 18:01:26.918762   Set preconditions","time":{"start":1710871489467,"stop":1710871490710,"duration":1243},"status":"passed","steps":[{"name":"2024-03-19 18:01:26.917612   Start Checking Captcha","time":{"start":1710871489674,"stop":1710871490707,"duration":1033},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ecc76f995b7a558173bb6b08d2edb445\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'de'"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Markets\" menu, \"Indices\" submenu","time":{"start":1710871490710,"stop":1710871495440,"duration":4730},"status":"passed","steps":[{"name":"2024-03-19 18:01:26.916085.   Focus moved to 'Markets' menu","time":{"start":1710871490715,"stop":1710871492502,"duration":1787},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ecc76f995b7a558173bb6b08d2edb445\")>"},{"name":"test_language","value":"'de'"},{"name":"test_country","value":"'de'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-03-19 18:01:26.916631.   Click 'Indices' submenu.","time":{"start":1710871492502,"stop":1710871495415,"duration":2913},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ecc76f995b7a558173bb6b08d2edb445\")>"},{"name":"test_language","value":"'de'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ecc76f995b7a558173bb6b08d2edb445\")>"},{"name":"cur_language","value":"'de'"},{"name":"cur_country","value":"'de'"},{"name":"link","value":"'https://capital.com/de/welt-indizes'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ecc76f995b7a558173bb6b08d2edb445\")>"},{"name":"cur_language","value":"'de'"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_sort","value":"'Top risers'"}],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"ab7a33baa028ea7c","name":"Screenshot","source":"ab7a33baa028ea7c.png","type":"image/png","size":133366},{"uid":"8cfe99b98e0f581a","name":"stdout","source":"8cfe99b98e0f581a.txt","type":"text/plain","size":2608}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":7,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1710871511622,"stop":1710871511751,"duration":129},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_01.04 | Market > Menu item [Indices]"},{"name":"feature","value":"Language: de"},{"name":"story","value":"Country: de / Role: NoReg"},{"name":"tag","value":"test_003"},{"name":"tag","value":"us_01_04"},{"name":"parentSuite","value":"tests.US_01_Markets.US_01-04_Indices"},{"name":"suite","value":"US_01-04-00_Indices_test"},{"name":"subSuite","value":"TestIndices"},{"name":"host","value":"fv-az573-278"},{"name":"thread","value":"7405-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_01_Markets.US_01-04_Indices.US_01-04-00_Indices_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'de'"},{"name":"cur_language","value":"'de'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_sort","value":"'Top risers'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["test_003","us_01_04"]},"source":"cabe720b4b962524.json","parameterValues":["'de'","'de'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoReg'","'Top risers'","'Chrome'"]}