{"uid":"73d04e0cb3f6cd2","name":"TC_01.05.00_003 | Testing button [Buy]. Bid:01.05.00_003-de.de.NoAuth","fullName":"tests.US_01_Markets.US_01-05_Commodities.US_01-05-00_Commodities_test.TestCommodities#test_003_buy_trading_instrument","historyId":"da3771ee619ee407b8969c21b4870dea","time":{"start":1710871739508,"stop":1710871769790,"duration":30282},"description":"\n        Check: button [Buy] in Widget 'Trading instrument'\n        Language: All License: All (except FCA) Role: All.\n        ","descriptionHtml":"<pre><code>    Check: button [Buy] in Widget 'Trading instrument'\n    Language: All License: All (except FCA) Role: All.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Bug # 08. Unknown situation instead 'Login' form opened","statusTrace":"self = <US_01-05-00_Commodities_test.TestCommodities object at 0x72a81e736e10>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0122bdd2a8a37302c134e9a56c16fed9\")>\ncur_language = 'de', cur_country = 'de', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_sort = 'top_risers'\n\n    @allure.step(\"Start test of button [Buy] in Widget 'Trading instrument'\")\n    @pytest.mark.test_003\n    def test_003_buy_trading_instrument(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_sort):\n        \"\"\"\n        Check: button [Buy] in Widget 'Trading instrument'\n        Language: All License: All (except FCA) Role: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"01.05\", \"Markets > Menu item [Commodities]\",\n            \".00_003\", \"Testing button [Buy]\")\n    \n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n    \n        page_conditions = Conditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        page_menu = MenuSection(d, link)\n        page_menu.move_focus_to_markets_menu(d, cur_language, cur_country)\n        cur_page_url = page_menu.sub_menu_commodities_move_focus_click(d, cur_language)\n    \n        test_element = TableTradingInstrumentsBuyButton(d, cur_page_url, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_page_url, cur_sort)\n\ntests/US_01_Markets/US_01-05_Commodities/US_01-05-00_Commodities_test.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/TableTradingInstrumentsBuyButton.py:45: in full_test_with_tpi\n    test_element.assert_login(d, cur_language, cur_item_link)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Elements.AssertClass.AssertClass object at 0x72a81e61df10>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0122bdd2a8a37302c134e9a56c16fed9\")>\ncur_language = 'de', cur_link = 'https://capital.com/de/rohstoffpreise'\n\n    @allure.step(f'{datetime.now()}   Checking that \"Login\" form or page opened')\n    def assert_login(self, d, cur_language, cur_link):\n        \"\"\"Method Assert Login form or page\"\"\"\n        print(f\"\\n{datetime.now()}   3. Assert_Login_v0\")\n        self.page_signup_login = SignupLogin(d, cur_link)\n        if self.page_signup_login.should_be_login_form():\n            self.page_signup_login.close_login_form()\n            del self.page_signup_login\n        elif self.page_signup_login.should_be_new_login_form():\n            self.page_signup_login.close_new_login_form()\n            del self.page_signup_login\n        elif self.page_signup_login.should_be_login_page():\n            self.page_signup_login.close_login_page()\n            del self.page_signup_login\n        elif self.page_signup_login.should_be_trading_platform_login_form(cur_language):\n            self.page_signup_login.close_trading_platform_login_form()\n            del self.page_signup_login\n        elif self.page_signup_login.should_be_signup_form(cur_language):\n            del self.page_signup_login\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(d, self.bid, '05', self.link)\n            assert False, \"Bug # 05. Opened a 'Sign up' form instead of a 'Login'\"\n            # pytest.fail(\"Bug # 05. Opened a 'Sign up' form instead of a 'Login'\", False)\n        elif self.page_signup_login.should_be_new_signup_form(cur_language):\n            del self.page_signup_login\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(d, self.bid, '05', self.link)\n            assert False, \"Bug # 05. Opened a new 'Sign up' form instead of a 'Login'\"\n            # pytest.fail(\"Bug # 05. Opened a 'Sign up' form instead of a 'Login'\", False)\n        elif self.page_signup_login.should_be_signup_page(cur_language):\n            del self.page_signup_login\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '06', self.link)\n            assert False, \"Bug # 06. Opened a 'Sign up' page instead of a 'Login'\"\n            # pytest.fail(\"Bug # 06. Opened a 'Sign up' page instead of a 'Login'\", False)\n        elif self.page_signup_login.should_be_trading_platform_signup_form(cur_language):\n            del self.page_signup_login\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(d, self.bid, '07', self.link)\n            assert False, \"Bug # 07. Opened a 'Sign up' form on trading platform instead of a 'Login'\"\n            # pytest.fail(\"Bug # 07. Opened a 'Sign up' form on trading platform instead of a 'Login'\", False)\n        else:\n            del self.page_signup_login\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(d, self.bid, '08', self.link)\n>           assert False, \"Bug # 08. Unknown situation instead 'Login' form opened\"\nE           AssertionError: Bug # 08. Unknown situation instead 'Login' form opened\n\npages/Elements/AssertClass.py:98: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1710871512969,"stop":1710871513354,"duration":385},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1710871513354,"stop":1710871513354,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1710871513354,"stop":1710871513354,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1710871513354,"stop":1710871513354,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1710871513355,"stop":1710871513355,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1710871513355,"stop":1710871513355,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1710871636975,"stop":1710871636975,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_sort","time":{"start":1710871739507,"stop":1710871739507,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: button [Buy] in Widget 'Trading instrument'\n        Language: All License: All (except FCA) Role: All.\n        ","status":"failed","statusMessage":"AssertionError: Bug # 08. Unknown situation instead 'Login' form opened","statusTrace":"self = <US_01-05-00_Commodities_test.TestCommodities object at 0x72a81e736e10>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0122bdd2a8a37302c134e9a56c16fed9\")>\ncur_language = 'de', cur_country = 'de', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_sort = 'top_risers'\n\n    @allure.step(\"Start test of button [Buy] in Widget 'Trading instrument'\")\n    @pytest.mark.test_003\n    def test_003_buy_trading_instrument(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_sort):\n        \"\"\"\n        Check: button [Buy] in Widget 'Trading instrument'\n        Language: All License: All (except FCA) Role: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"01.05\", \"Markets > Menu item [Commodities]\",\n            \".00_003\", \"Testing button [Buy]\")\n    \n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n    \n        page_conditions = Conditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        page_menu = MenuSection(d, link)\n        page_menu.move_focus_to_markets_menu(d, cur_language, cur_country)\n        cur_page_url = page_menu.sub_menu_commodities_move_focus_click(d, cur_language)\n    \n        test_element = TableTradingInstrumentsBuyButton(d, cur_page_url, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_page_url, cur_sort)\n\ntests/US_01_Markets/US_01-05_Commodities/US_01-05-00_Commodities_test.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/TableTradingInstrumentsBuyButton.py:45: in full_test_with_tpi\n    test_element.assert_login(d, cur_language, cur_item_link)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Elements.AssertClass.AssertClass object at 0x72a81e61df10>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0122bdd2a8a37302c134e9a56c16fed9\")>\ncur_language = 'de', cur_link = 'https://capital.com/de/rohstoffpreise'\n\n    @allure.step(f'{datetime.now()}   Checking that \"Login\" form or page opened')\n    def assert_login(self, d, cur_language, cur_link):\n        \"\"\"Method Assert Login form or page\"\"\"\n        print(f\"\\n{datetime.now()}   3. Assert_Login_v0\")\n        self.page_signup_login = SignupLogin(d, cur_link)\n        if self.page_signup_login.should_be_login_form():\n            self.page_signup_login.close_login_form()\n            del self.page_signup_login\n        elif self.page_signup_login.should_be_new_login_form():\n            self.page_signup_login.close_new_login_form()\n            del self.page_signup_login\n        elif self.page_signup_login.should_be_login_page():\n            self.page_signup_login.close_login_page()\n            del self.page_signup_login\n        elif self.page_signup_login.should_be_trading_platform_login_form(cur_language):\n            self.page_signup_login.close_trading_platform_login_form()\n            del self.page_signup_login\n        elif self.page_signup_login.should_be_signup_form(cur_language):\n            del self.page_signup_login\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(d, self.bid, '05', self.link)\n            assert False, \"Bug # 05. Opened a 'Sign up' form instead of a 'Login'\"\n            # pytest.fail(\"Bug # 05. Opened a 'Sign up' form instead of a 'Login'\", False)\n        elif self.page_signup_login.should_be_new_signup_form(cur_language):\n            del self.page_signup_login\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(d, self.bid, '05', self.link)\n            assert False, \"Bug # 05. Opened a new 'Sign up' form instead of a 'Login'\"\n            # pytest.fail(\"Bug # 05. Opened a 'Sign up' form instead of a 'Login'\", False)\n        elif self.page_signup_login.should_be_signup_page(cur_language):\n            del self.page_signup_login\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '06', self.link)\n            assert False, \"Bug # 06. Opened a 'Sign up' page instead of a 'Login'\"\n            # pytest.fail(\"Bug # 06. Opened a 'Sign up' page instead of a 'Login'\", False)\n        elif self.page_signup_login.should_be_trading_platform_signup_form(cur_language):\n            del self.page_signup_login\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(d, self.bid, '07', self.link)\n            assert False, \"Bug # 07. Opened a 'Sign up' form on trading platform instead of a 'Login'\"\n            # pytest.fail(\"Bug # 07. Opened a 'Sign up' form on trading platform instead of a 'Login'\", False)\n        else:\n            del self.page_signup_login\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(d, self.bid, '08', self.link)\n>           assert False, \"Bug # 08. Unknown situation instead 'Login' form opened\"\nE           AssertionError: Bug # 08. Unknown situation instead 'Login' form opened\n\npages/Elements/AssertClass.py:98: AssertionError","steps":[{"name":"Start test of button [Buy] in Widget 'Trading instrument'","time":{"start":1710871739508,"stop":1710871769789,"duration":30281},"status":"failed","statusMessage":"AssertionError: Bug # 08. Unknown situation instead 'Login' form opened\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_01_Markets/US_01-05_Commodities/US_01-05-00_Commodities_test.py\", line 101, in test_003_buy_trading_instrument\n    test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_page_url, cur_sort)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/TableTradingInstrumentsBuyButton.py\", line 45, in full_test_with_tpi\n    test_element.assert_login(d, cur_language, cur_item_link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 98, in assert_login\n    assert False, \"Bug # 08. Unknown situation instead 'Login' form opened\"\n","steps":[{"name":"2024-03-19 18:05:12.941535   Start Building dynamic arguments for allure report generation","time":{"start":1710871739508,"stop":1710871739510,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"0122bdd2a8a37302c134e9a56c16fed9\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'de'"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"us","value":"'01.05'"},{"name":"desc_us","value":"'Markets > Menu item [Commodities]'"},{"name":"num_tc","value":"'.00_003'"},{"name":"desc_tc","value":"'Testing button [Buy]'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-03-19 18:05:12.945979   Set preconditions","time":{"start":1710871739510,"stop":1710871744430,"duration":4920},"status":"passed","steps":[{"name":"2024-03-19 18:05:12.944715   Start Checking Captcha","time":{"start":1710871740478,"stop":1710871741486,"duration":1008},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"2024-03-19 18:05:12.943233.   Click 'Language and Country' menu section.","time":{"start":1710871741489,"stop":1710871742811,"duration":1322},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"test_language","value":"'de'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-03-19 18:05:12.943393   Set language","time":{"start":1710871742811,"stop":1710871744428,"duration":1617},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_language","value":"'de'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"0122bdd2a8a37302c134e9a56c16fed9\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'de'"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-03-19 18:05:12.943276.   Focus moved to 'Markets' menu","time":{"start":1710871744431,"stop":1710871746227,"duration":1796},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"0122bdd2a8a37302c134e9a56c16fed9\")>"},{"name":"test_language","value":"'de'"},{"name":"test_country","value":"'de'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-03-19 18:05:12.943699. Move focus to 'Commodities' submenu and click.","time":{"start":1710871746227,"stop":1710871747625,"duration":1398},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"0122bdd2a8a37302c134e9a56c16fed9\")>"},{"name":"test_language","value":"'de'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-03-19 18:05:12.940330   Check that form [Sign up] opened","time":{"start":1710871748700,"stop":1710871750230,"duration":1530},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"timeout","value":"1"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Click button Buy","time":{"start":1710871750230,"stop":1710871750387,"duration":157},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"0122bdd2a8a37302c134e9a56c16fed9\")>"},{"name":"value","value":"5"},{"name":"cur_sort","value":"'top_risers'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-03-19 18:05:12.940545   Checking that \"Login\" form or page opened","time":{"start":1710871750387,"stop":1710871769789,"duration":19402},"status":"failed","statusMessage":"AssertionError: Bug # 08. Unknown situation instead 'Login' form opened\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 98, in assert_login\n    assert False, \"Bug # 08. Unknown situation instead 'Login' form opened\"\n","steps":[{"name":"Check that form [Login] is opened","time":{"start":1710871750387,"stop":1710871753449,"duration":3062},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check that new form [Login] is opened","time":{"start":1710871753449,"stop":1710871756527,"duration":3078},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check that page [Login] is opened","time":{"start":1710871756527,"stop":1710871756530,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check that [Login] form on trading platform page opened","time":{"start":1710871756530,"stop":1710871759588,"duration":3058},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_language","value":"'de'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check that \"Sign up\" form opened","time":{"start":1710871759588,"stop":1710871762647,"duration":3059},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_language","value":"'de'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check that \"Sign up\" form opened","time":{"start":1710871762647,"stop":1710871765712,"duration":3065},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_language","value":"'de'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check that page [Sign up] opened","time":{"start":1710871765712,"stop":1710871766716,"duration":1004},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_language","value":"'de'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check that [Sign up] form on trading platform page opened","time":{"start":1710871766716,"stop":1710871769786,"duration":3070},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_language","value":"'de'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"0122bdd2a8a37302c134e9a56c16fed9\")>"},{"name":"cur_language","value":"'de'"},{"name":"cur_link","value":"'https://capital.com/de/rohstoffpreise'"}],"shouldDisplayMessage":true,"stepsCount":8,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"0122bdd2a8a37302c134e9a56c16fed9\")>"},{"name":"cur_language","value":"'de'"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_sort","value":"'top_risers'"}],"shouldDisplayMessage":false,"stepsCount":18,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"b5f492f6d2afc8dc","name":"Screenshot","source":"b5f492f6d2afc8dc.png","type":"image/png","size":117062},{"uid":"aea39f4ba81b9eb5","name":"log","source":"aea39f4ba81b9eb5.txt","type":"text/plain","size":9812},{"uid":"902889f6ec0d5dab","name":"stdout","source":"902889f6ec0d5dab.txt","type":"text/plain","size":5228}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":19,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1710871989142,"stop":1710871989283,"duration":141},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_01.05 | Markets > Menu item [Commodities]"},{"name":"feature","value":"Language: de"},{"name":"story","value":"Country: de / Role: NoAuth"},{"name":"tag","value":"test_003"},{"name":"tag","value":"us_01_05"},{"name":"parentSuite","value":"tests.US_01_Markets.US_01-05_Commodities"},{"name":"suite","value":"US_01-05-00_Commodities_test"},{"name":"subSuite","value":"TestCommodities"},{"name":"host","value":"fv-az573-278"},{"name":"thread","value":"8682-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_01_Markets.US_01-05_Commodities.US_01-05-00_Commodities_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'de'"},{"name":"cur_language","value":"'de'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_sort","value":"'top_risers'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["us_01_05","test_003"]},"source":"73d04e0cb3f6cd2.json","parameterValues":["'de'","'de'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoAuth'","'top_risers'","'Chrome'"]}