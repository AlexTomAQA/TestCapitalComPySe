{"uid":"77e092ef0df213e5","name":"TC_55!077b (Lang: zh) | Bid:55!077b-zh.au.NoAuth","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_077b","historyId":"2b32b05eec3c4879335ad5b663544738","time":{"start":1723139311239,"stop":1723139361300,"duration":50061},"description":"\n        Check: presence of the sidebar \"Crypto Trading Guide\" on the \"Bitcoin Gold\" page.\n        Language: EN, DE, ZH, RU, ES,IT, PL\n        License: CYSEC, SCB, ASIC\n        Author: Kasila\n        ","descriptionHtml":"<pre><code>    Check: presence of the sidebar &quot;Crypto Trading Guide&quot; on the &quot;Bitcoin Gold&quot; page.\n    Language: EN, DE, ZH, RU, ES,IT, PL\n    License: CYSEC, SCB, ASIC\n    Author: Kasila\n</code></pre>\n","status":"failed","statusMessage":"Failed: #Bug # 55!077b \nExpected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\nActual result: Sidebar is absent on the 'Bitcoin Gold' page","statusTrace":"self = <pages.BugsManual.bug_077.Sidebar object at 0x7f3b070173e0>\nsidebar_item = 'Bitcoin Gold'\n\n    def assert_b(self, sidebar_item):\n        print(f\"\\n{datetime.now()}   2. Assert\")\n        try:\n>           sidebar = self.driver.find_element(By.CSS_SELECTOR, 'div.side-nav')\n\npages/BugsManual/bug_077.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3b09bbbd40>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x563687eaa020 \\\\u003Cunknown>\\\\n#17 0x563687eb947c \\\\u003Cunknown>\\\\n#18 0x7f9f81494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div.side-nav\"}\nE         (Session info: chrome=127.0.6533.88); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x563687eba6aa <unknown>\nE       #1 0x563687b8b600 <unknown>\nE       #2 0x563687bdabcb <unknown>\nE       #3 0x563687bdaeb1 <unknown>\nE       #4 0x563687c1eb24 <unknown>\nE       #5 0x563687bfd8cd <unknown>\nE       #6 0x563687c1c04a <unknown>\nE       #7 0x563687bfd643 <unknown>\nE       #8 0x563687bcdd31 <unknown>\nE       #9 0x563687bce79e <unknown>\nE       #10 0x563687e8223b <unknown>\nE       #11 0x563687e861d2 <unknown>\nE       #12 0x563687e6f5f5 <unknown>\nE       #13 0x563687e86d62 <unknown>\nE       #14 0x563687e5423f <unknown>\nE       #15 0x563687ea9e48 <unknown>\nE       #16 0x563687eaa020 <unknown>\nE       #17 0x563687eb947c <unknown>\nE       #18 0x7f9f81494ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7f3b070a0aa0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"022463bb68929c7d5fd506e54b704875\")>\ncur_language_2_rnd_from_7 = 'zh', cur_country = 'au', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\nsidebar_item = 'Bitcoin Gold'\n\n    @allure.step('Start retest manual AT_55!077b of the presence of the \"Crypto trading  guide\" sidebar on '\n                 '\"Bitcoin Gold\" page')\n    @pytest.mark.parametrize('cur_country', random.sample(['de', 'ua', 'au'], 1))\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('sidebar_item', ['Bitcoin Gold'])\n    @pytest.mark.bug_077b\n    def test_077b(self, worker_id, d, cur_language_2_rnd_from_7, cur_country, cur_role, cur_login, cur_password,\n                  sidebar_item):\n        \"\"\"\n        Check: presence of the sidebar \"Crypto Trading Guide\" on the \"Bitcoin Gold\" page.\n        Language: EN, DE, ZH, RU, ES,IT, PL\n        License: CYSEC, SCB, ASIC\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language_2_rnd_from_7, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"077b\", 'Sidebar \" Crypto trading  guide\" is absent on page \"Bitcoin Gold\"'\n        )\n    \n        page_conditions = Conditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language_2_rnd_from_7, cur_country, cur_role, cur_login, cur_password)\n    \n        menu = MenuSection(d, link)\n        cur_item_link = menu.open_education_cryptocurrency_trading_menu(d, cur_language_2_rnd_from_7, cur_country,\n                                                                        link)\n    \n        test_element = Sidebar(d, cur_item_link, bid)\n        match cur_language_2_rnd_from_7:\n            case \"\" | \"de\" | \"zh\":\n                test_element.sidebar_en_de_zh(d, cur_item_link, sidebar_item)\n            case \"ru\" | \"es\" | \"it\" | \"pl\":\n                test_element.sidebar_ru_es_it_pl(d, cur_item_link, sidebar_item)\n>       test_element.assert_b(sidebar_item)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:156: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_077.py:126: in assert_b\n    Common.pytest_fail(f\"#Bug # 55!077b \"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = \"#Bug # 55!077b \\nExpected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\\nActual result: Sidebar is absent on the 'Bitcoin Gold' page\"\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: #Bug # 55!077b \nE    Expected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\nE    Actual result: Sidebar is absent on the 'Bitcoin Gold' page\n\npages/common.py:234: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1723138701694,"stop":1723138702024,"duration":330},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1723138702024,"stop":1723138702025,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1723138702025,"stop":1723138702025,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1723138702025,"stop":1723138702025,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language_2_rnd_from_7","time":{"start":1723139311239,"stop":1723139311239,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: presence of the sidebar \"Crypto Trading Guide\" on the \"Bitcoin Gold\" page.\n        Language: EN, DE, ZH, RU, ES,IT, PL\n        License: CYSEC, SCB, ASIC\n        Author: Kasila\n        ","status":"failed","statusMessage":"Failed: #Bug # 55!077b \nExpected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\nActual result: Sidebar is absent on the 'Bitcoin Gold' page","statusTrace":"self = <pages.BugsManual.bug_077.Sidebar object at 0x7f3b070173e0>\nsidebar_item = 'Bitcoin Gold'\n\n    def assert_b(self, sidebar_item):\n        print(f\"\\n{datetime.now()}   2. Assert\")\n        try:\n>           sidebar = self.driver.find_element(By.CSS_SELECTOR, 'div.side-nav')\n\npages/BugsManual/bug_077.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3b09bbbd40>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x563687eaa020 \\\\u003Cunknown>\\\\n#17 0x563687eb947c \\\\u003Cunknown>\\\\n#18 0x7f9f81494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div.side-nav\"}\nE         (Session info: chrome=127.0.6533.88); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x563687eba6aa <unknown>\nE       #1 0x563687b8b600 <unknown>\nE       #2 0x563687bdabcb <unknown>\nE       #3 0x563687bdaeb1 <unknown>\nE       #4 0x563687c1eb24 <unknown>\nE       #5 0x563687bfd8cd <unknown>\nE       #6 0x563687c1c04a <unknown>\nE       #7 0x563687bfd643 <unknown>\nE       #8 0x563687bcdd31 <unknown>\nE       #9 0x563687bce79e <unknown>\nE       #10 0x563687e8223b <unknown>\nE       #11 0x563687e861d2 <unknown>\nE       #12 0x563687e6f5f5 <unknown>\nE       #13 0x563687e86d62 <unknown>\nE       #14 0x563687e5423f <unknown>\nE       #15 0x563687ea9e48 <unknown>\nE       #16 0x563687eaa020 <unknown>\nE       #17 0x563687eb947c <unknown>\nE       #18 0x7f9f81494ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7f3b070a0aa0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"022463bb68929c7d5fd506e54b704875\")>\ncur_language_2_rnd_from_7 = 'zh', cur_country = 'au', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\nsidebar_item = 'Bitcoin Gold'\n\n    @allure.step('Start retest manual AT_55!077b of the presence of the \"Crypto trading  guide\" sidebar on '\n                 '\"Bitcoin Gold\" page')\n    @pytest.mark.parametrize('cur_country', random.sample(['de', 'ua', 'au'], 1))\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('sidebar_item', ['Bitcoin Gold'])\n    @pytest.mark.bug_077b\n    def test_077b(self, worker_id, d, cur_language_2_rnd_from_7, cur_country, cur_role, cur_login, cur_password,\n                  sidebar_item):\n        \"\"\"\n        Check: presence of the sidebar \"Crypto Trading Guide\" on the \"Bitcoin Gold\" page.\n        Language: EN, DE, ZH, RU, ES,IT, PL\n        License: CYSEC, SCB, ASIC\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language_2_rnd_from_7, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"077b\", 'Sidebar \" Crypto trading  guide\" is absent on page \"Bitcoin Gold\"'\n        )\n    \n        page_conditions = Conditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language_2_rnd_from_7, cur_country, cur_role, cur_login, cur_password)\n    \n        menu = MenuSection(d, link)\n        cur_item_link = menu.open_education_cryptocurrency_trading_menu(d, cur_language_2_rnd_from_7, cur_country,\n                                                                        link)\n    \n        test_element = Sidebar(d, cur_item_link, bid)\n        match cur_language_2_rnd_from_7:\n            case \"\" | \"de\" | \"zh\":\n                test_element.sidebar_en_de_zh(d, cur_item_link, sidebar_item)\n            case \"ru\" | \"es\" | \"it\" | \"pl\":\n                test_element.sidebar_ru_es_it_pl(d, cur_item_link, sidebar_item)\n>       test_element.assert_b(sidebar_item)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:156: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_077.py:126: in assert_b\n    Common.pytest_fail(f\"#Bug # 55!077b \"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = \"#Bug # 55!077b \\nExpected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\\nActual result: Sidebar is absent on the 'Bitcoin Gold' page\"\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: #Bug # 55!077b \nE    Expected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\nE    Actual result: Sidebar is absent on the 'Bitcoin Gold' page\n\npages/common.py:234: Failed","steps":[{"name":"Start retest manual AT_55!077b of the presence of the \"Crypto trading  guide\" sidebar on \"Bitcoin Gold\" page","time":{"start":1723139311239,"stop":1723139361300,"duration":50061},"status":"failed","statusMessage":"Failed: #Bug # 55!077b \nExpected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\nActual result: Sidebar is absent on the 'Bitcoin Gold' page\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py\", line 156, in test_077b\n    test_element.assert_b(sidebar_item)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_077.py\", line 126, in assert_b\n    Common.pytest_fail(f\"#Bug # 55!077b \"\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/common.py\", line 234, in pytest_fail\n    pytest.fail(msg)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Preconditions","time":{"start":1723139311241,"stop":1723139350822,"duration":39581},"status":"passed","steps":[{"name":"2024-08-08 17:38:21.528517   Start Checking Captcha","time":{"start":1723139313185,"stop":1723139318211,"duration":5026},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"2024-08-08 17:38:21.528517   Start Checking Captcha","time":{"start":1723139321359,"stop":1723139326404,"duration":5045},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Open 'Language and Country' menu section.","time":{"start":1723139326407,"stop":1723139327705,"duration":1298},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"test_language","value":"'zh'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Set country (licence)","time":{"start":1723139327705,"stop":1723139330288,"duration":2583},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_country","value":"'au'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-08-08 17:38:21.528517   Start Checking Captcha","time":{"start":1723139330288,"stop":1723139335295,"duration":5007},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Open 'Language and Country' menu section.","time":{"start":1723139335298,"stop":1723139336586,"duration":1288},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"test_language","value":"'zh'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Set language","time":{"start":1723139336586,"stop":1723139338261,"duration":1675},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_language","value":"'zh'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-08-08 17:38:21.528517   Start Checking Captcha","time":{"start":1723139338261,"stop":1723139343310,"duration":5049},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Authorization","time":{"start":1723139343313,"stop":1723139348571,"duration":5258},"status":"passed","steps":[{"name":"Click [Log In] button","time":{"start":1723139343317,"stop":1723139343403,"duration":86},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check that form [Login] is opened","time":{"start":1723139343403,"stop":1723139343724,"duration":321},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"022463bb68929c7d5fd506e54b704875\")>"},{"name":"link","value":"'https://capital.com/zh'"},{"name":"cur_language","value":"'zh'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-08-08 17:38:21.684670   DeAuthorisation","time":{"start":1723139348623,"stop":1723139350819,"duration":2196},"status":"passed","steps":[{"name":"Click button [My account]","time":{"start":1723139348625,"stop":1723139350209,"duration":1584},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Click 'Logout' button","time":{"start":1723139350209,"stop":1723139350804,"duration":595},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"022463bb68929c7d5fd506e54b704875\")>"},{"name":"link","value":"'https://capital.com/zh'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"022463bb68929c7d5fd506e54b704875\")>"},{"name":"host","value":"'https://capital.com/'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'zh'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":14,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Education\" menu, \"Cryptocurrency trading\" submenu","time":{"start":1723139350822,"stop":1723139355288,"duration":4466},"status":"passed","steps":[{"name":"Focus moved to 'Education' menu","time":{"start":1723139350829,"stop":1723139353016,"duration":2187},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"022463bb68929c7d5fd506e54b704875\")>"},{"name":"test_language","value":"'zh'"},{"name":"test_country","value":"'au'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Focus move to 'Cryptocurrency trading' submenu and click","time":{"start":1723139353016,"stop":1723139354983,"duration":1967},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"022463bb68929c7d5fd506e54b704875\")>"},{"name":"test_language","value":"'zh'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"022463bb68929c7d5fd506e54b704875\")>"},{"name":"cur_language","value":"'zh'"},{"name":"cur_country","value":"'au'"},{"name":"link","value":"'https://capital.com/zh'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"022463bb68929c7d5fd506e54b704875\")>"},{"name":"cur_language_2_rnd_from_7","value":"'zh'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"sidebar_item","value":"'Bitcoin Gold'"}],"shouldDisplayMessage":true,"stepsCount":18,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"a49416a6bb559da5","name":"Screenshot","source":"a49416a6bb559da5.png","type":"image/png","size":97700},{"uid":"14b7b8aa525d4c4e","name":"stdout","source":"14b7b8aa525d4c4e.txt","type":"text/plain","size":7810}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":19,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1723139603976,"stop":1723139604181,"duration":205},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!077b | Sidebar \" Crypto trading  guide\" is absent on page \"Bitcoin Gold\""},{"name":"feature","value":"Role: NoAuth"},{"name":"story","value":"Country: au"},{"name":"tag","value":"bug_077b"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az525-197"},{"name":"thread","value":"23037-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'au'"},{"name":"cur_language_2_rnd_from_7","value":"'zh'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"d","value":"'Chrome'"},{"name":"sidebar_item","value":"'Bitcoin Gold'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"47e7cbb18205a01c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/77//#testresult/47e7cbb18205a01c","status":"failed","statusDetails":"Failed: #Bug # 55!077b \nExpected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\nActual result: Sidebar is absent on the 'Bitcoin Gold' page","time":{"start":1723088908831,"stop":1723088945882,"duration":37051}},{"uid":"e9c381fca8c90893","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/76//#testresult/e9c381fca8c90893","status":"failed","statusDetails":"Failed: #Bug # 55!077b \nExpected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\nActual result: Sidebar is absent on the 'Bitcoin Gold' page","time":{"start":1723002372427,"stop":1723002408379,"duration":35952}}]},"tags":["us_55","bug_077b"]},"source":"77e092ef0df213e5.json","parameterValues":["'au'","'zh'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoAuth'","'Chrome'","'Bitcoin Gold'"]}