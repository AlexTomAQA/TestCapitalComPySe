{"uid":"27b7f366103dbee2","name":"TC_55!285ar (Lang: ar) | Bid:55!285ar-ar.ae.Auth","fullName":"tests.US_55_ReTestsManual.mila_podchasova.US_55-mila_podchasova_ReTestsManual_test.TestManualDetectedBugs#test_285ar","historyId":"b879b9146408c2d773c893fecab3ae60","time":{"start":1742690498195,"stop":1742690504184,"duration":5989},"description":"\n        Opened the Trading platform page\n        instead [My Account] menu after clicking the [My account] button\n        Language: AR\n        License: SCA.\n        Country: AE.\n        Author: podchasova11\n        ","descriptionHtml":"<pre><code>    Opened the Trading platform page\n    instead [My Account] menu after clicking the [My account] button\n    Language: AR\n    License: SCA.\n    Country: AE.\n    Author: podchasova11\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7f1cfa111550>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e7702a5a70cb65d178e093042dde61fb\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1cf9f4d8b0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x56337e50de76 \\\\u003Cunknown>\\\\n#22 0x7f6e7a69caa4 \\\\u003Cunknown>\\\\n#23 0x7f6e7a729c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.88)\nE       Stacktrace:\nE       #0 0x56337e50effa <unknown>\nE       #1 0x56337dfcd970 <unknown>\nE       #2 0x56337e0261ec <unknown>\nE       #3 0x56337e024055 <unknown>\nE       #4 0x56337e0216f2 <unknown>\nE       #5 0x56337e0208ca <unknown>\nE       #6 0x56337e0134cd <unknown>\nE       #7 0x56337e045292 <unknown>\nE       #8 0x56337e012e4a <unknown>\nE       #9 0x56337e04545e <unknown>\nE       #10 0x56337e06b70c <unknown>\nE       #11 0x56337e045063 <unknown>\nE       #12 0x56337e011328 <unknown>\nE       #13 0x56337e012491 <unknown>\nE       #14 0x56337e4d642b <unknown>\nE       #15 0x56337e4da2ec <unknown>\nE       #16 0x56337e4bda22 <unknown>\nE       #17 0x56337e4dae64 <unknown>\nE       #18 0x56337e4a1bef <unknown>\nE       #19 0x56337e4fd558 <unknown>\nE       #20 0x56337e4fd736 <unknown>\nE       #21 0x56337e50de76 <unknown>\nE       #22 0x7f6e7a69caa4 <unknown>\nE       #23 0x7f6e7a729c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-mila_podchasova_ReTestsManual_test.TestManualDetectedBugs object at 0x7f1cfa1216d0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e7702a5a70cb65d178e093042dde61fb\")>\ncur_language = 'ar', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start retest manual TC_55!00_285ar Opened the Trading platform page \"\n                 \"instead [My Account] menu after clicking the [My account] button\")\n    @pytest.mark.parametrize('cur_language', ['ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"Auth\"])\n    @pytest.mark.bug_285ar\n    def test_285ar(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Opened the Trading platform page\n        instead [My Account] menu after clicking the [My account] button\n        Language: AR\n        License: SCA.\n        Country: AE.\n        Author: podchasova11\n        \"\"\"\n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"285ar\",\n            \"Opened the Trading platform page \"\n            \"instead [My Account] menu after clicking the [My account] button\"\n        )\n    \n>       link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/mila_podchasova/US_55-mila_podchasova_ReTestsManual_test.py:177: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:152: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7f1cfa111550>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e7702a5a70cb65d178e093042dde61fb\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1742690346863,"stop":1742690347673,"duration":810},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1742690347673,"stop":1742690347673,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1742690347673,"stop":1742690347673,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1742690347674,"stop":1742690347674,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1742690481593,"stop":1742690481593,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Opened the Trading platform page\n        instead [My Account] menu after clicking the [My account] button\n        Language: AR\n        License: SCA.\n        Country: AE.\n        Author: podchasova11\n        ","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7f1cfa111550>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e7702a5a70cb65d178e093042dde61fb\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1cf9f4d8b0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x56337e50de76 \\\\u003Cunknown>\\\\n#22 0x7f6e7a69caa4 \\\\u003Cunknown>\\\\n#23 0x7f6e7a729c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.88)\nE       Stacktrace:\nE       #0 0x56337e50effa <unknown>\nE       #1 0x56337dfcd970 <unknown>\nE       #2 0x56337e0261ec <unknown>\nE       #3 0x56337e024055 <unknown>\nE       #4 0x56337e0216f2 <unknown>\nE       #5 0x56337e0208ca <unknown>\nE       #6 0x56337e0134cd <unknown>\nE       #7 0x56337e045292 <unknown>\nE       #8 0x56337e012e4a <unknown>\nE       #9 0x56337e04545e <unknown>\nE       #10 0x56337e06b70c <unknown>\nE       #11 0x56337e045063 <unknown>\nE       #12 0x56337e011328 <unknown>\nE       #13 0x56337e012491 <unknown>\nE       #14 0x56337e4d642b <unknown>\nE       #15 0x56337e4da2ec <unknown>\nE       #16 0x56337e4bda22 <unknown>\nE       #17 0x56337e4dae64 <unknown>\nE       #18 0x56337e4a1bef <unknown>\nE       #19 0x56337e4fd558 <unknown>\nE       #20 0x56337e4fd736 <unknown>\nE       #21 0x56337e50de76 <unknown>\nE       #22 0x7f6e7a69caa4 <unknown>\nE       #23 0x7f6e7a729c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-mila_podchasova_ReTestsManual_test.TestManualDetectedBugs object at 0x7f1cfa1216d0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e7702a5a70cb65d178e093042dde61fb\")>\ncur_language = 'ar', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start retest manual TC_55!00_285ar Opened the Trading platform page \"\n                 \"instead [My Account] menu after clicking the [My account] button\")\n    @pytest.mark.parametrize('cur_language', ['ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"Auth\"])\n    @pytest.mark.bug_285ar\n    def test_285ar(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Opened the Trading platform page\n        instead [My Account] menu after clicking the [My account] button\n        Language: AR\n        License: SCA.\n        Country: AE.\n        Author: podchasova11\n        \"\"\"\n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"285ar\",\n            \"Opened the Trading platform page \"\n            \"instead [My Account] menu after clicking the [My account] button\"\n        )\n    \n>       link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/mila_podchasova/US_55-mila_podchasova_ReTestsManual_test.py:177: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:152: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7f1cfa111550>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e7702a5a70cb65d178e093042dde61fb\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","steps":[{"name":"Start retest manual TC_55!00_285ar Opened the Trading platform page instead [My Account] menu after clicking the [My account] button","time":{"start":1742690498195,"stop":1742690504183,"duration":5988},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/mila_podchasova/US_55-mila_podchasova_ReTestsManual_test.py\", line 177, in test_285ar\n    link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 78, in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 152, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1742690498195,"stop":1742690498197,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e7702a5a70cb65d178e093042dde61fb\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'285ar'"},{"name":"desc_tc","value":"'Opened the Trading platform page instead [My Account] menu after clicking the [My account] button'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1742690498198,"stop":1742690504183,"duration":5985},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 152, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"2025-03-23 00:39:06.847105   Start Authorization","time":{"start":1742690503126,"stop":1742690504182,"duration":1056},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e7702a5a70cb65d178e093042dde61fb\")>"},{"name":"link","value":"'https://capital.com/en-gb'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e7702a5a70cb65d178e093042dde61fb\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e7702a5a70cb65d178e093042dde61fb\")>"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"17d73ccb4bbd2201","name":"Screenshot","source":"17d73ccb4bbd2201.png","type":"image/png","size":611094},{"uid":"7739fef3b53bee8","name":"stdout","source":"7739fef3b53bee8.txt","type":"text/plain","size":1961}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1742691043270,"stop":1742691043538,"duration":268},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!285ar | Opened the Trading platform page instead [My Account] menu after clicking the [My account] button"},{"name":"feature","value":"Role: Auth"},{"name":"story","value":"Country: ae"},{"name":"tag","value":"bug_285ar"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.mila_podchasova"},{"name":"suite","value":"US_55-mila_podchasova_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az1335-371"},{"name":"thread","value":"43503-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.mila_podchasova.US_55-mila_podchasova_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"'ar'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":15},"items":[{"uid":"c54cbd539674eaef","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/355//#testresult/c54cbd539674eaef","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742604037981,"stop":1742604043847,"duration":5866}},{"uid":"48cec24c9ea15a37","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/354//#testresult/48cec24c9ea15a37","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"accountBtns_userBtn__kCJ5A accountBtns_btnEmpty__TCWRE helpers_hideXs__vzgPk js-analyticsClick link_link__caosC\" data-type=\"btn_header_my_account\" href=\"/trading/platform/\" data-testid=\"account_btn\">...</a> is not clickable at point (495, 101). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\n  (Session info: chrome=134.0.6998.88)\nStacktrace:\n#0 0x55822290ca2a <unknown>\n#1 0x5582223c4390 <unknown>\n#2 0x55822241cafc <unknown>\n#3 0x55822241a95c <unknown>\n#4 0x558222417ff2 <unknown>\n#5 0x5582224176f0 <unknown>\n#6 0x558222409e0d <unknown>\n#7 0x55822243bbd2 <unknown>\n#8 0x55822240978a <unknown>\n#9 0x55822243bd9e <unknown>\n#10 0x55822246207b <unknown>\n#11 0x55822243b9a3 <unknown>\n#12 0x55822240760e <unknown>\n#13 0x558222408dd1 <unknown>\n#14 0x5582228d2deb <unknown>\n#15 0x5582228d6ccc <unknown>\n#16 0x5582228ba3a2 <unknown>\n#17 0x5582228d7844 <unknown>\n#18 0x55822289e1ff <unknown>\n#19 0x5582228fb048 <unknown>\n#20 0x5582228fb226 <unknown>\n#21 0x55822290b8a6 <unknown>\n#22 0x7f861849caa4 <unknown>\n#23 0x7f8618529c3c <unknown>","time":{"start":1742516656081,"stop":1742516662409,"duration":6328}},{"uid":"a7465577b0c46954","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/353//#testresult/a7465577b0c46954","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742430249232,"stop":1742430255212,"duration":5980}},{"uid":"b5d19c4676ae56a1","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/352//#testresult/b5d19c4676ae56a1","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742343372781,"stop":1742343378892,"duration":6111}},{"uid":"a4e6e8982061f32e","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/351//#testresult/a4e6e8982061f32e","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742258511241,"stop":1742258517173,"duration":5932}},{"uid":"77c5c412466c9b4b","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/350//#testresult/77c5c412466c9b4b","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742171904536,"stop":1742171910844,"duration":6308}},{"uid":"370c135c718281a4","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/349//#testresult/370c135c718281a4","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"accountBtns_userBtn__kCJ5A accountBtns_btnEmpty__TCWRE helpers_hideXs__vzgPk js-analyticsClick link_link__caosC\" data-type=\"btn_header_my_account\" href=\"/trading/platform/\" data-testid=\"account_btn\">...</a> is not clickable at point (495, 101). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\n  (Session info: chrome=134.0.6998.35)\nStacktrace:\n#0 0x559ca7854a1a <unknown>\n#1 0x559ca730c390 <unknown>\n#2 0x559ca7364afc <unknown>\n#3 0x559ca736295c <unknown>\n#4 0x559ca735fff2 <unknown>\n#5 0x559ca735f6f0 <unknown>\n#6 0x559ca7351e0d <unknown>\n#7 0x559ca7383bd2 <unknown>\n#8 0x559ca735178a <unknown>\n#9 0x559ca7383d9e <unknown>\n#10 0x559ca73aa07b <unknown>\n#11 0x559ca73839a3 <unknown>\n#12 0x559ca734f60e <unknown>\n#13 0x559ca7350dd1 <unknown>\n#14 0x559ca781addb <unknown>\n#15 0x559ca781ecbc <unknown>\n#16 0x559ca7802392 <unknown>\n#17 0x559ca781f834 <unknown>\n#18 0x559ca77e61ef <unknown>\n#19 0x559ca7843038 <unknown>\n#20 0x559ca7843216 <unknown>\n#21 0x559ca7853896 <unknown>\n#22 0x7ff7b949caa4 <unknown>\n#23 0x7ff7b9529c3c <unknown>","time":{"start":1742085955229,"stop":1742085961648,"duration":6419}},{"uid":"619e33ca3a51a5d4","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/348//#testresult/619e33ca3a51a5d4","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1741998357563,"stop":1741998363524,"duration":5961}},{"uid":"1b732fb711d99522","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/347//#testresult/1b732fb711d99522","status":"failed","statusDetails":"AssertionError: Bug#285ar. Expected result: Menu [My Account] is displayed\nActual result: The trading platform page is opened","time":{"start":1741917987769,"stop":1741917994039,"duration":6270}},{"uid":"bc3d22a20c891f6c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/346//#testresult/bc3d22a20c891f6c","status":"failed","statusDetails":"AssertionError: Bug#285ar. Expected result: Menu [My Account] is displayed\nActual result: The trading platform page is opened","time":{"start":1741830877027,"stop":1741830882590,"duration":5563}},{"uid":"51d8d1c58f79efac","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/345//#testresult/51d8d1c58f79efac","status":"failed","statusDetails":"AssertionError: Bug#285ar. Expected result: Menu [My Account] is displayed\nActual result: The trading platform page is opened","time":{"start":1741751028638,"stop":1741751034415,"duration":5777}},{"uid":"7d88ec589f40126c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/344//#testresult/7d88ec589f40126c","status":"failed","statusDetails":"AssertionError: Bug#285ar. Expected result: Menu [My Account] is displayed\nActual result: The trading platform page is opened","time":{"start":1741664929054,"stop":1741664934488,"duration":5434}},{"uid":"71e07e1372bf46eb","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/343//#testresult/71e07e1372bf46eb","status":"failed","statusDetails":"AssertionError: Bug#285ar. Expected result: Menu [My Account] is displayed\nActual result: The trading platform page is opened","time":{"start":1741571720953,"stop":1741571726613,"duration":5660}},{"uid":"88695e3299f9940a","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/342//#testresult/88695e3299f9940a","status":"failed","statusDetails":"AssertionError: Bug#285ar. Expected result: Menu [My Account] is displayed\nActual result: The trading platform page is opened","time":{"start":1741484831973,"stop":1741484837389,"duration":5416}}]},"tags":["bug_285ar","us_55"]},"source":"27b7f366103dbee2.json","parameterValues":["'ae'","'ar'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'Auth'","'Chrome'"]}