{"uid":"74b5ed1d4db942a4","name":"TC_55!362 (Lang: en) | Bid:55!362-en.gb.NoReg","fullName":"tests.US_55_ReTestsManual.artemdashkov.US_55-artemdashkov_ReTestsManual_test.TestManualDetected#test_362_widget_in_the_block_our_spread_betting_markets_is_not_displayed","historyId":"bb863404bd6125e55d559e48e7ed11ba","time":{"start":1726097103289,"stop":1726097120155,"duration":16866},"description":"\n        Check:  Click to the dropdown [Regional settings] > Click to the dropdown [Countries] >\n                Scroll down to the \"Honk Kong & Taiwan\" > Select \"Honk Kong & Taiwan\" > Click the button [Apply]\n                > Check country in Dropdown [Country & Language]\n        Language: EN - FCA, SCA; AR - SCA\n        License/Country: FCA, SCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        ","descriptionHtml":"<pre><code>    Check:  Click to the dropdown [Regional settings] &gt; Click to the dropdown [Countries] &gt;\n            Scroll down to the &quot;Honk Kong &amp; Taiwan&quot; &gt; Select &quot;Honk Kong &amp; Taiwan&quot; &gt; Click the button [Apply]\n            &gt; Check country in Dropdown [Country &amp; Language]\n    Language: EN - FCA, SCA; AR - SCA\n    License/Country: FCA, SCA\n    Role: NoReg, NoAuth, Auth\n    Author: Artem Dashkov\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=128.0.6613.119)\nStacktrace:\n#0 0x555d02f5b2da <unknown>\n#1 0x555d02c29041 <unknown>\n#2 0x555d02c79d3f <unknown>\n#3 0x555d02c6d8c6 <unknown>\n#4 0x555d02c9d8d2 <unknown>\n#5 0x555d02c6d279 <unknown>\n#6 0x555d02c9da9e <unknown>\n#7 0x555d02cbbdfd <unknown>\n#8 0x555d02c9d673 <unknown>\n#9 0x555d02c6b473 <unknown>\n#10 0x555d02c6c47e <unknown>\n#11 0x555d02f220db <unknown>\n#12 0x555d02f26071 <unknown>\n#13 0x555d02f0e9d5 <unknown>\n#14 0x555d02f26bf2 <unknown>\n#15 0x555d02ef3b6f <unknown>\n#16 0x555d02f4a248 <unknown>\n#17 0x555d02f4a417 <unknown>\n#18 0x555d02f5a0cc <unknown>\n#19 0x7f68d4894ac3 <unknown>","statusTrace":"self = <US_55-artemdashkov_ReTestsManual_test.TestManualDetected object at 0x7fb20b79a150>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9b30d1a8b50488451d168338496c9029\")>\ncur_language_country_for_fca_and_sca = ['', 'gb'], cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test of check selected country in Dropdown [Country & Language]\")\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_362\n    def test_362_widget_in_the_block_our_spread_betting_markets_is_not_displayed(\n            self, worker_id, d, cur_language_country_for_fca_and_sca, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check:  Click to the dropdown [Regional settings] > Click to the dropdown [Countries] >\n                Scroll down to the \"Honk Kong & Taiwan\" > Select \"Honk Kong & Taiwan\" > Click the button [Apply]\n                > Check country in Dropdown [Country & Language]\n        Language: EN - FCA, SCA; AR - SCA\n        License/Country: FCA, SCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language_country_for_fca_and_sca[0],\n            cur_language_country_for_fca_and_sca[1], cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"362\",\n            \"Click to the dropdown [Regional settings] > Click to the dropdown [Countries] > \"\n            \"Scroll down to the 'Honk Kong & Taiwan' > Select 'Honk Kong & Taiwan' > Click the button [Apply]\",\n            False, True\n        )\n        # pytest.skip(\"Промежуточная версия\")\n        # Arrange\n        host = None\n        if cur_language_country_for_fca_and_sca[0] == \"\" and cur_language_country_for_fca_and_sca[1] == \"gb\":\n            host = CapitalComPageSrc.URL_NEW\n        elif cur_language_country_for_fca_and_sca[0] == \"\" and cur_language_country_for_fca_and_sca[1] == \"ae\":\n            host = CapitalComPageSrc.URL_NEW_EN_AE\n        elif cur_language_country_for_fca_and_sca[0] == \"ar\" and cur_language_country_for_fca_and_sca[1] == \"ae\":\n            host = CapitalComPageSrc.URL_NEW_AR_AE\n    \n        page_conditions = NewConditions(d, \"\")\n        cur_item_link = page_conditions.preconditions(\n            d, host, \"\", cur_language_country_for_fca_and_sca[0],\n            cur_language_country_for_fca_and_sca[1], cur_role, cur_login, cur_password)\n    \n        test_element = BUG_362(d, cur_item_link, bid)\n        test_element.arrange(d, cur_item_link)\n    \n        # Act\n>       test_element.act(d)\n\ntests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py:962: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_362.py:110: in act\n    d.find_element(*APPLY_IN_REGIONAL_SETTINGS_LOCATOR).click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb20b8db470>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x555d02f4a417 \\\\u003Cunknown>\\\\n#18 0x555d02f5a0cc \\\\u003Cunknown>\\\\n#19 0x7f68d4894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=128.0.6613.119)\nE       Stacktrace:\nE       #0 0x555d02f5b2da <unknown>\nE       #1 0x555d02c29041 <unknown>\nE       #2 0x555d02c79d3f <unknown>\nE       #3 0x555d02c6d8c6 <unknown>\nE       #4 0x555d02c9d8d2 <unknown>\nE       #5 0x555d02c6d279 <unknown>\nE       #6 0x555d02c9da9e <unknown>\nE       #7 0x555d02cbbdfd <unknown>\nE       #8 0x555d02c9d673 <unknown>\nE       #9 0x555d02c6b473 <unknown>\nE       #10 0x555d02c6c47e <unknown>\nE       #11 0x555d02f220db <unknown>\nE       #12 0x555d02f26071 <unknown>\nE       #13 0x555d02f0e9d5 <unknown>\nE       #14 0x555d02f26bf2 <unknown>\nE       #15 0x555d02ef3b6f <unknown>\nE       #16 0x555d02f4a248 <unknown>\nE       #17 0x555d02f4a417 <unknown>\nE       #18 0x555d02f5a0cc <unknown>\nE       #19 0x7f68d4894ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1726094030967,"stop":1726094031340,"duration":373},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1726094031340,"stop":1726094031340,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1726094031340,"stop":1726094031340,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1726094031341,"stop":1726094031341,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language_country_for_fca_and_sca","time":{"start":1726097103289,"stop":1726097103289,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check:  Click to the dropdown [Regional settings] > Click to the dropdown [Countries] >\n                Scroll down to the \"Honk Kong & Taiwan\" > Select \"Honk Kong & Taiwan\" > Click the button [Apply]\n                > Check country in Dropdown [Country & Language]\n        Language: EN - FCA, SCA; AR - SCA\n        License/Country: FCA, SCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        ","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=128.0.6613.119)\nStacktrace:\n#0 0x555d02f5b2da <unknown>\n#1 0x555d02c29041 <unknown>\n#2 0x555d02c79d3f <unknown>\n#3 0x555d02c6d8c6 <unknown>\n#4 0x555d02c9d8d2 <unknown>\n#5 0x555d02c6d279 <unknown>\n#6 0x555d02c9da9e <unknown>\n#7 0x555d02cbbdfd <unknown>\n#8 0x555d02c9d673 <unknown>\n#9 0x555d02c6b473 <unknown>\n#10 0x555d02c6c47e <unknown>\n#11 0x555d02f220db <unknown>\n#12 0x555d02f26071 <unknown>\n#13 0x555d02f0e9d5 <unknown>\n#14 0x555d02f26bf2 <unknown>\n#15 0x555d02ef3b6f <unknown>\n#16 0x555d02f4a248 <unknown>\n#17 0x555d02f4a417 <unknown>\n#18 0x555d02f5a0cc <unknown>\n#19 0x7f68d4894ac3 <unknown>","statusTrace":"self = <US_55-artemdashkov_ReTestsManual_test.TestManualDetected object at 0x7fb20b79a150>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9b30d1a8b50488451d168338496c9029\")>\ncur_language_country_for_fca_and_sca = ['', 'gb'], cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test of check selected country in Dropdown [Country & Language]\")\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_362\n    def test_362_widget_in_the_block_our_spread_betting_markets_is_not_displayed(\n            self, worker_id, d, cur_language_country_for_fca_and_sca, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check:  Click to the dropdown [Regional settings] > Click to the dropdown [Countries] >\n                Scroll down to the \"Honk Kong & Taiwan\" > Select \"Honk Kong & Taiwan\" > Click the button [Apply]\n                > Check country in Dropdown [Country & Language]\n        Language: EN - FCA, SCA; AR - SCA\n        License/Country: FCA, SCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language_country_for_fca_and_sca[0],\n            cur_language_country_for_fca_and_sca[1], cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"362\",\n            \"Click to the dropdown [Regional settings] > Click to the dropdown [Countries] > \"\n            \"Scroll down to the 'Honk Kong & Taiwan' > Select 'Honk Kong & Taiwan' > Click the button [Apply]\",\n            False, True\n        )\n        # pytest.skip(\"Промежуточная версия\")\n        # Arrange\n        host = None\n        if cur_language_country_for_fca_and_sca[0] == \"\" and cur_language_country_for_fca_and_sca[1] == \"gb\":\n            host = CapitalComPageSrc.URL_NEW\n        elif cur_language_country_for_fca_and_sca[0] == \"\" and cur_language_country_for_fca_and_sca[1] == \"ae\":\n            host = CapitalComPageSrc.URL_NEW_EN_AE\n        elif cur_language_country_for_fca_and_sca[0] == \"ar\" and cur_language_country_for_fca_and_sca[1] == \"ae\":\n            host = CapitalComPageSrc.URL_NEW_AR_AE\n    \n        page_conditions = NewConditions(d, \"\")\n        cur_item_link = page_conditions.preconditions(\n            d, host, \"\", cur_language_country_for_fca_and_sca[0],\n            cur_language_country_for_fca_and_sca[1], cur_role, cur_login, cur_password)\n    \n        test_element = BUG_362(d, cur_item_link, bid)\n        test_element.arrange(d, cur_item_link)\n    \n        # Act\n>       test_element.act(d)\n\ntests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py:962: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_362.py:110: in act\n    d.find_element(*APPLY_IN_REGIONAL_SETTINGS_LOCATOR).click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb20b8db470>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x555d02f4a417 \\\\u003Cunknown>\\\\n#18 0x555d02f5a0cc \\\\u003Cunknown>\\\\n#19 0x7f68d4894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=128.0.6613.119)\nE       Stacktrace:\nE       #0 0x555d02f5b2da <unknown>\nE       #1 0x555d02c29041 <unknown>\nE       #2 0x555d02c79d3f <unknown>\nE       #3 0x555d02c6d8c6 <unknown>\nE       #4 0x555d02c9d8d2 <unknown>\nE       #5 0x555d02c6d279 <unknown>\nE       #6 0x555d02c9da9e <unknown>\nE       #7 0x555d02cbbdfd <unknown>\nE       #8 0x555d02c9d673 <unknown>\nE       #9 0x555d02c6b473 <unknown>\nE       #10 0x555d02c6c47e <unknown>\nE       #11 0x555d02f220db <unknown>\nE       #12 0x555d02f26071 <unknown>\nE       #13 0x555d02f0e9d5 <unknown>\nE       #14 0x555d02f26bf2 <unknown>\nE       #15 0x555d02ef3b6f <unknown>\nE       #16 0x555d02f4a248 <unknown>\nE       #17 0x555d02f4a417 <unknown>\nE       #18 0x555d02f5a0cc <unknown>\nE       #19 0x7f68d4894ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","steps":[{"name":"Start test of check selected country in Dropdown [Country & Language]","time":{"start":1726097103290,"stop":1726097120154,"duration":16864},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=128.0.6613.119)\nStacktrace:\n#0 0x555d02f5b2da <unknown>\n#1 0x555d02c29041 <unknown>\n#2 0x555d02c79d3f <unknown>\n#3 0x555d02c6d8c6 <unknown>\n#4 0x555d02c9d8d2 <unknown>\n#5 0x555d02c6d279 <unknown>\n#6 0x555d02c9da9e <unknown>\n#7 0x555d02cbbdfd <unknown>\n#8 0x555d02c9d673 <unknown>\n#9 0x555d02c6b473 <unknown>\n#10 0x555d02c6c47e <unknown>\n#11 0x555d02f220db <unknown>\n#12 0x555d02f26071 <unknown>\n#13 0x555d02f0e9d5 <unknown>\n#14 0x555d02f26bf2 <unknown>\n#15 0x555d02ef3b6f <unknown>\n#16 0x555d02f4a248 <unknown>\n#17 0x555d02f4a417 <unknown>\n#18 0x555d02f5a0cc <unknown>\n#19 0x7f68d4894ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py\", line 962, in test_362_widget_in_the_block_our_spread_betting_markets_is_not_displayed\n    test_element.act(d)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_362.py\", line 110, in act\n    d.find_element(*APPLY_IN_REGIONAL_SETTINGS_LOCATOR).click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1726097103290,"stop":1726097103291,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"9b30d1a8b50488451d168338496c9029\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'gb'"},{"name":"cur_role","value":"'NoReg'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'362'"},{"name":"desc_tc","value":"'Click to the dropdown [Regional settings] > Click to the dropdown [Countries] > Scroll down to the 'Honk Kong & Taiwan' > Select 'Honk Kong & Taiwan' > Click the button [Apply]'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"True"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1726097103291,"stop":1726097110044,"duration":6753},"status":"passed","steps":[{"name":"2024-09-11 22:33:50.937310   Set language and country","time":{"start":1726097108624,"stop":1726097110039,"duration":1415},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"9b30d1a8b50488451d168338496c9029\")>"},{"name":"cur_language","value":"'en'"},{"name":"cur_country","value":"'gb'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"9b30d1a8b50488451d168338496c9029\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'gb'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-09-11 22:33:50.930314   1. Start Arrange: open dropdown [Regional settings]","time":{"start":1726097110044,"stop":1726097110304,"duration":260},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"9b30d1a8b50488451d168338496c9029\")>"},{"name":"link","value":"'https://capital.com/en-gb'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"\n2024-09-11 22:33:50.930330   2. Start Act.","time":{"start":1726097110304,"stop":1726097120153,"duration":9849},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=128.0.6613.119)\nStacktrace:\n#0 0x555d02f5b2da <unknown>\n#1 0x555d02c29041 <unknown>\n#2 0x555d02c79d3f <unknown>\n#3 0x555d02c6d8c6 <unknown>\n#4 0x555d02c9d8d2 <unknown>\n#5 0x555d02c6d279 <unknown>\n#6 0x555d02c9da9e <unknown>\n#7 0x555d02cbbdfd <unknown>\n#8 0x555d02c9d673 <unknown>\n#9 0x555d02c6b473 <unknown>\n#10 0x555d02c6c47e <unknown>\n#11 0x555d02f220db <unknown>\n#12 0x555d02f26071 <unknown>\n#13 0x555d02f0e9d5 <unknown>\n#14 0x555d02f26bf2 <unknown>\n#15 0x555d02ef3b6f <unknown>\n#16 0x555d02f4a248 <unknown>\n#17 0x555d02f4a417 <unknown>\n#18 0x555d02f5a0cc <unknown>\n#19 0x7f68d4894ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_362.py\", line 110, in act\n    d.find_element(*APPLY_IN_REGIONAL_SETTINGS_LOCATOR).click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"9b30d1a8b50488451d168338496c9029\")>"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"9b30d1a8b50488451d168338496c9029\")>"},{"name":"cur_language_country_for_fca_and_sca","value":"['', 'gb']"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":5,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"496dd7c3798527e9","name":"Screenshot","source":"496dd7c3798527e9.png","type":"image/png","size":136741},{"uid":"eb85fb6421aca721","name":"stdout","source":"eb85fb6421aca721.txt","type":"text/plain","size":4397}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1726097277815,"stop":1726097278136,"duration":321},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!362 | Click to the dropdown [Regional settings] > Click to the dropdown [Countries] > Scroll down to the 'Honk Kong & Taiwan' > Select 'Honk Kong & Taiwan' > Click the button [Apply]"},{"name":"feature","value":"Role: NoReg"},{"name":"story","value":"Country: gb"},{"name":"tag","value":"bug_362"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.artemdashkov"},{"name":"suite","value":"US_55-artemdashkov_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetected"},{"name":"host","value":"fv-az841-825"},{"name":"thread","value":"4773-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.artemdashkov.US_55-artemdashkov_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_language_country_for_fca_and_sca","value":"['', 'gb']"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoReg'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"4ca0721e902c4852","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/138//#testresult/4ca0721e902c4852","status":"failed","statusDetails":"Failed: Bug # 362: Selected country in Dropdown list [Country & Language] not displayed when selecting Honk Kong & Taiwan in the dropdown [Regional settings].Displayed country is: Select Country","time":{"start":1726022378695,"stop":1726022395662,"duration":16967}},{"uid":"b2d2c3df79740632","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/137//#testresult/b2d2c3df79740632","status":"failed","statusDetails":"Failed: Bug # 362: Selected country in Dropdown list [Country & Language] not displayed when selecting Honk Kong & Taiwan in the dropdown [Regional settings].Displayed country is: Select Country","time":{"start":1726010819014,"stop":1726010835399,"duration":16385}},{"uid":"4b512a928a83d542","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/136//#testresult/4b512a928a83d542","status":"failed","statusDetails":"Failed: Bug # 362: Selected country in Dropdown list [Country & Language] not displayed when selecting Honk Kong & Taiwan in the dropdown [Regional settings].Displayed country is: Select Country","time":{"start":1725924453625,"stop":1725924469661,"duration":16036}},{"uid":"e88b0883dfccb72b","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/135//#testresult/e88b0883dfccb72b","status":"failed","statusDetails":"Failed: Bug # 362: Selected country in Dropdown list [Country & Language] not displayed when selecting Honk Kong & Taiwan in the dropdown [Regional settings].Displayed country is: Select Country","time":{"start":1725838221522,"stop":1725838236967,"duration":15445}},{"uid":"9eea6ffc74de34c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/134//#testresult/9eea6ffc74de34c","status":"failed","statusDetails":"Failed: Bug # 362: Selected country in Dropdown list [Country & Language] not displayed when selecting Honk Kong & Taiwan in the dropdown [Regional settings].Displayed country is: Select Country","time":{"start":1725772519885,"stop":1725772535737,"duration":15852}}]},"tags":["bug_362","us_55"]},"source":"74b5ed1d4db942a4.json","parameterValues":["['', 'gb']","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoReg'","'Chrome'"]}