{"uid":"6a4b15febeccf692","name":"TC_55!273 (Lang: ar) | Bid:55!273-ar.ae.Auth","fullName":"tests.US_55_ReTestsManual.saii-d3v.US_55-saii-d3v_ReTestsManual_test.TestManualDetectedBugs#test_273","historyId":"325a403a70aacd141d127142685536f7","time":{"start":1743464946477,"stop":1743464954960,"duration":8483},"description":"\n         Check: The page with “404 error” message is displayed\n                after clicking the link [تعلّم التداول] (Learn to trade)\n                in the tile [ترغب في تحسين استراتيجياتك؟] (Looking to sharpen your strategies?)\n                on the page \"تعلّم التداول\" (Learn to trade) when AR language is selected\n         Language: AR.\n         License: SCA.\n         Author: Sergey Aiidzhanov\n         ","descriptionHtml":"<pre><code>     Check: The page with “404 error” message is displayed\n            after clicking the link [تعلّم التداول] (Learn to trade)\n            in the tile [ترغب في تحسين استراتيجياتك؟] (Looking to sharpen your strategies?)\n            on the page &quot;تعلّم التداول&quot; (Learn to trade) when AR language is selected\n     Language: AR.\n     License: SCA.\n     Author: Sergey Aiidzhanov\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7febac8dd580>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab36ed4851743ebc5fcb4fe934c8002f\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7febaca14cb0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55e7047c7e76 \\\\u003Cunknown>\\\\n#22 0x7ff8abc9caa4 \\\\u003Cunknown>\\\\n#23 0x7ff8abd29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.165)\nE       Stacktrace:\nE       #0 0x55e7047c8ffa <unknown>\nE       #1 0x55e704287970 <unknown>\nE       #2 0x55e7042e01ec <unknown>\nE       #3 0x55e7042de055 <unknown>\nE       #4 0x55e7042db6f2 <unknown>\nE       #5 0x55e7042da8ca <unknown>\nE       #6 0x55e7042cd4cd <unknown>\nE       #7 0x55e7042ff292 <unknown>\nE       #8 0x55e7042cce4a <unknown>\nE       #9 0x55e7042ff45e <unknown>\nE       #10 0x55e70432570c <unknown>\nE       #11 0x55e7042ff063 <unknown>\nE       #12 0x55e7042cb328 <unknown>\nE       #13 0x55e7042cc491 <unknown>\nE       #14 0x55e70479042b <unknown>\nE       #15 0x55e7047942ec <unknown>\nE       #16 0x55e704777a22 <unknown>\nE       #17 0x55e704794e64 <unknown>\nE       #18 0x55e70475bbef <unknown>\nE       #19 0x55e7047b7558 <unknown>\nE       #20 0x55e7047b7736 <unknown>\nE       #21 0x55e7047c7e76 <unknown>\nE       #22 0x7ff8abc9caa4 <unknown>\nE       #23 0x7ff8abd29c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-saii-d3v_ReTestsManual_test.TestManualDetectedBugs object at 0x7febac986c30>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab36ed4851743ebc5fcb4fe934c8002f\")>\ncur_language = 'ar', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\n        'Start retest manual TC_55!273 | The page with “404 error” message is displayed '\n        'after clicking the link [تعلّم التداول] (Learn to trade) '\n        'in the tile [ترغب في تحسين استراتيجياتك؟] (Looking to sharpen your strategies?) '\n        'on the page \"تعلّم التداول\" (Learn to trade) when AR language is selected')\n    @pytest.mark.parametrize('cur_language', ['ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', ['Auth', 'NoAuth', 'NoReg'])\n    @pytest.mark.bug_273\n    def test_273(self, worker_id, d, cur_language, cur_country, cur_role,\n                 cur_login, cur_password):\n        \"\"\"\n         Check: The page with “404 error” message is displayed\n                after clicking the link [تعلّم التداول] (Learn to trade)\n                in the tile [ترغب في تحسين استراتيجياتك؟] (Looking to sharpen your strategies?)\n                on the page \"تعلّم التداول\" (Learn to trade) when AR language is selected\n         Language: AR.\n         License: SCA.\n         Author: Sergey Aiidzhanov\n         \"\"\"\n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"273\",\n            'The page with “404 error” message is displayed '\n            'after clicking the link [تعلّم التداول] (Learn to trade) '\n            'in the tile [ترغب في تحسين استراتيجياتك؟] (Looking to sharpen your strategies?) '\n            'on the page \"تعلّم التداول\" (Learn to trade) when AR language is selected',\n            False,\n            False\n        )\n    \n        # Arrange\n>       link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/saii-d3v/US_55-saii-d3v_ReTestsManual_test.py:478: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:152: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7febac8dd580>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab36ed4851743ebc5fcb4fe934c8002f\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1743463885329,"stop":1743463886136,"duration":807},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1743463886136,"stop":1743463886136,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1743463886136,"stop":1743463886136,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1743463886136,"stop":1743463886136,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n         Check: The page with “404 error” message is displayed\n                after clicking the link [تعلّم التداول] (Learn to trade)\n                in the tile [ترغب في تحسين استراتيجياتك؟] (Looking to sharpen your strategies?)\n                on the page \"تعلّم التداول\" (Learn to trade) when AR language is selected\n         Language: AR.\n         License: SCA.\n         Author: Sergey Aiidzhanov\n         ","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7febac8dd580>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab36ed4851743ebc5fcb4fe934c8002f\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7febaca14cb0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55e7047c7e76 \\\\u003Cunknown>\\\\n#22 0x7ff8abc9caa4 \\\\u003Cunknown>\\\\n#23 0x7ff8abd29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.165)\nE       Stacktrace:\nE       #0 0x55e7047c8ffa <unknown>\nE       #1 0x55e704287970 <unknown>\nE       #2 0x55e7042e01ec <unknown>\nE       #3 0x55e7042de055 <unknown>\nE       #4 0x55e7042db6f2 <unknown>\nE       #5 0x55e7042da8ca <unknown>\nE       #6 0x55e7042cd4cd <unknown>\nE       #7 0x55e7042ff292 <unknown>\nE       #8 0x55e7042cce4a <unknown>\nE       #9 0x55e7042ff45e <unknown>\nE       #10 0x55e70432570c <unknown>\nE       #11 0x55e7042ff063 <unknown>\nE       #12 0x55e7042cb328 <unknown>\nE       #13 0x55e7042cc491 <unknown>\nE       #14 0x55e70479042b <unknown>\nE       #15 0x55e7047942ec <unknown>\nE       #16 0x55e704777a22 <unknown>\nE       #17 0x55e704794e64 <unknown>\nE       #18 0x55e70475bbef <unknown>\nE       #19 0x55e7047b7558 <unknown>\nE       #20 0x55e7047b7736 <unknown>\nE       #21 0x55e7047c7e76 <unknown>\nE       #22 0x7ff8abc9caa4 <unknown>\nE       #23 0x7ff8abd29c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-saii-d3v_ReTestsManual_test.TestManualDetectedBugs object at 0x7febac986c30>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab36ed4851743ebc5fcb4fe934c8002f\")>\ncur_language = 'ar', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\n        'Start retest manual TC_55!273 | The page with “404 error” message is displayed '\n        'after clicking the link [تعلّم التداول] (Learn to trade) '\n        'in the tile [ترغب في تحسين استراتيجياتك؟] (Looking to sharpen your strategies?) '\n        'on the page \"تعلّم التداول\" (Learn to trade) when AR language is selected')\n    @pytest.mark.parametrize('cur_language', ['ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', ['Auth', 'NoAuth', 'NoReg'])\n    @pytest.mark.bug_273\n    def test_273(self, worker_id, d, cur_language, cur_country, cur_role,\n                 cur_login, cur_password):\n        \"\"\"\n         Check: The page with “404 error” message is displayed\n                after clicking the link [تعلّم التداول] (Learn to trade)\n                in the tile [ترغب في تحسين استراتيجياتك؟] (Looking to sharpen your strategies?)\n                on the page \"تعلّم التداول\" (Learn to trade) when AR language is selected\n         Language: AR.\n         License: SCA.\n         Author: Sergey Aiidzhanov\n         \"\"\"\n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"273\",\n            'The page with “404 error” message is displayed '\n            'after clicking the link [تعلّم التداول] (Learn to trade) '\n            'in the tile [ترغب في تحسين استراتيجياتك؟] (Looking to sharpen your strategies?) '\n            'on the page \"تعلّم التداول\" (Learn to trade) when AR language is selected',\n            False,\n            False\n        )\n    \n        # Arrange\n>       link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/saii-d3v/US_55-saii-d3v_ReTestsManual_test.py:478: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:152: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7febac8dd580>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab36ed4851743ebc5fcb4fe934c8002f\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","steps":[{"name":"Start retest manual TC_55!273 | The page with “404 error” message is displayed after clicking the link [تعلّم التداول] (Learn to trade) in the tile [ترغب في تحسين استراتيجياتك؟] (Looking to sharpen your strategies?) on the page \"تعلّم التداول\" (Learn to trade) when AR language is selected","time":{"start":1743464946477,"stop":1743464954959,"duration":8482},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/saii-d3v/US_55-saii-d3v_ReTestsManual_test.py\", line 478, in test_273\n    link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 78, in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 152, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1743464946477,"stop":1743464946479,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab36ed4851743ebc5fcb4fe934c8002f\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'273'"},{"name":"desc_tc","value":"'The page with “404 error” message is displayed after clicking the link [تعلّم التداول] (Learn to trade) in the tile [ترغب في تحسين استراتيجياتك؟] (Looking to sharpen your strategies?) on the page \"تعلّم التداول\" (Learn to trade) when AR language is selected'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1743464946479,"stop":1743464954959,"duration":8480},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 152, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"2025-03-31 23:31:25.261978   Start Authorization","time":{"start":1743464953888,"stop":1743464954958,"duration":1070},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab36ed4851743ebc5fcb4fe934c8002f\")>"},{"name":"link","value":"'https://capital.com/en-gb'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab36ed4851743ebc5fcb4fe934c8002f\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab36ed4851743ebc5fcb4fe934c8002f\")>"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"6f2f9cc3ea0efb1","name":"Screenshot","source":"6f2f9cc3ea0efb1.png","type":"image/png","size":611008},{"uid":"a1118970389d122","name":"stdout","source":"a1118970389d122.txt","type":"text/plain","size":2239}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1743466704175,"stop":1743466704603,"duration":428},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!273 | The page with “404 error” message is displayed after clicking the link [تعلّم التداول] (Learn to trade) in the tile [ترغب في تحسين استراتيجياتك؟] (Looking to sharpen your strategies?) on the page \"تعلّم التداول\" (Learn to trade) when AR language is selected"},{"name":"feature","value":"Role: Auth"},{"name":"story","value":"Country: ae"},{"name":"tag","value":"bug_273"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.saii-d3v"},{"name":"suite","value":"US_55-saii-d3v_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az2027-441"},{"name":"thread","value":"21344-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.saii-d3v.US_55-saii-d3v_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"'ar'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":24,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":24},"items":[{"uid":"97650facf16e05de","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/364//#testresult/97650facf16e05de","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743377987455,"stop":1743377996331,"duration":8876}},{"uid":"dfbfb70215c4d456","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/363//#testresult/dfbfb70215c4d456","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743291958421,"stop":1743291966686,"duration":8265}},{"uid":"aaed713d23f7b5fd","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/362//#testresult/aaed713d23f7b5fd","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743205499781,"stop":1743205508008,"duration":8227}},{"uid":"e9223a8e3e922484","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/361//#testresult/e9223a8e3e922484","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743119053155,"stop":1743119061714,"duration":8559}},{"uid":"2c027b37a61aab4c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/360//#testresult/2c027b37a61aab4c","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743031924149,"stop":1743031932953,"duration":8804}},{"uid":"d31122bef94410fa","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/359//#testresult/d31122bef94410fa","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742945472496,"stop":1742945480915,"duration":8419}},{"uid":"3464f56b8a965a99","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/358//#testresult/3464f56b8a965a99","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742858920674,"stop":1742858929278,"duration":8604}},{"uid":"9d71adfafe678c54","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/357//#testresult/9d71adfafe678c54","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742772796054,"stop":1742772804468,"duration":8414}},{"uid":"3a62100a42a019f0","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/356//#testresult/3a62100a42a019f0","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742686912372,"stop":1742686921341,"duration":8969}},{"uid":"91f1c21af70f3c0f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/355//#testresult/91f1c21af70f3c0f","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742600542285,"stop":1742600550629,"duration":8344}},{"uid":"42178c6a0b0f0c67","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/354//#testresult/42178c6a0b0f0c67","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742513137864,"stop":1742513146091,"duration":8227}},{"uid":"9018fbf0818f4126","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/353//#testresult/9018fbf0818f4126","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742426751051,"stop":1742426759364,"duration":8313}},{"uid":"bb5a912c3ea21527","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/352//#testresult/bb5a912c3ea21527","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742339830300,"stop":1742339838888,"duration":8588}},{"uid":"1540916df5dbe8b2","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/351//#testresult/1540916df5dbe8b2","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742255070541,"stop":1742255079094,"duration":8553}},{"uid":"eaeed43c900d11b4","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/350//#testresult/eaeed43c900d11b4","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742168516850,"stop":1742168524986,"duration":8136}},{"uid":"dbb81c77cdc5d2ba","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/349//#testresult/dbb81c77cdc5d2ba","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742082350163,"stop":1742082358274,"duration":8111}},{"uid":"b65b158cc83c822d","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/348//#testresult/b65b158cc83c822d","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1741994882052,"stop":1741994890306,"duration":8254}},{"uid":"7ae10932864ef8a7","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/347//#testresult/7ae10932864ef8a7","status":"failed","statusDetails":"Failed: Bug # 55!273 The the block \"Experienced traders\" is NOT into viewport","time":{"start":1741911131741,"stop":1741911158143,"duration":26402}},{"uid":"7223be98a7d6b897","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/346//#testresult/7223be98a7d6b897","status":"failed","statusDetails":"Failed: Bug # 55!273 The the block \"Experienced traders\" is NOT into viewport","time":{"start":1741824230785,"stop":1741824256411,"duration":25626}},{"uid":"3858168436f4d451","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/345//#testresult/3858168436f4d451","status":"failed","statusDetails":"Failed: Bug # 55!273 The the block \"Experienced traders\" is NOT into viewport","time":{"start":1741737579966,"stop":1741737606911,"duration":26945}}]},"tags":["bug_273","us_55"]},"source":"6a4b15febeccf692.json","parameterValues":["'ae'","'ar'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'Auth'","'Chrome'"]}