{"uid":"d9da3973665f3669","name":"TC_55!357 (Lang: en) | Bid:55!357-en.gb.NoAuth","fullName":"tests.US_55_ReTestsManual.artemdashkov.US_55-artemdashkov_ReTestsManual_test.TestManualDetected#test_357_widget_in_the_block_our_spread_betting_markets_is_not_displayed","historyId":"6e72b4705720f1ec5d3b5d76c2b33575","time":{"start":1743463030470,"stop":1743463036318,"duration":5848},"description":"\n        Check:  The widget of the block \"Our spread betting markets\" is absent\n                when click on the button [Commodities] or [Shares] on the page \"Spread betting\"\n        Language: EN\n        License/Country: FCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        ","descriptionHtml":"<pre><code>    Check:  The widget of the block &quot;Our spread betting markets&quot; is absent\n            when click on the button [Commodities] or [Shares] on the page &quot;Spread betting&quot;\n    Language: EN\n    License/Country: FCA\n    Role: NoReg, NoAuth, Auth\n    Author: Artem Dashkov\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7f61249b0b00>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fe8c09ce6667dce0f35a561a2525b0ad\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'NoAuth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f6125e27d70>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55604c1d7e76 \\\\u003Cunknown>\\\\n#22 0x7ff6a289caa4 \\\\u003Cunknown>\\\\n#23 0x7ff6a2929c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.165)\nE       Stacktrace:\nE       #0 0x55604c1d8ffa <unknown>\nE       #1 0x55604bc97970 <unknown>\nE       #2 0x55604bcf01ec <unknown>\nE       #3 0x55604bcee055 <unknown>\nE       #4 0x55604bceb6f2 <unknown>\nE       #5 0x55604bcea8ca <unknown>\nE       #6 0x55604bcdd4cd <unknown>\nE       #7 0x55604bd0f292 <unknown>\nE       #8 0x55604bcdce4a <unknown>\nE       #9 0x55604bd0f45e <unknown>\nE       #10 0x55604bd3570c <unknown>\nE       #11 0x55604bd0f063 <unknown>\nE       #12 0x55604bcdb328 <unknown>\nE       #13 0x55604bcdc491 <unknown>\nE       #14 0x55604c1a042b <unknown>\nE       #15 0x55604c1a42ec <unknown>\nE       #16 0x55604c187a22 <unknown>\nE       #17 0x55604c1a4e64 <unknown>\nE       #18 0x55604c16bbef <unknown>\nE       #19 0x55604c1c7558 <unknown>\nE       #20 0x55604c1c7736 <unknown>\nE       #21 0x55604c1d7e76 <unknown>\nE       #22 0x7ff6a289caa4 <unknown>\nE       #23 0x7ff6a2929c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-artemdashkov_ReTestsManual_test.TestManualDetected object at 0x7f6125dace00>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fe8c09ce6667dce0f35a561a2525b0ad\")>\ncur_language = '', cur_country = 'gb', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_tool = 'Shares'\n\n    @allure.step(\"Start test of check widget in the block 'Our spread betting markets'\")\n    @pytest.mark.parametrize('cur_language', [\"\"])\n    @pytest.mark.parametrize('cur_country', ['gb'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('cur_tool', [\"Commodities\", \"Shares\"])\n    @pytest.mark.bug_357\n    def test_357_widget_in_the_block_our_spread_betting_markets_is_not_displayed(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_tool):\n        \"\"\"\n        Check:  The widget of the block \"Our spread betting markets\" is absent\n                when click on the button [Commodities] or [Shares] on the page \"Spread betting\"\n        Language: EN\n        License/Country: FCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"357\",\n            \"Menu section [Trading] > Menu item [Spread betting] > \"\n            \"The widget of the block 'Our spread betting markets' > Click on the button [Commodities]\",\n            False, True\n        )\n        # Arrange\n>       cur_item_link = apply_preconditions_to_link(d, cur_language, cur_country,\n                                           cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:154: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7f61249b0b00>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fe8c09ce6667dce0f35a561a2525b0ad\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'NoAuth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1743460469974,"stop":1743460470764,"duration":790},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1743460470764,"stop":1743460470764,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1743460470764,"stop":1743460470764,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1743460470764,"stop":1743460470764,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check:  The widget of the block \"Our spread betting markets\" is absent\n                when click on the button [Commodities] or [Shares] on the page \"Spread betting\"\n        Language: EN\n        License/Country: FCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        ","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7f61249b0b00>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fe8c09ce6667dce0f35a561a2525b0ad\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'NoAuth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f6125e27d70>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55604c1d7e76 \\\\u003Cunknown>\\\\n#22 0x7ff6a289caa4 \\\\u003Cunknown>\\\\n#23 0x7ff6a2929c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.165)\nE       Stacktrace:\nE       #0 0x55604c1d8ffa <unknown>\nE       #1 0x55604bc97970 <unknown>\nE       #2 0x55604bcf01ec <unknown>\nE       #3 0x55604bcee055 <unknown>\nE       #4 0x55604bceb6f2 <unknown>\nE       #5 0x55604bcea8ca <unknown>\nE       #6 0x55604bcdd4cd <unknown>\nE       #7 0x55604bd0f292 <unknown>\nE       #8 0x55604bcdce4a <unknown>\nE       #9 0x55604bd0f45e <unknown>\nE       #10 0x55604bd3570c <unknown>\nE       #11 0x55604bd0f063 <unknown>\nE       #12 0x55604bcdb328 <unknown>\nE       #13 0x55604bcdc491 <unknown>\nE       #14 0x55604c1a042b <unknown>\nE       #15 0x55604c1a42ec <unknown>\nE       #16 0x55604c187a22 <unknown>\nE       #17 0x55604c1a4e64 <unknown>\nE       #18 0x55604c16bbef <unknown>\nE       #19 0x55604c1c7558 <unknown>\nE       #20 0x55604c1c7736 <unknown>\nE       #21 0x55604c1d7e76 <unknown>\nE       #22 0x7ff6a289caa4 <unknown>\nE       #23 0x7ff6a2929c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-artemdashkov_ReTestsManual_test.TestManualDetected object at 0x7f6125dace00>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fe8c09ce6667dce0f35a561a2525b0ad\")>\ncur_language = '', cur_country = 'gb', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_tool = 'Shares'\n\n    @allure.step(\"Start test of check widget in the block 'Our spread betting markets'\")\n    @pytest.mark.parametrize('cur_language', [\"\"])\n    @pytest.mark.parametrize('cur_country', ['gb'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('cur_tool', [\"Commodities\", \"Shares\"])\n    @pytest.mark.bug_357\n    def test_357_widget_in_the_block_our_spread_betting_markets_is_not_displayed(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_tool):\n        \"\"\"\n        Check:  The widget of the block \"Our spread betting markets\" is absent\n                when click on the button [Commodities] or [Shares] on the page \"Spread betting\"\n        Language: EN\n        License/Country: FCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"357\",\n            \"Menu section [Trading] > Menu item [Spread betting] > \"\n            \"The widget of the block 'Our spread betting markets' > Click on the button [Commodities]\",\n            False, True\n        )\n        # Arrange\n>       cur_item_link = apply_preconditions_to_link(d, cur_language, cur_country,\n                                           cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:154: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7f61249b0b00>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fe8c09ce6667dce0f35a561a2525b0ad\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'NoAuth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","steps":[{"name":"Start test of check widget in the block 'Our spread betting markets'","time":{"start":1743463030470,"stop":1743463036317,"duration":5847},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py\", line 897, in test_357_widget_in_the_block_our_spread_betting_markets_is_not_displayed\n    cur_item_link = apply_preconditions_to_link(d, cur_language, cur_country,\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 78, in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 154, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1743463030470,"stop":1743463030473,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"fe8c09ce6667dce0f35a561a2525b0ad\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'gb'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'357'"},{"name":"desc_tc","value":"'Menu section [Trading] > Menu item [Spread betting] > The widget of the block 'Our spread betting markets' > Click on the button [Commodities]'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"True"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1743463030473,"stop":1743463036317,"duration":5844},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 154, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"2025-03-31 22:34:29.918567   Start Authorization","time":{"start":1743463035219,"stop":1743463036316,"duration":1097},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"fe8c09ce6667dce0f35a561a2525b0ad\")>"},{"name":"link","value":"'https://capital.com/en-gb'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"fe8c09ce6667dce0f35a561a2525b0ad\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'gb'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"fe8c09ce6667dce0f35a561a2525b0ad\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'gb'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_tool","value":"'Shares'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"f49ec93731cc9cd4","name":"Screenshot","source":"f49ec93731cc9cd4.png","type":"image/png","size":611008},{"uid":"e8d4445095351a35","name":"stdout","source":"e8d4445095351a35.txt","type":"text/plain","size":1962}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1743463883695,"stop":1743463884111,"duration":416},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!357 | Menu section [Trading] > Menu item [Spread betting] > The widget of the block 'Our spread betting markets' > Click on the button [Commodities]"},{"name":"feature","value":"Role: NoAuth"},{"name":"story","value":"Country: gb"},{"name":"tag","value":"bug_357"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.artemdashkov"},{"name":"suite","value":"US_55-artemdashkov_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetected"},{"name":"host","value":"fv-az2027-441"},{"name":"thread","value":"5501-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.artemdashkov.US_55-artemdashkov_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'gb'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_tool","value":"'Shares'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":24,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":24},"items":[{"uid":"7bef17e64997ef43","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/364//#testresult/7bef17e64997ef43","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743376168158,"stop":1743376173954,"duration":5796}},{"uid":"47581e89224c376e","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/363//#testresult/47581e89224c376e","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743290054779,"stop":1743290060736,"duration":5957}},{"uid":"66e1ed2cc4574f41","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/362//#testresult/66e1ed2cc4574f41","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743203648927,"stop":1743203654733,"duration":5806}},{"uid":"25da462651c7b7cb","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/361//#testresult/25da462651c7b7cb","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743117170214,"stop":1743117176230,"duration":6016}},{"uid":"ba47c9fecff8bfbd","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/360//#testresult/ba47c9fecff8bfbd","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743030048050,"stop":1743030054071,"duration":6021}},{"uid":"c8daee1146fb4b0a","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/359//#testresult/c8daee1146fb4b0a","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742943572673,"stop":1742943578611,"duration":5938}},{"uid":"59ae95a0bebdb2d5","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/358//#testresult/59ae95a0bebdb2d5","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742857058122,"stop":1742857064338,"duration":6216}},{"uid":"ed6d46843e2eab11","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/357//#testresult/ed6d46843e2eab11","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742771011474,"stop":1742771017318,"duration":5844}},{"uid":"842061d1757585ef","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/356//#testresult/842061d1757585ef","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742684947815,"stop":1742684953698,"duration":5883}},{"uid":"46e3273ca1ba0f68","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/355//#testresult/46e3273ca1ba0f68","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742598677311,"stop":1742598683203,"duration":5892}},{"uid":"f003abc9eca6dfb6","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/354//#testresult/f003abc9eca6dfb6","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742511270572,"stop":1742511276511,"duration":5939}},{"uid":"2a92fe1a19726a54","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/353//#testresult/2a92fe1a19726a54","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742424733758,"stop":1742424739660,"duration":5902}},{"uid":"e61bd4f206c6be69","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/352//#testresult/e61bd4f206c6be69","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742337937916,"stop":1742337944132,"duration":6216}},{"uid":"17b67df44a0c7fb1","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/351//#testresult/17b67df44a0c7fb1","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742253282632,"stop":1742253288469,"duration":5837}},{"uid":"1a182bfe3b57a4d5","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/350//#testresult/1a182bfe3b57a4d5","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742166655996,"stop":1742166661842,"duration":5846}},{"uid":"9d00ed958dedf5a8","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/349//#testresult/9d00ed958dedf5a8","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742080545103,"stop":1742080551296,"duration":6193}},{"uid":"fbe145f48b30f782","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/348//#testresult/fbe145f48b30f782","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1741993039196,"stop":1741993045038,"duration":5842}},{"uid":"de8d6831d882f05d","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/347//#testresult/de8d6831d882f05d","status":"failed","statusDetails":"Failed: Bug # 357 The page 'Spread betting' don't have widget of the block 'Our spread betting markets' in DOM","time":{"start":1741907787769,"stop":1741907813985,"duration":26216}},{"uid":"fdf8996f0dce54ea","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/346//#testresult/fdf8996f0dce54ea","status":"failed","statusDetails":"Failed: Bug # 357 The page 'Spread betting' don't have widget of the block 'Our spread betting markets' in DOM","time":{"start":1741820796302,"stop":1741820825133,"duration":28831}},{"uid":"16b05a8e05583405","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/345//#testresult/16b05a8e05583405","status":"failed","statusDetails":"Failed: Bug # 357 The page 'Spread betting' don't have widget of the block 'Our spread betting markets' in DOM","time":{"start":1741734035485,"stop":1741734064815,"duration":29330}}]},"tags":["us_55","bug_357"]},"source":"d9da3973665f3669.json","parameterValues":["'gb'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoAuth'","'Shares'","'Chrome'"]}