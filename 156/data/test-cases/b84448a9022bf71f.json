{"uid":"b84448a9022bf71f","name":"TC_55!322a (Lang: ar) | Bid:55!322a-ar.ae.NoAuth","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_322a","historyId":"3d4afb50abd913337e0f730980af706b","time":{"start":1727051686577,"stop":1727051702838,"duration":16261},"description":"\n        Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        ","descriptionHtml":"<pre><code>    Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n            Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n            English or Arabic language.\n    Language: EN, AR\n    License: SCA\n    Author: Kasila\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","statusTrace":"self = <pages.BugsManual.bug_322.AssertTPI object at 0x7fc531292120>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6057e4373174bbb125b9d1bc23418ac2\")>\n\n    def assert_login(self, d):\n        print(f\"\\n{datetime.now()}   3. Assert\")\n    \n        try:\n>           login_form = self.driver.find_element(By.XPATH, '//strong/span[contains(text(), \"Login\")]')\n\npages/BugsManual/bug_322.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fc5312577a0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55ea88ee2417 \\\\u003Cunknown>\\\\n#17 0x55ea88ef20cc \\\\u003Cunknown>\\\\n#18 0x7fd993894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//strong/span[contains(text(), \"Login\")]\"}\nE         (Session info: chrome=128.0.6613.137); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55ea88ef32da <unknown>\nE       #1 0x55ea88bc1200 <unknown>\nE       #2 0x55ea88c10aa2 <unknown>\nE       #3 0x55ea88c10d41 <unknown>\nE       #4 0x55ea88c56964 <unknown>\nE       #5 0x55ea88c358fd <unknown>\nE       #6 0x55ea88c53dfd <unknown>\nE       #7 0x55ea88c35673 <unknown>\nE       #8 0x55ea88c03473 <unknown>\nE       #9 0x55ea88c0447e <unknown>\nE       #10 0x55ea88eba0db <unknown>\nE       #11 0x55ea88ebe071 <unknown>\nE       #12 0x55ea88ea69d5 <unknown>\nE       #13 0x55ea88ebebf2 <unknown>\nE       #14 0x55ea88e8bb6f <unknown>\nE       #15 0x55ea88ee2248 <unknown>\nE       #16 0x55ea88ee2417 <unknown>\nE       #17 0x55ea88ef20cc <unknown>\nE       #18 0x7fd993894ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7fc531c0aa80>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6057e4373174bbb125b9d1bc23418ac2\")>\ncur_language = 'ar', cur_country = 'ae', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ntitle_instrument = ''\n\n    @allure.step(\n        'Start retest manual AT_55!322a that the Sign Up/Login/page of the corresponding trading instrument on '\n        'the trading platform is opened after clicking [numeric values] in the Sell column.')\n    @pytest.mark.parametrize('cur_language', ['', 'ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('title_instrument', [''])\n    @pytest.mark.bug_322a\n    def test_322a(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, title_instrument):\n        \"\"\"\n        Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"322a\", 'The Sign Up/Login/page of the corresponding trading instrument on the trading platform'\n                   ' is not opened after clicking [numeric values] in the Sell column'\n        )\n    \n        page_conditions = NewConditions(d, \"\")\n    \n        match cur_language:\n            case '':\n                link = page_conditions.preconditions(\n                    d, CapitalComPageSrc.URL_NEW_EN_AE, \"\", cur_language, cur_country, cur_role, cur_login,\n                    cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_sell(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n                        test_element.assert_signup(d)\n                    case 'NoAuth':\n                        test_element.assert_login(d)\n                    case 'Auth':\n                        test_element.assert_tpi(d, title_instrument)\n            case 'ar':\n                link = page_conditions.preconditions(\n                    d, CapitalComPageSrc.URL_NEW_AR_AE, \"\", cur_language, cur_country, cur_role, cur_login,\n                    cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_sell(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n                        test_element.assert_signup(d)\n                    case 'NoAuth':\n>                       test_element.assert_login(d)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:290: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_322.py:129: in assert_login\n    Common.pytest_fail(\"Bug # 55!322 \"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 55!322 \\nExpected result: Login form is opened\\nActual result: Login form is not opened'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 55!322 \nE    Expected result: Login form is opened\nE    Actual result: Login form is not opened\n\npages/common.py:235: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1727050698355,"stop":1727050698958,"duration":603},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1727050698958,"stop":1727050698958,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1727050698958,"stop":1727050698958,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1727050698958,"stop":1727050698958,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        ","status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","statusTrace":"self = <pages.BugsManual.bug_322.AssertTPI object at 0x7fc531292120>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6057e4373174bbb125b9d1bc23418ac2\")>\n\n    def assert_login(self, d):\n        print(f\"\\n{datetime.now()}   3. Assert\")\n    \n        try:\n>           login_form = self.driver.find_element(By.XPATH, '//strong/span[contains(text(), \"Login\")]')\n\npages/BugsManual/bug_322.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fc5312577a0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55ea88ee2417 \\\\u003Cunknown>\\\\n#17 0x55ea88ef20cc \\\\u003Cunknown>\\\\n#18 0x7fd993894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//strong/span[contains(text(), \"Login\")]\"}\nE         (Session info: chrome=128.0.6613.137); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55ea88ef32da <unknown>\nE       #1 0x55ea88bc1200 <unknown>\nE       #2 0x55ea88c10aa2 <unknown>\nE       #3 0x55ea88c10d41 <unknown>\nE       #4 0x55ea88c56964 <unknown>\nE       #5 0x55ea88c358fd <unknown>\nE       #6 0x55ea88c53dfd <unknown>\nE       #7 0x55ea88c35673 <unknown>\nE       #8 0x55ea88c03473 <unknown>\nE       #9 0x55ea88c0447e <unknown>\nE       #10 0x55ea88eba0db <unknown>\nE       #11 0x55ea88ebe071 <unknown>\nE       #12 0x55ea88ea69d5 <unknown>\nE       #13 0x55ea88ebebf2 <unknown>\nE       #14 0x55ea88e8bb6f <unknown>\nE       #15 0x55ea88ee2248 <unknown>\nE       #16 0x55ea88ee2417 <unknown>\nE       #17 0x55ea88ef20cc <unknown>\nE       #18 0x7fd993894ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7fc531c0aa80>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6057e4373174bbb125b9d1bc23418ac2\")>\ncur_language = 'ar', cur_country = 'ae', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ntitle_instrument = ''\n\n    @allure.step(\n        'Start retest manual AT_55!322a that the Sign Up/Login/page of the corresponding trading instrument on '\n        'the trading platform is opened after clicking [numeric values] in the Sell column.')\n    @pytest.mark.parametrize('cur_language', ['', 'ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('title_instrument', [''])\n    @pytest.mark.bug_322a\n    def test_322a(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, title_instrument):\n        \"\"\"\n        Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"322a\", 'The Sign Up/Login/page of the corresponding trading instrument on the trading platform'\n                   ' is not opened after clicking [numeric values] in the Sell column'\n        )\n    \n        page_conditions = NewConditions(d, \"\")\n    \n        match cur_language:\n            case '':\n                link = page_conditions.preconditions(\n                    d, CapitalComPageSrc.URL_NEW_EN_AE, \"\", cur_language, cur_country, cur_role, cur_login,\n                    cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_sell(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n                        test_element.assert_signup(d)\n                    case 'NoAuth':\n                        test_element.assert_login(d)\n                    case 'Auth':\n                        test_element.assert_tpi(d, title_instrument)\n            case 'ar':\n                link = page_conditions.preconditions(\n                    d, CapitalComPageSrc.URL_NEW_AR_AE, \"\", cur_language, cur_country, cur_role, cur_login,\n                    cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_sell(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n                        test_element.assert_signup(d)\n                    case 'NoAuth':\n>                       test_element.assert_login(d)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:290: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_322.py:129: in assert_login\n    Common.pytest_fail(\"Bug # 55!322 \"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 55!322 \\nExpected result: Login form is opened\\nActual result: Login form is not opened'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 55!322 \nE    Expected result: Login form is opened\nE    Actual result: Login form is not opened\n\npages/common.py:235: Failed","steps":[{"name":"Start retest manual AT_55!322a that the Sign Up/Login/page of the corresponding trading instrument on the trading platform is opened after clicking [numeric values] in the Sell column.","time":{"start":1727051686577,"stop":1727051702837,"duration":16260},"status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py\", line 290, in test_322a\n    test_element.assert_login(d)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_322.py\", line 129, in assert_login\n    Common.pytest_fail(\"Bug # 55!322 \"\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/common.py\", line 235, in pytest_fail\n    pytest.fail(msg)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1727051686577,"stop":1727051686579,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"6057e4373174bbb125b9d1bc23418ac2\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'322a'"},{"name":"desc_tc","value":"'The Sign Up/Login/page of the corresponding trading instrument on the trading platform is not opened after clicking [numeric values] in the Sell column'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1727051686579,"stop":1727051689560,"duration":2981},"status":"passed","steps":[{"name":"2024-09-23 00:18:18.339596   Set language and country","time":{"start":1727051688077,"stop":1727051689552,"duration":1475},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"6057e4373174bbb125b9d1bc23418ac2\")>"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"6057e4373174bbb125b9d1bc23418ac2\")>"},{"name":"host","value":"'https://capital.com/ar-ae'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Trading\" menu, \"Trading\" submenu","time":{"start":1727051689560,"stop":1727051697696,"duration":8136},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"6057e4373174bbb125b9d1bc23418ac2\")>"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"link","value":"'https://capital.com/ar-ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-09-23 00:18:18.188118   1. Start test that the Clicking [numeric values] in the Sell column in Menu tittle Markets opens the Sign-Up /Login form or page of the corresponding trading instrument on the trading platform.","time":{"start":1727051697696,"stop":1727051697717,"duration":21},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"6057e4373174bbb125b9d1bc23418ac2\")>"},{"name":"cur_item_link","value":"'https://capital.com/ar-ae/markets'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"6057e4373174bbb125b9d1bc23418ac2\")>"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"title_instrument","value":"''"}],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9db63e1f762eb106","name":"Screenshot","source":"9db63e1f762eb106.png","type":"image/png","size":133177},{"uid":"3740faf0081e1657","name":"stdout","source":"3740faf0081e1657.txt","type":"text/plain","size":3959}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1727051879091,"stop":1727051879326,"duration":235},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!322a | The Sign Up/Login/page of the corresponding trading instrument on the trading platform is not opened after clicking [numeric values] in the Sell column"},{"name":"feature","value":"Role: NoAuth"},{"name":"story","value":"Country: ae"},{"name":"tag","value":"bug_322a"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az1766-921"},{"name":"thread","value":"30002-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"'ar'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"d","value":"'Chrome'"},{"name":"title_instrument","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":36,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":37},"items":[{"uid":"7513447d55c62f6c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/155//#testresult/7513447d55c62f6c","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1726980713810,"stop":1726980729791,"duration":15981}},{"uid":"fb04b3de64982f19","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/154//#testresult/fb04b3de64982f19","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1726964742930,"stop":1726964758916,"duration":15986}},{"uid":"9370585625e2f283","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/153//#testresult/9370585625e2f283","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1726878990153,"stop":1726879006080,"duration":15927}},{"uid":"a38b615486d78013","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/152//#testresult/a38b615486d78013","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1726792291000,"stop":1726792307078,"duration":16078}},{"uid":"fdc33d9910c11dce","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/151//#testresult/fdc33d9910c11dce","status":"failed","statusDetails":"Failed: Bug # 55!322 f\nExpected result: Login form is openedf\nActual result: Login form is not opened","time":{"start":1726725391034,"stop":1726725406970,"duration":15936}},{"uid":"544b7fdff6e6264f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/150//#testresult/544b7fdff6e6264f","status":"failed","statusDetails":"Failed: Bug # 55!322 f\nExpected result: Login form is openedf\nActual result: Login form is not opened","time":{"start":1726706095893,"stop":1726706111750,"duration":15857}},{"uid":"8fbd71080043b3ae","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/149//#testresult/8fbd71080043b3ae","status":"failed","statusDetails":"Failed: Bug # 55!322 f\nExpected result: Login form is openedf\nActual result: Login form is not opened","time":{"start":1726619691250,"stop":1726619707264,"duration":16014}},{"uid":"215b317ff3bc230e","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/148//#testresult/215b317ff3bc230e","status":"failed","statusDetails":"Failed: Bug # 55!322 f\nExpected result: Login form is openedf\nActual result: Login form is not opened","time":{"start":1726575625760,"stop":1726575642246,"duration":16486}},{"uid":"de05ab84e9b04ebd","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/147//#testresult/de05ab84e9b04ebd","status":"failed","statusDetails":"Failed: Bug # 55!322 f\nExpected result: Login form is openedf\nActual result: Login form is not opened","time":{"start":1726532885718,"stop":1726532903386,"duration":17668}},{"uid":"f51fc629d6f440ce","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/146//#testresult/f51fc629d6f440ce","status":"failed","statusDetails":"Failed: Bug # 55!322 f\nExpected result: Login form is openedf\nActual result: Login form is not opened","time":{"start":1726446663942,"stop":1726446680047,"duration":16105}},{"uid":"e0cb551ef6917927","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/145//#testresult/e0cb551ef6917927","status":"failed","statusDetails":"Failed: Bug # 55!322 f\nExpected result: Login form is openedf\nActual result: Login form is not opened","time":{"start":1726384544720,"stop":1726384560634,"duration":15914}},{"uid":"658924595b7f5f1b","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/144//#testresult/658924595b7f5f1b","status":"failed","statusDetails":"Failed: Bug # 55!322 f\nExpected result: Login form is openedf\nActual result: Login form is not opened","time":{"start":1726359404196,"stop":1726359420165,"duration":15969}},{"uid":"fbf425e017d83767","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/143//#testresult/fbf425e017d83767","status":"failed","statusDetails":"Failed: Bug # 55!322 f\nExpected result: Login form is openedf\nActual result: Login form is not opened","time":{"start":1726287370583,"stop":1726287386564,"duration":15981}},{"uid":"f9042e9961e72f0e","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/142//#testresult/f9042e9961e72f0e","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1726273258010,"stop":1726273282053,"duration":24043}},{"uid":"8cccfcaed4938994","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/141//#testresult/8cccfcaed4938994","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1726186915510,"stop":1726186939370,"duration":23860}},{"uid":"da747444e597777","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/127//#testresult/da747444e597777","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1725408909454,"stop":1725408933020,"duration":23566}},{"uid":"df6bebc0d5f879ed","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/126//#testresult/df6bebc0d5f879ed","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1725322540939,"stop":1725322563945,"duration":23006}},{"uid":"2e5fd36fb7c8d91e","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/125//#testresult/2e5fd36fb7c8d91e","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1725236211202,"stop":1725236234217,"duration":23015}},{"uid":"b81935a7bb0ad805","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/124//#testresult/b81935a7bb0ad805","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1725150433203,"stop":1725150457404,"duration":24201}},{"uid":"ed56ab997e0dd303","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/123//#testresult/ed56ab997e0dd303","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1725079479545,"stop":1725079502999,"duration":23454}}]},"tags":["us_55","bug_322a"]},"source":"b84448a9022bf71f.json","parameterValues":["'ae'","'ar'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoAuth'","'Chrome'","''"]}