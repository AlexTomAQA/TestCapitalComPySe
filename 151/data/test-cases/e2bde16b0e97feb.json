{"uid":"e2bde16b0e97feb","name":"TC_01.04.01_008 | Testing button [Indices] on trading instrument page. Bid:01.04.01_008-zh.au.Auth","fullName":"tests.US_01_Markets.US_01-04_Indices.US_01-04-01_Indices_test.TestIndicesItemPage#test_008_page_instrument_notification_button","historyId":"90d73fc791959a2d825b2da70894dcba","time":{"start":1712682868381,"stop":1712682877629,"duration":9248},"description":"\n        Check: Button [Notification] on trading instrument page\n        Language: All. License: All, except FCA.\n        ","descriptionHtml":"<pre><code>    Check: Button [Notification] on trading instrument page\n    Language: All. License: All, except FCA.\n</code></pre>\n","status":"broken","statusMessage":"TypeError: 'in <string>' requires string as left operand, not bool","statusTrace":"self = <US_01-04-01_Indices_test.TestIndicesItemPage object at 0x7f9098868290>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"06a1c684b7cbb09009b4ef825f436ec3\")>\ncur_language = 'zh', cur_country = 'au', cur_role = 'Auth'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\ncur_item_link = 'https://capital.com/zh/australian-dollar-us-dollar-li-lu'\n\n    @allure.step(\"Start test of button [Notification] on trading instrument page\")\n    @pytest.mark.test_008\n    def test_008_page_instrument_notification_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link):\n        \"\"\"\n        Check: Button [Notification] on trading instrument page\n        Language: All. License: All, except FCA.\n        \"\"\"\n    \n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"01.04\", \"Markets > Menu item [Indices]\",\n            \".01_008\", \"Testing button [Indices] on trading instrument page\")\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = PageInstrumentNotificationButton(d, cur_item_link, bid)\n>       test_element.full_test(d, cur_language, cur_country, cur_role, cur_item_link)\n\ntests/US_01_Markets/US_01-04_Indices/US_01-04-01_Indices_test.py:194: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/PageInstrumentNotificationButton.py:38: in full_test\n    test_element.assert_trading_platform_v4(d, cur_item_link, False, True, trade_instrument)\npages/Elements/AssertClass.py:167: in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\npages/Capital/Trading_platform/trading_platform.py:131: in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Capital.Trading_platform.trading_platform.TradingPlatform object at 0x7f90984c7440>\ntest_link = 'https://capital.com/zh/australian-dollar-us-dollar-li-lu'\ntrade_instrument = True\n\n    def should_be_corresponding_trading_instrument(self, test_link, trade_instrument):\n        \"\"\"\n        Check Trading platform is opened for corresponding trade instrument\n        \"\"\"\n        allure.step(f\"{datetime.now()}   Check if Trading platform open for corresponding trade instrument\")\n    \n        # cur_url = self.driver.current_url\n        print(f\"\\n{datetime.now()}   trade_instrument = '{trade_instrument}'\")\n        # trade_instrument_name = trade_instrument.split(\" \")[0]\n        # print(f\"{datetime.now()}   => trade_instrument_name = '{trade_instrument_name}'\")\n    \n        # 4.1. проверяем, что открыта трейдинговая платформа на вкладке [Charts]\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.1. Check that Trading Platform is opened in Chart mode\")\n        menu_chart = self.elements_are_present(*ChartingLocators.MENU_CHART)\n        if len(menu_chart) == 0:\n            msg = \"Bug # 14. Trading platform opened, but not Chart mode\"\n            print(f\"{datetime.now()}   => {msg}\")\n            print(f'Bid: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '14', self.link)\n            Common().assert_true_false(False, msg)\n        print(f\"{datetime.now()}   => Trading Platform opened in Chart mode\")\n    \n        # 4.2. определяем, какие вкладки открыты и избегаем ошибки пустого списка\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.2. Check that Top Charts List of Trading Platform not empty =>\")\n        top_chart_trade_list = self.elements_are_located(TradingInstruments.LIST_TRADE_INSTRUMENTS, 5)\n        if len(top_chart_trade_list) == 0:\n            print(f\"{datetime.now()}   => Trading Platform opened in Chart mode, but Top Charts List is empty\")\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '15', self.link)\n            msg = (\"Bug # 15. Trading platform was opened, \"\n                   \"but does no contain any trade instrument in the Top Charts List\")\n            Common().assert_true_false(False, msg)\n            # Common().browser_back_to_link_and_test_fail(self.driver, test_link, msg)\n    \n        # 4.3. проверяем, открыты ли детали выбранного торгового инструмента\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.3. Check that opened trade instrument info page =>\")\n        open_ticket = self.driver.find_elements(*TradingInstruments.OPEN_TICKET_TRADE_INSTRUMENTS)\n        if len(open_ticket) == 0:\n            msg = (\"Trading platform was opened, \"\n                   \"but does not contain any trading info\")\n            print(f\"{datetime.now()}   => {msg}\")\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '16', self.link)\n            Common().pytest_fail(f\"Bug # 16. {msg}\")\n    \n        # 4.4. проверяем, открыты ли детали выбранного торгового инструмента\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.4. Check that opened Info page of selected '{trade_instrument}' trade instrument =>\")\n        print(f\"{datetime.now()}   Trading instrument - '{trade_instrument}'\")\n        print(f\"{datetime.now()}   Title opened trading instrument info page - '{open_ticket[0].text}'\")\n>       if not (trade_instrument in open_ticket[0].text):\nE       TypeError: 'in <string>' requires string as left operand, not bool\n\npages/Capital/Trading_platform/trading_platform.py:430: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1712682411571,"stop":1712682412050,"duration":479},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1712682412050,"stop":1712682412050,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1712682412050,"stop":1712682412050,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1712682412050,"stop":1712682412051,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1712682412050,"stop":1712682412050,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1712682412051,"stop":1712682412051,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1712682781746,"stop":1712682781746,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [Notification] on trading instrument page\n        Language: All. License: All, except FCA.\n        ","status":"broken","statusMessage":"TypeError: 'in <string>' requires string as left operand, not bool","statusTrace":"self = <US_01-04-01_Indices_test.TestIndicesItemPage object at 0x7f9098868290>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"06a1c684b7cbb09009b4ef825f436ec3\")>\ncur_language = 'zh', cur_country = 'au', cur_role = 'Auth'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\ncur_item_link = 'https://capital.com/zh/australian-dollar-us-dollar-li-lu'\n\n    @allure.step(\"Start test of button [Notification] on trading instrument page\")\n    @pytest.mark.test_008\n    def test_008_page_instrument_notification_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link):\n        \"\"\"\n        Check: Button [Notification] on trading instrument page\n        Language: All. License: All, except FCA.\n        \"\"\"\n    \n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"01.04\", \"Markets > Menu item [Indices]\",\n            \".01_008\", \"Testing button [Indices] on trading instrument page\")\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = PageInstrumentNotificationButton(d, cur_item_link, bid)\n>       test_element.full_test(d, cur_language, cur_country, cur_role, cur_item_link)\n\ntests/US_01_Markets/US_01-04_Indices/US_01-04-01_Indices_test.py:194: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/PageInstrumentNotificationButton.py:38: in full_test\n    test_element.assert_trading_platform_v4(d, cur_item_link, False, True, trade_instrument)\npages/Elements/AssertClass.py:167: in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\npages/Capital/Trading_platform/trading_platform.py:131: in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Capital.Trading_platform.trading_platform.TradingPlatform object at 0x7f90984c7440>\ntest_link = 'https://capital.com/zh/australian-dollar-us-dollar-li-lu'\ntrade_instrument = True\n\n    def should_be_corresponding_trading_instrument(self, test_link, trade_instrument):\n        \"\"\"\n        Check Trading platform is opened for corresponding trade instrument\n        \"\"\"\n        allure.step(f\"{datetime.now()}   Check if Trading platform open for corresponding trade instrument\")\n    \n        # cur_url = self.driver.current_url\n        print(f\"\\n{datetime.now()}   trade_instrument = '{trade_instrument}'\")\n        # trade_instrument_name = trade_instrument.split(\" \")[0]\n        # print(f\"{datetime.now()}   => trade_instrument_name = '{trade_instrument_name}'\")\n    \n        # 4.1. проверяем, что открыта трейдинговая платформа на вкладке [Charts]\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.1. Check that Trading Platform is opened in Chart mode\")\n        menu_chart = self.elements_are_present(*ChartingLocators.MENU_CHART)\n        if len(menu_chart) == 0:\n            msg = \"Bug # 14. Trading platform opened, but not Chart mode\"\n            print(f\"{datetime.now()}   => {msg}\")\n            print(f'Bid: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '14', self.link)\n            Common().assert_true_false(False, msg)\n        print(f\"{datetime.now()}   => Trading Platform opened in Chart mode\")\n    \n        # 4.2. определяем, какие вкладки открыты и избегаем ошибки пустого списка\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.2. Check that Top Charts List of Trading Platform not empty =>\")\n        top_chart_trade_list = self.elements_are_located(TradingInstruments.LIST_TRADE_INSTRUMENTS, 5)\n        if len(top_chart_trade_list) == 0:\n            print(f\"{datetime.now()}   => Trading Platform opened in Chart mode, but Top Charts List is empty\")\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '15', self.link)\n            msg = (\"Bug # 15. Trading platform was opened, \"\n                   \"but does no contain any trade instrument in the Top Charts List\")\n            Common().assert_true_false(False, msg)\n            # Common().browser_back_to_link_and_test_fail(self.driver, test_link, msg)\n    \n        # 4.3. проверяем, открыты ли детали выбранного торгового инструмента\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.3. Check that opened trade instrument info page =>\")\n        open_ticket = self.driver.find_elements(*TradingInstruments.OPEN_TICKET_TRADE_INSTRUMENTS)\n        if len(open_ticket) == 0:\n            msg = (\"Trading platform was opened, \"\n                   \"but does not contain any trading info\")\n            print(f\"{datetime.now()}   => {msg}\")\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '16', self.link)\n            Common().pytest_fail(f\"Bug # 16. {msg}\")\n    \n        # 4.4. проверяем, открыты ли детали выбранного торгового инструмента\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.4. Check that opened Info page of selected '{trade_instrument}' trade instrument =>\")\n        print(f\"{datetime.now()}   Trading instrument - '{trade_instrument}'\")\n        print(f\"{datetime.now()}   Title opened trading instrument info page - '{open_ticket[0].text}'\")\n>       if not (trade_instrument in open_ticket[0].text):\nE       TypeError: 'in <string>' requires string as left operand, not bool\n\npages/Capital/Trading_platform/trading_platform.py:430: TypeError","steps":[{"name":"Start test of button [Notification] on trading instrument page","time":{"start":1712682868381,"stop":1712682877628,"duration":9247},"status":"broken","statusMessage":"TypeError: 'in <string>' requires string as left operand, not bool\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_01_Markets/US_01-04_Indices/US_01-04-01_Indices_test.py\", line 194, in test_008_page_instrument_notification_button\n    test_element.full_test(d, cur_language, cur_country, cur_role, cur_item_link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/PageInstrumentNotificationButton.py\", line 38, in full_test\n    test_element.assert_trading_platform_v4(d, cur_item_link, False, True, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 167, in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 131, in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 430, in should_be_corresponding_trading_instrument\n    if not (trade_instrument in open_ticket[0].text):\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[{"name":"Preconditions","time":{"start":1712682868383,"stop":1712682871895,"duration":3512},"status":"passed","steps":[{"name":"2024-04-09 17:06:51.504801   Start Checking Captcha","time":{"start":1712682870839,"stop":1712682871892,"duration":1053},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"06a1c684b7cbb09009b4ef825f436ec3\")>"},{"name":"host","value":"'https://capital.com/'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'zh'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Start testing for PageInstrumentNotificationButton of the trading instrument page","time":{"start":1712682871896,"stop":1712682877627,"duration":5731},"status":"broken","statusMessage":"TypeError: 'in <string>' requires string as left operand, not bool\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/PageInstrumentNotificationButton.py\", line 38, in full_test\n    test_element.assert_trading_platform_v4(d, cur_item_link, False, True, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 167, in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 131, in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 430, in should_be_corresponding_trading_instrument\n    if not (trade_instrument in open_ticket[0].text):\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[{"name":"2024-04-09 17:06:51.349440   Check that form [Sign up] opened","time":{"start":1712682873863,"stop":1712682875402,"duration":1539},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"timeout","value":"1"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Click button [Notification]","time":{"start":1712682875402,"stop":1712682875693,"duration":291},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Checking that \"Trading platform\" page opened - ver 4","time":{"start":1712682875693,"stop":1712682877627,"duration":1934},"status":"broken","statusMessage":"TypeError: 'in <string>' requires string as left operand, not bool\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 167, in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 131, in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 430, in should_be_corresponding_trading_instrument\n    if not (trade_instrument in open_ticket[0].text):\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[{"name":"Checking that the trading platform page has opened - ver 4","time":{"start":1712682875693,"stop":1712682877626,"duration":1933},"status":"broken","statusMessage":"TypeError: 'in <string>' requires string as left operand, not bool\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 131, in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 430, in should_be_corresponding_trading_instrument\n    if not (trade_instrument in open_ticket[0].text):\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[{"name":"2024-04-09 17:06:51.349016   Check that the page has the expected title - ver 2","time":{"start":1712682875706,"stop":1712682875710,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"title","value":"'Trading Platform | Capital.com'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"06a1c684b7cbb09009b4ef825f436ec3\")>"},{"name":"test_link","value":"'https://capital.com/zh/australian-dollar-us-dollar-li-lu'"},{"name":"tpd","value":"False"},{"name":"tpi","value":"True"},{"name":"trade_instrument","value":"True"}],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"06a1c684b7cbb09009b4ef825f436ec3\")>"},{"name":"cur_link","value":"'https://capital.com/zh/australian-dollar-us-dollar-li-lu'"},{"name":"tpd","value":"False"},{"name":"tpi","value":"True"},{"name":"trade_instrument","value":"True"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"06a1c684b7cbb09009b4ef825f436ec3\")>"},{"name":"cur_language","value":"'zh'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_item_link","value":"'https://capital.com/zh/australian-dollar-us-dollar-li-lu'"}],"shouldDisplayMessage":false,"stepsCount":5,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"06a1c684b7cbb09009b4ef825f436ec3\")>"},{"name":"cur_language","value":"'zh'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_item_link","value":"'https://capital.com/zh/australian-dollar-us-dollar-li-lu'"}],"shouldDisplayMessage":false,"stepsCount":8,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"a8ca09c47eb843d4","name":"Screenshot","source":"a8ca09c47eb843d4.png","type":"image/png","size":71006},{"uid":"605d0c597bc9701a","name":"log","source":"605d0c597bc9701a.txt","type":"text/plain","size":1410},{"uid":"90c15d28d72a8fe8","name":"stdout","source":"90c15d28d72a8fe8.txt","type":"text/plain","size":4702}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":9,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1712683078887,"stop":1712683079046,"duration":159},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_01.04 | Markets > Menu item [Indices]"},{"name":"feature","value":"Language: zh"},{"name":"story","value":"Country: au / Role: Auth"},{"name":"tag","value":"test_008"},{"name":"tag","value":"us_01_04_01"},{"name":"parentSuite","value":"tests.US_01_Markets.US_01-04_Indices"},{"name":"suite","value":"US_01-04-01_Indices_test"},{"name":"subSuite","value":"TestIndicesItemPage"},{"name":"host","value":"fv-az802-295"},{"name":"thread","value":"22378-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_01_Markets.US_01-04_Indices.US_01-04-01_Indices_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'au'"},{"name":"cur_item_link","value":"'https://capital.com/zh/australian-dollar-us-dollar-li-lu'"},{"name":"cur_language","value":"'zh'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_role","value":"'Auth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["test_008","us_01_04_01"]},"source":"e2bde16b0e97feb.json","parameterValues":["'au'","'https://capital.com/zh/australian-dollar-us-dollar-li-lu'","'zh'","'aqa.tomelo.an@gmail.com'","'iT9Vgqi6d$fiZ*Z'","'Auth'","'Chrome'"]}