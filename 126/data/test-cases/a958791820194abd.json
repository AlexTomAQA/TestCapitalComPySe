{"uid":"a958791820194abd","name":"TC_01.05.00_003 | Testing button [Buy]. Bid:01.05.00_003-ru.ae.Auth","fullName":"tests.US_01_Markets.US_01-05_Commodities.US_01-05-00_Commodities_test.TestCommodities#test_003_buy_trading_instrument","historyId":"1dcbd7750f6d54eb0d934b4bb8062379","time":{"start":1712155841550,"stop":1712155858555,"duration":17005},"description":"\n        Check: button [Buy] in Widget 'Trading instrument'\n        Language: All License: All (except FCA) Role: All.\n        ","descriptionHtml":"<pre><code>    Check: button [Buy] in Widget 'Trading instrument'\n    Language: All License: All (except FCA) Role: All.\n</code></pre>\n","status":"broken","statusMessage":"AttributeError: 'list' object has no attribute 'text'","statusTrace":"self = <US_01-05-00_Commodities_test.TestCommodities object at 0x7f469f34b8c0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3ee99e609802a6ef02e05fae9246369b\")>\ncur_language = 'ru', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_sort = 'Most volatile'\n\n    @allure.step(\"Start test of button [Buy] in Widget 'Trading instrument'\")\n    @pytest.mark.test_003\n    def test_003_buy_trading_instrument(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_sort):\n        \"\"\"\n        Check: button [Buy] in Widget 'Trading instrument'\n        Language: All License: All (except FCA) Role: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"01.05\", \"Markets > Menu item [Commodities]\",\n            \".00_003\", \"Testing button [Buy]\")\n    \n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n    \n        page_conditions = Conditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        page_menu = MenuSection(d, link)\n        cur_page_url = page_menu.open_commodities_markets_menu(d, cur_language, cur_country, link)\n    \n        test_element = TableTradingInstrumentsBuyButton(d, cur_page_url, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_page_url, cur_sort)\n\ntests/US_01_Markets/US_01-05_Commodities/US_01-05-00_Commodities_test.py:98: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/TableTradingInstrumentsBuyButton.py:57: in full_test_with_tpi\n    test_element.assert_trading_platform_v4(\npages/Elements/AssertClass.py:164: in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\npages/Capital/Trading_platform/trading_platform.py:131: in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Capital.Trading_platform.trading_platform.TradingPlatform object at 0x7f469eade0c0>\ntest_link = 'https://capital.com/ru/tseny-na-syryo'\ntrade_instrument = 'Silver Spot'\n\n    def should_be_corresponding_trading_instrument(self, test_link, trade_instrument):\n        \"\"\"\n        Check Trading platform is opened for corresponding trade instrument\n        \"\"\"\n        allure.step(f\"{datetime.now()}   Check if Trading platform open for corresponding trade instrument\")\n    \n        # cur_url = self.driver.current_url\n        print(f\"\\n{datetime.now()}   trade_instrument = '{trade_instrument}'\")\n        # trade_instrument_name = trade_instrument.split(\" \")[0]\n        # print(f\"{datetime.now()}   => trade_instrument_name = '{trade_instrument_name}'\")\n    \n        # 4.1. проверяем, что открыта трейдинговая платформа на вкладке [Charts]\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.1. Check that Trading Platform is opened in Chart mode\")\n        menu_chart = self.elements_are_present(*ChartingLocators.MENU_CHART)\n        if len(menu_chart) == 0:\n            print(f\"{datetime.now()}   => Trading Platform opened, but not Chart mode\")\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '14', self.link)\n            msg = \"Bug # 14. Trading platform opened, but not Chart mode\"\n            Common().assert_true_false(False, msg)\n        print(f\"{datetime.now()}   => Trading Platform opened in Chart mode\")\n    \n        # 4.2. определяем, какие вкладки открыты и избегаем ошибки пустого списка\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.2. Check that Top Charts List of Trading Platform not empty =>\")\n        top_chart_trade_list = self.elements_are_located(TradingInstruments.LIST_TRADE_INSTRUMENTS, 5)\n        if len(top_chart_trade_list) == 0:\n            print(f\"{datetime.now()}   => Trading Platform opened in Chart mode, but Top Charts List is empty\")\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '15', self.link)\n            msg = (\"Bug # 15. Trading platform was opened, \"\n                   \"but does no contain any trade instrument in the Top Charts List\")\n            Common().assert_true_false(False, msg)\n            # Common().browser_back_to_link_and_test_fail(self.driver, test_link, msg)\n    \n        # 4.3. проверяем, открыты ли детали выбранного торгового инструмента\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.3. Check that opened trade instrument info page =>\")\n        open_ticket = self.driver.find_elements(*TradingInstruments.OPEN_TICKET_TRADE_INSTRUMENTS)\n        if len(open_ticket) == 0:\n            msg = (\"Trading platform was opened, \"\n                   \"but does not contain any trading info\")\n            print(f\"{datetime.now()}   => {msg}\")\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '16', self.link)\n            Common().pytest_fail(f\"Bug # 16. {msg}\")\n    \n        # 4.4. проверяем, открыты ли детали выбранного торгового инструмента\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.4. Check that opened Info page of selected '{trade_instrument}' trade instrument =>\")\n        print(f\"{datetime.now()}   Trading instrument - '{trade_instrument}'\")\n>       print(f\"{datetime.now()}   Title opened trading instrument info page - '{open_ticket.text}'\")\nE       AttributeError: 'list' object has no attribute 'text'\n\npages/Capital/Trading_platform/trading_platform.py:338: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1712155721075,"stop":1712155721479,"duration":404},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1712155721480,"stop":1712155721480,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1712155721480,"stop":1712155721481,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1712155721480,"stop":1712155721480,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1712155721483,"stop":1712155721483,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1712155721483,"stop":1712155721483,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1712155721483,"stop":1712155721483,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_sort","time":{"start":1712155841550,"stop":1712155841550,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: button [Buy] in Widget 'Trading instrument'\n        Language: All License: All (except FCA) Role: All.\n        ","status":"broken","statusMessage":"AttributeError: 'list' object has no attribute 'text'","statusTrace":"self = <US_01-05-00_Commodities_test.TestCommodities object at 0x7f469f34b8c0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3ee99e609802a6ef02e05fae9246369b\")>\ncur_language = 'ru', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_sort = 'Most volatile'\n\n    @allure.step(\"Start test of button [Buy] in Widget 'Trading instrument'\")\n    @pytest.mark.test_003\n    def test_003_buy_trading_instrument(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_sort):\n        \"\"\"\n        Check: button [Buy] in Widget 'Trading instrument'\n        Language: All License: All (except FCA) Role: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"01.05\", \"Markets > Menu item [Commodities]\",\n            \".00_003\", \"Testing button [Buy]\")\n    \n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n    \n        page_conditions = Conditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        page_menu = MenuSection(d, link)\n        cur_page_url = page_menu.open_commodities_markets_menu(d, cur_language, cur_country, link)\n    \n        test_element = TableTradingInstrumentsBuyButton(d, cur_page_url, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_page_url, cur_sort)\n\ntests/US_01_Markets/US_01-05_Commodities/US_01-05-00_Commodities_test.py:98: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/TableTradingInstrumentsBuyButton.py:57: in full_test_with_tpi\n    test_element.assert_trading_platform_v4(\npages/Elements/AssertClass.py:164: in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\npages/Capital/Trading_platform/trading_platform.py:131: in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Capital.Trading_platform.trading_platform.TradingPlatform object at 0x7f469eade0c0>\ntest_link = 'https://capital.com/ru/tseny-na-syryo'\ntrade_instrument = 'Silver Spot'\n\n    def should_be_corresponding_trading_instrument(self, test_link, trade_instrument):\n        \"\"\"\n        Check Trading platform is opened for corresponding trade instrument\n        \"\"\"\n        allure.step(f\"{datetime.now()}   Check if Trading platform open for corresponding trade instrument\")\n    \n        # cur_url = self.driver.current_url\n        print(f\"\\n{datetime.now()}   trade_instrument = '{trade_instrument}'\")\n        # trade_instrument_name = trade_instrument.split(\" \")[0]\n        # print(f\"{datetime.now()}   => trade_instrument_name = '{trade_instrument_name}'\")\n    \n        # 4.1. проверяем, что открыта трейдинговая платформа на вкладке [Charts]\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.1. Check that Trading Platform is opened in Chart mode\")\n        menu_chart = self.elements_are_present(*ChartingLocators.MENU_CHART)\n        if len(menu_chart) == 0:\n            print(f\"{datetime.now()}   => Trading Platform opened, but not Chart mode\")\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '14', self.link)\n            msg = \"Bug # 14. Trading platform opened, but not Chart mode\"\n            Common().assert_true_false(False, msg)\n        print(f\"{datetime.now()}   => Trading Platform opened in Chart mode\")\n    \n        # 4.2. определяем, какие вкладки открыты и избегаем ошибки пустого списка\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.2. Check that Top Charts List of Trading Platform not empty =>\")\n        top_chart_trade_list = self.elements_are_located(TradingInstruments.LIST_TRADE_INSTRUMENTS, 5)\n        if len(top_chart_trade_list) == 0:\n            print(f\"{datetime.now()}   => Trading Platform opened in Chart mode, but Top Charts List is empty\")\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '15', self.link)\n            msg = (\"Bug # 15. Trading platform was opened, \"\n                   \"but does no contain any trade instrument in the Top Charts List\")\n            Common().assert_true_false(False, msg)\n            # Common().browser_back_to_link_and_test_fail(self.driver, test_link, msg)\n    \n        # 4.3. проверяем, открыты ли детали выбранного торгового инструмента\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.3. Check that opened trade instrument info page =>\")\n        open_ticket = self.driver.find_elements(*TradingInstruments.OPEN_TICKET_TRADE_INSTRUMENTS)\n        if len(open_ticket) == 0:\n            msg = (\"Trading platform was opened, \"\n                   \"but does not contain any trading info\")\n            print(f\"{datetime.now()}   => {msg}\")\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '16', self.link)\n            Common().pytest_fail(f\"Bug # 16. {msg}\")\n    \n        # 4.4. проверяем, открыты ли детали выбранного торгового инструмента\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.4. Check that opened Info page of selected '{trade_instrument}' trade instrument =>\")\n        print(f\"{datetime.now()}   Trading instrument - '{trade_instrument}'\")\n>       print(f\"{datetime.now()}   Title opened trading instrument info page - '{open_ticket.text}'\")\nE       AttributeError: 'list' object has no attribute 'text'\n\npages/Capital/Trading_platform/trading_platform.py:338: AttributeError","steps":[{"name":"Start test of button [Buy] in Widget 'Trading instrument'","time":{"start":1712155841550,"stop":1712155858553,"duration":17003},"status":"broken","statusMessage":"AttributeError: 'list' object has no attribute 'text'\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_01_Markets/US_01-05_Commodities/US_01-05-00_Commodities_test.py\", line 98, in test_003_buy_trading_instrument\n    test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_page_url, cur_sort)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/TableTradingInstrumentsBuyButton.py\", line 57, in full_test_with_tpi\n    test_element.assert_trading_platform_v4(\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 164, in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 131, in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 338, in should_be_corresponding_trading_instrument\n    print(f\"{datetime.now()}   Title opened trading instrument info page - '{open_ticket.text}'\")\n                                                                             ^^^^^^^^^^^^^^^^\n","steps":[{"name":"Preconditions","time":{"start":1712155841552,"stop":1712155844572,"duration":3020},"status":"passed","steps":[{"name":"2024-04-03 14:48:41.052074   Start Checking Captcha","time":{"start":1712155843547,"stop":1712155844569,"duration":1022},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3ee99e609802a6ef02e05fae9246369b\")>"},{"name":"host","value":"'https://capital.com/'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'ru'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Markets\" menu, \"Commodities\" submenu","time":{"start":1712155844572,"stop":1712155847932,"duration":3360},"status":"passed","steps":[{"name":"Focus moved to 'Markets' menu","time":{"start":1712155844580,"stop":1712155846377,"duration":1797},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3ee99e609802a6ef02e05fae9246369b\")>"},{"name":"test_language","value":"'ru'"},{"name":"test_country","value":"'ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Focus move to 'Commodities' submenu and click.","time":{"start":1712155846377,"stop":1712155847651,"duration":1274},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3ee99e609802a6ef02e05fae9246369b\")>"},{"name":"test_language","value":"'ru'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3ee99e609802a6ef02e05fae9246369b\")>"},{"name":"cur_language","value":"'ru'"},{"name":"cur_country","value":"'ae'"},{"name":"link","value":"'https://capital.com/ru/tseny-na-syryo'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Start Full test [Buy] button on Table Widget Trading Instruments","time":{"start":1712155847932,"stop":1712155858553,"duration":10621},"status":"broken","statusMessage":"AttributeError: 'list' object has no attribute 'text'\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/TableTradingInstrumentsBuyButton.py\", line 57, in full_test_with_tpi\n    test_element.assert_trading_platform_v4(\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 164, in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 131, in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 338, in should_be_corresponding_trading_instrument\n    print(f\"{datetime.now()}   Title opened trading instrument info page - '{open_ticket.text}'\")\n                                                                             ^^^^^^^^^^^^^^^^\n","steps":[{"name":"2024-04-03 14:48:41.047803   Check that form [Sign up] opened","time":{"start":1712155853538,"stop":1712155855096,"duration":1558},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"timeout","value":"1"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Click Buy button on Table Widget Trading Instruments","time":{"start":1712155855096,"stop":1712155856436,"duration":1340},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"wd","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3ee99e609802a6ef02e05fae9246369b\")>"},{"name":"value","value":"11"},{"name":"cur_sort","value":"'Most volatile'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Checking that \"Trading platform\" page opened - ver 4","time":{"start":1712155856436,"stop":1712155858552,"duration":2116},"status":"broken","statusMessage":"AttributeError: 'list' object has no attribute 'text'\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 164, in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 131, in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 338, in should_be_corresponding_trading_instrument\n    print(f\"{datetime.now()}   Title opened trading instrument info page - '{open_ticket.text}'\")\n                                                                             ^^^^^^^^^^^^^^^^\n","steps":[{"name":"Checking that the trading platform page has opened - ver 4","time":{"start":1712155856437,"stop":1712155858552,"duration":2115},"status":"broken","statusMessage":"AttributeError: 'list' object has no attribute 'text'\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 131, in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 338, in should_be_corresponding_trading_instrument\n    print(f\"{datetime.now()}   Title opened trading instrument info page - '{open_ticket.text}'\")\n                                                                             ^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3ee99e609802a6ef02e05fae9246369b\")>"},{"name":"test_link","value":"'https://capital.com/ru/tseny-na-syryo'"},{"name":"tpd","value":"False"},{"name":"tpi","value":"True"},{"name":"trade_instrument","value":"'Silver Spot'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3ee99e609802a6ef02e05fae9246369b\")>"},{"name":"cur_link","value":"'https://capital.com/ru/tseny-na-syryo'"},{"name":"tpd","value":"False"},{"name":"tpi","value":"True"},{"name":"trade_instrument","value":"'Silver Spot'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3ee99e609802a6ef02e05fae9246369b\")>"},{"name":"cur_language","value":"'ru'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_item_link","value":"'https://capital.com/ru/tseny-na-syryo'"},{"name":"cur_sort","value":"'Most volatile'"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3ee99e609802a6ef02e05fae9246369b\")>"},{"name":"cur_language","value":"'ru'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_sort","value":"'Most volatile'"}],"shouldDisplayMessage":false,"stepsCount":10,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"22144106d078ecb1","name":"Screenshot","source":"22144106d078ecb1.png","type":"image/png","size":77809},{"uid":"5cf725fa2167b330","name":"log","source":"5cf725fa2167b330.txt","type":"text/plain","size":1402},{"uid":"93d5a732569a814e","name":"stdout","source":"93d5a732569a814e.txt","type":"text/plain","size":10497}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":11,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1712156157674,"stop":1712156157807,"duration":133},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_01.05 | Markets > Menu item [Commodities]"},{"name":"feature","value":"Language: ru"},{"name":"story","value":"Country: ae / Role: Auth"},{"name":"tag","value":"test_003"},{"name":"tag","value":"us_01_05"},{"name":"parentSuite","value":"tests.US_01_Markets.US_01-05_Commodities"},{"name":"suite","value":"US_01-05-00_Commodities_test"},{"name":"subSuite","value":"TestCommodities"},{"name":"host","value":"fv-az523-409"},{"name":"thread","value":"17772-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_01_Markets.US_01-05_Commodities.US_01-05-00_Commodities_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"'ru'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_sort","value":"'Most volatile'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"3037ce7bdc96d87a","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/125//#testresult/3037ce7bdc96d87a","status":"failed","statusDetails":"AssertionError: Bug # 16. Trade instrument 'Lean Hogs Spot' is not present in the Top Charts List","time":{"start":1712121693427,"stop":1712121713477,"duration":20050}}]},"tags":["us_01_05","test_003"]},"source":"a958791820194abd.json","parameterValues":["'ae'","'ru'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'Auth'","'Most volatile'","'Chrome'"]}