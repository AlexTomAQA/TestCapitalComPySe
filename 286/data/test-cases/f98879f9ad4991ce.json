{"uid":"f98879f9ad4991ce","name":"TC_55!322b (Lang: ar) | Bid:55!322b-ar.ae.NoAuth","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_322b","historyId":"439907bd67f3b5e31ec57dfc40b74fdd","time":{"start":1736644050385,"stop":1736644069054,"duration":18669},"description":"\n        Check: Clicking [numeric values] in the Buy column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        ","descriptionHtml":"<pre><code>    Check: Clicking [numeric values] in the Buy column in Menu tittle Markets does not open the\n            Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n            English or Arabic language.\n    Language: EN, AR\n    License: SCA\n    Author: Kasila\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","statusTrace":"self = <pages.BugsManual.bug_322.AssertTPI object at 0x7f643823cb60>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c966148bde277078fa99dd6de0451c4a\")>\n\n    def assert_login(self, d):\n        print(f\"\\n{datetime.now()}   3. Assert\")\n    \n        try:\n>           login_form = self.driver.find_element(By.XPATH, '//strong/span[contains(text(), \"Login\")]')\n\npages/BugsManual/bug_322.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f64382a6ff0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#17 0x5649817c0076 \\\\u003Cunknown>\\\\n#18 0x7f1c3909ca94 \\\\u003Cunknown>\\\\n#19 0x7f1c39129c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//strong/span[contains(text(), \"Login\")]\"}\nE         (Session info: chrome=131.0.6778.204); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x5649817c11fa <unknown>\nE       #1 0x5649812d1810 <unknown>\nE       #2 0x564981320506 <unknown>\nE       #3 0x5649813207a1 <unknown>\nE       #4 0x564981365c24 <unknown>\nE       #5 0x5649813445ad <unknown>\nE       #6 0x564981363007 <unknown>\nE       #7 0x564981344323 <unknown>\nE       #8 0x564981312de0 <unknown>\nE       #9 0x564981313dbe <unknown>\nE       #10 0x56498178d12b <unknown>\nE       #11 0x5649817910c7 <unknown>\nE       #12 0x56498177a6cc <unknown>\nE       #13 0x564981791c47 <unknown>\nE       #14 0x56498175f67f <unknown>\nE       #15 0x5649817b0288 <unknown>\nE       #16 0x5649817b0450 <unknown>\nE       #17 0x5649817c0076 <unknown>\nE       #18 0x7f1c3909ca94 <unknown>\nE       #19 0x7f1c39129c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7f6438e76630>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c966148bde277078fa99dd6de0451c4a\")>\ncur_language = 'ar', cur_country = 'ae', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ntitle_instrument = ''\n\n    @allure.step(\n        'Start retest manual AT_55!322b that the Sign Up/Login/page of the corresponding trading instrument on '\n        'the trading platform is opened after clicking [numeric values] in the Buy column.')\n    @pytest.mark.parametrize('cur_language', ['', 'ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('title_instrument', [''])\n    @pytest.mark.bug_322b\n    def test_322b(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, title_instrument):\n        \"\"\"\n        Check: Clicking [numeric values] in the Buy column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"322b\", 'The Sign Up/Login/page of the corresponding trading instrument on the trading platform'\n                   ' is not opened after clicking [numeric values] in the Buy column'\n        )\n    \n        match cur_language:\n            case '':\n                link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_buy(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n                        test_element.assert_signup(d)\n                    case 'NoAuth':\n                        test_element.assert_login(d)\n                    case 'Auth':\n                        test_element.assert_tpi(d, title_instrument)\n            case 'ar':\n                link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_buy(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n                        test_element.assert_signup(d)\n                    case 'NoAuth':\n>                       test_element.assert_login(d)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:336: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_322.py:129: in assert_login\n    Common.pytest_fail(\"Bug # 55!322 \"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 55!322 \\nExpected result: Login form is opened\\nActual result: Login form is not opened'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 55!322 \nE    Expected result: Login form is opened\nE    Actual result: Login form is not opened\n\npages/common.py:235: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1736642881165,"stop":1736642882210,"duration":1045},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1736642882210,"stop":1736642882210,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1736642882210,"stop":1736642882210,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1736642882210,"stop":1736642882210,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Clicking [numeric values] in the Buy column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        ","status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","statusTrace":"self = <pages.BugsManual.bug_322.AssertTPI object at 0x7f643823cb60>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c966148bde277078fa99dd6de0451c4a\")>\n\n    def assert_login(self, d):\n        print(f\"\\n{datetime.now()}   3. Assert\")\n    \n        try:\n>           login_form = self.driver.find_element(By.XPATH, '//strong/span[contains(text(), \"Login\")]')\n\npages/BugsManual/bug_322.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f64382a6ff0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#17 0x5649817c0076 \\\\u003Cunknown>\\\\n#18 0x7f1c3909ca94 \\\\u003Cunknown>\\\\n#19 0x7f1c39129c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//strong/span[contains(text(), \"Login\")]\"}\nE         (Session info: chrome=131.0.6778.204); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x5649817c11fa <unknown>\nE       #1 0x5649812d1810 <unknown>\nE       #2 0x564981320506 <unknown>\nE       #3 0x5649813207a1 <unknown>\nE       #4 0x564981365c24 <unknown>\nE       #5 0x5649813445ad <unknown>\nE       #6 0x564981363007 <unknown>\nE       #7 0x564981344323 <unknown>\nE       #8 0x564981312de0 <unknown>\nE       #9 0x564981313dbe <unknown>\nE       #10 0x56498178d12b <unknown>\nE       #11 0x5649817910c7 <unknown>\nE       #12 0x56498177a6cc <unknown>\nE       #13 0x564981791c47 <unknown>\nE       #14 0x56498175f67f <unknown>\nE       #15 0x5649817b0288 <unknown>\nE       #16 0x5649817b0450 <unknown>\nE       #17 0x5649817c0076 <unknown>\nE       #18 0x7f1c3909ca94 <unknown>\nE       #19 0x7f1c39129c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7f6438e76630>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c966148bde277078fa99dd6de0451c4a\")>\ncur_language = 'ar', cur_country = 'ae', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ntitle_instrument = ''\n\n    @allure.step(\n        'Start retest manual AT_55!322b that the Sign Up/Login/page of the corresponding trading instrument on '\n        'the trading platform is opened after clicking [numeric values] in the Buy column.')\n    @pytest.mark.parametrize('cur_language', ['', 'ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('title_instrument', [''])\n    @pytest.mark.bug_322b\n    def test_322b(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, title_instrument):\n        \"\"\"\n        Check: Clicking [numeric values] in the Buy column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"322b\", 'The Sign Up/Login/page of the corresponding trading instrument on the trading platform'\n                   ' is not opened after clicking [numeric values] in the Buy column'\n        )\n    \n        match cur_language:\n            case '':\n                link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_buy(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n                        test_element.assert_signup(d)\n                    case 'NoAuth':\n                        test_element.assert_login(d)\n                    case 'Auth':\n                        test_element.assert_tpi(d, title_instrument)\n            case 'ar':\n                link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_buy(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n                        test_element.assert_signup(d)\n                    case 'NoAuth':\n>                       test_element.assert_login(d)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:336: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_322.py:129: in assert_login\n    Common.pytest_fail(\"Bug # 55!322 \"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 55!322 \\nExpected result: Login form is opened\\nActual result: Login form is not opened'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 55!322 \nE    Expected result: Login form is opened\nE    Actual result: Login form is not opened\n\npages/common.py:235: Failed","steps":[{"name":"Start retest manual AT_55!322b that the Sign Up/Login/page of the corresponding trading instrument on the trading platform is opened after clicking [numeric values] in the Buy column.","time":{"start":1736644050385,"stop":1736644069053,"duration":18668},"status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py\", line 336, in test_322b\n    test_element.assert_login(d)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_322.py\", line 129, in assert_login\n    Common.pytest_fail(\"Bug # 55!322 \"\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/common.py\", line 235, in pytest_fail\n    pytest.fail(msg)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1736644050386,"stop":1736644050387,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"c966148bde277078fa99dd6de0451c4a\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'322b'"},{"name":"desc_tc","value":"'The Sign Up/Login/page of the corresponding trading instrument on the trading platform is not opened after clicking [numeric values] in the Buy column'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1736644050388,"stop":1736644055491,"duration":5103},"status":"passed","steps":[{"name":"2025-01-12 00:48:01.127927   Set language and country","time":{"start":1736644052770,"stop":1736644055486,"duration":2716},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"c966148bde277078fa99dd6de0451c4a\")>"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"c966148bde277078fa99dd6de0451c4a\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Trading\" menu, \"Trading\" submenu","time":{"start":1736644055491,"stop":1736644063889,"duration":8398},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"c966148bde277078fa99dd6de0451c4a\")>"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"link","value":"'https://capital.com/ar-ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2025-01-12 00:48:00.961044   1. Start test that the Clicking [numeric values] in the Sell column in Menu tittle Markets opens the Sign-Up /Login form or page of the corresponding trading instrument on the trading platform.","time":{"start":1736644063889,"stop":1736644063907,"duration":18},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"c966148bde277078fa99dd6de0451c4a\")>"},{"name":"cur_item_link","value":"'https://capital.com/ar-ae/markets'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"c966148bde277078fa99dd6de0451c4a\")>"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"title_instrument","value":"''"}],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"4aeb54ea8e207aae","name":"Screenshot","source":"4aeb54ea8e207aae.png","type":"image/png","size":137732},{"uid":"a979d616a7fe5588","name":"stdout","source":"a979d616a7fe5588.txt","type":"text/plain","size":3964}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1736646040716,"stop":1736646041115,"duration":399},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!322b | The Sign Up/Login/page of the corresponding trading instrument on the trading platform is not opened after clicking [numeric values] in the Buy column"},{"name":"feature","value":"Role: NoAuth"},{"name":"story","value":"Country: ae"},{"name":"tag","value":"bug_322b"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az1671-577"},{"name":"thread","value":"26387-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"'ar'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"d","value":"'Chrome'"},{"name":"title_instrument","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":70,"broken":8,"skipped":0,"passed":0,"unknown":0,"total":78},"items":[{"uid":"4933b57546c2f1e5","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/285//#testresult/4933b57546c2f1e5","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1736557342197,"stop":1736557360275,"duration":18078}},{"uid":"8e6401b89cfba84b","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/284//#testresult/8e6401b89cfba84b","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1736470995880,"stop":1736471014212,"duration":18332}},{"uid":"6582ef0af4a4528","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/283//#testresult/6582ef0af4a4528","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1736385053797,"stop":1736385072216,"duration":18419}},{"uid":"d7a9ae0eec2952e1","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/282//#testresult/d7a9ae0eec2952e1","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1736299758919,"stop":1736299777602,"duration":18683}},{"uid":"72705bfd3872018d","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/281//#testresult/72705bfd3872018d","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1736212019798,"stop":1736212046438,"duration":26640}},{"uid":"c95d415aabfded32","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/280//#testresult/c95d415aabfded32","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1736125992377,"stop":1736126010992,"duration":18615}},{"uid":"d4490a31a6b80c8f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/279//#testresult/d4490a31a6b80c8f","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1736039494744,"stop":1736039512973,"duration":18229}},{"uid":"9bae517e2ebc812f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/278//#testresult/9bae517e2ebc812f","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1735952504367,"stop":1735952522891,"duration":18524}},{"uid":"e3ff58304133d96b","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/277//#testresult/e3ff58304133d96b","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1735867443898,"stop":1735867462275,"duration":18377}},{"uid":"c652eed16764975","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/276//#testresult/c652eed16764975","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1735780245898,"stop":1735780264555,"duration":18657}},{"uid":"429175908685da6e","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/275//#testresult/429175908685da6e","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1735694301463,"stop":1735694319728,"duration":18265}},{"uid":"21028fb724ae974d","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/274//#testresult/21028fb724ae974d","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1735607924523,"stop":1735607942995,"duration":18472}},{"uid":"5f4bdc25774409d8","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/273//#testresult/5f4bdc25774409d8","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1735520011635,"stop":1735520030291,"duration":18656}},{"uid":"649f9da17083307c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/272//#testresult/649f9da17083307c","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1735434214869,"stop":1735434239234,"duration":24365}},{"uid":"b9981fbcf5d1b99e","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/271//#testresult/b9981fbcf5d1b99e","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1735348033721,"stop":1735348052171,"duration":18450}},{"uid":"eaf5775e386f4e5a","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/270//#testresult/eaf5775e386f4e5a","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1735262271629,"stop":1735262289759,"duration":18130}},{"uid":"22b5fe77f48e990","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/269//#testresult/22b5fe77f48e990","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1735175196775,"stop":1735175215452,"duration":18677}},{"uid":"237bd3c20a8e1cd9","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/268//#testresult/237bd3c20a8e1cd9","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1735088515722,"stop":1735088533651,"duration":17929}},{"uid":"68d4fe9cf0867ff8","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/267//#testresult/68d4fe9cf0867ff8","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1735002879029,"stop":1735002897449,"duration":18420}},{"uid":"9f042ddf5613983e","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/266//#testresult/9f042ddf5613983e","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1734915793073,"stop":1734915811294,"duration":18221}}]},"tags":["us_55","bug_322b"]},"source":"f98879f9ad4991ce.json","parameterValues":["'ae'","'ar'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoAuth'","'Chrome'","''"]}