{"uid":"9ff6c010f8f0c908","name":"TC_55!407 (Lang: en) | Bid:55!407-en.ae.Auth","fullName":"tests.US_55_ReTestsManual.artemdashkov.US_55-artemdashkov_ReTestsManual_test.TestManualDetected#test_407_articles_all_authors_present_on_the_daniela_hathorn_page","historyId":"0b3bc6964f13d0d36ac4931d5caaae03","time":{"start":1736637485556,"stop":1736637509355,"duration":23799},"description":"\n        Check:  Menu section [Markets] > Menu item [Market analysis] >\n                Find and click article of 'Daniela Hathorn' author >\n                Click the link 'Daniela Hathorn' >\n                Click any article on the 'Daniela Hathorn' page\n        Language: EN\n        License/Country: SCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        ","descriptionHtml":"<pre><code>    Check:  Menu section [Markets] &gt; Menu item [Market analysis] &gt;\n            Find and click article of 'Daniela Hathorn' author &gt;\n            Click the link 'Daniela Hathorn' &gt;\n            Click any article on the 'Daniela Hathorn' page\n    Language: EN\n    License/Country: SCA\n    Role: NoReg, NoAuth, Auth\n    Author: Artem Dashkov\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","statusTrace":"self = <US_55-artemdashkov_ReTestsManual_test.TestManualDetected object at 0x7f4b3f2154f0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"05d87d399f9d3dd6ae81d1f921c5921e\")>\ncur_language = '', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test authors of articles on the 'Daniela Hathorn' page\")\n    @pytest.mark.parametrize('cur_language', [\"\"])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_407\n    def test_407_articles_all_authors_present_on_the_daniela_hathorn_page(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check:  Menu section [Markets] > Menu item [Market analysis] >\n                Find and click article of 'Daniela Hathorn' author >\n                Click the link 'Daniela Hathorn' >\n                Click any article on the 'Daniela Hathorn' page\n        Language: EN\n        License/Country: SCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"407\",\n            \"Menu section [Markets] > Menu item [Market analysis] > \"\n            \"Find and click article of 'Daniela Hathorn' author > \"\n            \"Click the link 'Daniela Hathorn' > \"\n            \"Click any article on the 'Daniela Hathorn' page\",\n            False, True\n        )\n        # pytest.skip(\"Промежуточная версия\")\n        # Arrange\n        cur_item_link = apply_preconditions_to_link(d, cur_language, cur_country,\n                                                    cur_role, cur_login, cur_password)\n    \n        page_menu = from_markets_menu_open_market_analysis.MenuNew(d, cur_item_link)\n        link = page_menu.from_markets_menu_open_market_analysis(\n            d, cur_language, cur_country, cur_item_link)\n    \n        test_element = BUG_407(d, link, bid)\n        test_element.arrange(d, link)\n    \n        # Act\n        test_element.act(d)\n    \n        # Assert\n>       test_element.assert_(d)\n\ntests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py:1158: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_407.py:205: in assert_\n    Common().pytest_fail(f\"Bug # {BUG_NUMBER} {msg}\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda\n\npages/common.py:235: Failed","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1736634675628,"stop":1736634676247,"duration":619},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1736634676248,"stop":1736634676248,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1736634676248,"stop":1736634676248,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1736634676248,"stop":1736634676248,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check:  Menu section [Markets] > Menu item [Market analysis] >\n                Find and click article of 'Daniela Hathorn' author >\n                Click the link 'Daniela Hathorn' >\n                Click any article on the 'Daniela Hathorn' page\n        Language: EN\n        License/Country: SCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        ","status":"failed","statusMessage":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","statusTrace":"self = <US_55-artemdashkov_ReTestsManual_test.TestManualDetected object at 0x7f4b3f2154f0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"05d87d399f9d3dd6ae81d1f921c5921e\")>\ncur_language = '', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test authors of articles on the 'Daniela Hathorn' page\")\n    @pytest.mark.parametrize('cur_language', [\"\"])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_407\n    def test_407_articles_all_authors_present_on_the_daniela_hathorn_page(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check:  Menu section [Markets] > Menu item [Market analysis] >\n                Find and click article of 'Daniela Hathorn' author >\n                Click the link 'Daniela Hathorn' >\n                Click any article on the 'Daniela Hathorn' page\n        Language: EN\n        License/Country: SCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"407\",\n            \"Menu section [Markets] > Menu item [Market analysis] > \"\n            \"Find and click article of 'Daniela Hathorn' author > \"\n            \"Click the link 'Daniela Hathorn' > \"\n            \"Click any article on the 'Daniela Hathorn' page\",\n            False, True\n        )\n        # pytest.skip(\"Промежуточная версия\")\n        # Arrange\n        cur_item_link = apply_preconditions_to_link(d, cur_language, cur_country,\n                                                    cur_role, cur_login, cur_password)\n    \n        page_menu = from_markets_menu_open_market_analysis.MenuNew(d, cur_item_link)\n        link = page_menu.from_markets_menu_open_market_analysis(\n            d, cur_language, cur_country, cur_item_link)\n    \n        test_element = BUG_407(d, link, bid)\n        test_element.arrange(d, link)\n    \n        # Act\n        test_element.act(d)\n    \n        # Assert\n>       test_element.assert_(d)\n\ntests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py:1158: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_407.py:205: in assert_\n    Common().pytest_fail(f\"Bug # {BUG_NUMBER} {msg}\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda\n\npages/common.py:235: Failed","steps":[{"name":"Start test authors of articles on the 'Daniela Hathorn' page","time":{"start":1736637485556,"stop":1736637509355,"duration":23799},"status":"failed","statusMessage":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py\", line 1158, in test_407_articles_all_authors_present_on_the_daniela_hathorn_page\n    test_element.assert_(d)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_407.py\", line 205, in assert_\n    Common().pytest_fail(f\"Bug # {BUG_NUMBER} {msg}\")\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/common.py\", line 235, in pytest_fail\n    pytest.fail(msg)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1736637485556,"stop":1736637485558,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"05d87d399f9d3dd6ae81d1f921c5921e\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'407'"},{"name":"desc_tc","value":"'Menu section [Markets] > Menu item [Market analysis] > Find and click article of 'Daniela Hathorn' author > Click the link 'Daniela Hathorn' > Click any article on the 'Daniela Hathorn' page'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"True"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1736637485558,"stop":1736637498456,"duration":12898},"status":"passed","steps":[{"name":"2025-01-11 22:31:15.581126   Start Authorization","time":{"start":1736637493140,"stop":1736637496044,"duration":2904},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"05d87d399f9d3dd6ae81d1f921c5921e\")>"},{"name":"link","value":"'https://capital.com/en-gb'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2025-01-11 22:31:15.581146   Set language and country","time":{"start":1736637496044,"stop":1736637498450,"duration":2406},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"05d87d399f9d3dd6ae81d1f921c5921e\")>"},{"name":"cur_language","value":"'en'"},{"name":"cur_country","value":"'ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"05d87d399f9d3dd6ae81d1f921c5921e\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Markets\" menu, \"Market analysis\" submenu","time":{"start":1736637498456,"stop":1736637506752,"duration":8296},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"05d87d399f9d3dd6ae81d1f921c5921e\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"link","value":"'https://capital.com/en-ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2025-01-11 22:31:15.565099   1. Start Arrange: find target article,choose and click article,find and click link 'Daniela Hathorn', choose any random article","time":{"start":1736637506752,"stop":1736637507164,"duration":412},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"05d87d399f9d3dd6ae81d1f921c5921e\")>"},{"name":"link","value":"'https://capital.com/en-ae/analysis'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"\n2025-01-11 22:31:15.565124   2. Start Act.","time":{"start":1736637507164,"stop":1736637509354,"duration":2190},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"05d87d399f9d3dd6ae81d1f921c5921e\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2025-01-11 22:31:15.565137   3. Start Assert. Check author of articles","time":{"start":1736637509354,"stop":1736637509354,"duration":0},"status":"failed","statusMessage":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_407.py\", line 205, in assert_\n    Common().pytest_fail(f\"Bug # {BUG_NUMBER} {msg}\")\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/common.py\", line 235, in pytest_fail\n    pytest.fail(msg)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"05d87d399f9d3dd6ae81d1f921c5921e\")>"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"05d87d399f9d3dd6ae81d1f921c5921e\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":8,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"5ec9a9083220247b","name":"Screenshot","source":"5ec9a9083220247b.png","type":"image/png","size":413340},{"uid":"d1272a720e978394","name":"stdout","source":"d1272a720e978394.txt","type":"text/plain","size":7195}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":9,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1736638680796,"stop":1736638681284,"duration":488},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!407 | Menu section [Markets] > Menu item [Market analysis] > Find and click article of 'Daniela Hathorn' author > Click the link 'Daniela Hathorn' > Click any article on the 'Daniela Hathorn' page"},{"name":"feature","value":"Role: Auth"},{"name":"story","value":"Country: ae"},{"name":"tag","value":"bug_407"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.artemdashkov"},{"name":"suite","value":"US_55-artemdashkov_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetected"},{"name":"host","value":"fv-az1671-577"},{"name":"thread","value":"5431-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.artemdashkov.US_55-artemdashkov_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":71,"broken":0,"skipped":0,"passed":7,"unknown":0,"total":78},"items":[{"uid":"fe95079c0f22ae93","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/285//#testresult/fe95079c0f22ae93","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1736551035096,"stop":1736551059668,"duration":24572}},{"uid":"b4aac5b77e958e0b","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/284//#testresult/b4aac5b77e958e0b","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1736464610562,"stop":1736464634727,"duration":24165}},{"uid":"1bd4e49fb9bc1b88","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/283//#testresult/1bd4e49fb9bc1b88","status":"passed","time":{"start":1736378235028,"stop":1736378258766,"duration":23738}},{"uid":"eba81d6b02af357b","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/282//#testresult/eba81d6b02af357b","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1736293264520,"stop":1736293291487,"duration":26967}},{"uid":"cdcbbd80fa8c03d1","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/281//#testresult/cdcbbd80fa8c03d1","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1736205616221,"stop":1736205640429,"duration":24208}},{"uid":"3850a0510cc50c19","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/280//#testresult/3850a0510cc50c19","status":"passed","time":{"start":1736119101020,"stop":1736119125137,"duration":24117}},{"uid":"e68ceb734c35ed4c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/279//#testresult/e68ceb734c35ed4c","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1736033263383,"stop":1736033287091,"duration":23708}},{"uid":"bb493f2cae590853","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/278//#testresult/bb493f2cae590853","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team","time":{"start":1735946261655,"stop":1735946284834,"duration":23179}},{"uid":"f1359a9f52744e8c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/277//#testresult/f1359a9f52744e8c","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1735860605174,"stop":1735860633068,"duration":27894}},{"uid":"fd3a948a6a884267","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/276//#testresult/fd3a948a6a884267","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1735773131176,"stop":1735773155443,"duration":24267}},{"uid":"214a2a7214ec75f4","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/275//#testresult/214a2a7214ec75f4","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1735688095118,"stop":1735688118332,"duration":23214}},{"uid":"9b197d96bee228f7","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/274//#testresult/9b197d96bee228f7","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team","time":{"start":1735601716151,"stop":1735601742720,"duration":26569}},{"uid":"9ef0b7d7de737d64","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/273//#testresult/9ef0b7d7de737d64","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1735514051858,"stop":1735514077696,"duration":25838}},{"uid":"e1b49c4bd4ffe74b","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/272//#testresult/e1b49c4bd4ffe74b","status":"passed","time":{"start":1735428049041,"stop":1735428074259,"duration":25218}},{"uid":"9057d5fe8f00f7fa","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/271//#testresult/9057d5fe8f00f7fa","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1735341388680,"stop":1735341415544,"duration":26864}},{"uid":"b433549575ef6d4d","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/270//#testresult/b433549575ef6d4d","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1735256293836,"stop":1735256317619,"duration":23783}},{"uid":"17f0e711e1ad6d81","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/269//#testresult/17f0e711e1ad6d81","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team","time":{"start":1735168834059,"stop":1735168859937,"duration":25878}},{"uid":"4a5539810dee9ce2","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/268//#testresult/4a5539810dee9ce2","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team","time":{"start":1735082287851,"stop":1735082312368,"duration":24517}},{"uid":"8234a402ebe0bfe6","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/267//#testresult/8234a402ebe0bfe6","status":"passed","time":{"start":1734996275331,"stop":1734996301442,"duration":26111}},{"uid":"2f32d99f638eef0a","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/266//#testresult/2f32d99f638eef0a","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1734909556869,"stop":1734909581135,"duration":24266}}]},"tags":["bug_407","us_55"]},"source":"9ff6c010f8f0c908.json","parameterValues":["'ae'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'Auth'","'Chrome'"]}