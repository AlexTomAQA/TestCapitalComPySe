{"uid":"e19720693e154c9f","name":"TC_55!660 (Lang: nl) | Bid:55!660-nl.nl.Auth","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_660","historyId":"f084e0f5313423f51439adb9949584a1","time":{"start":1742948889339,"stop":1742948897535,"duration":8196},"description":"\n        Check: Menu section [Learn] > Menu item [Market guides] > Click on the \"Commodity trading guide\" link >\n                Click on the \"commodities market\" link\n        Language: NL\n        License: CYSEC\n        Author: Kasila\n        ","descriptionHtml":"<pre><code>    Check: Menu section [Learn] &gt; Menu item [Market guides] &gt; Click on the &quot;Commodity trading guide&quot; link &gt;\n            Click on the &quot;commodities market&quot; link\n    Language: NL\n    License: CYSEC\n    Author: Kasila\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7f0d594dfa70>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bd8aae31612680ea02c54f0aaaacdb32\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0d59a20b90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x557020821e76 \\\\u003Cunknown>\\\\n#22 0x7fbcbda9caa4 \\\\u003Cunknown>\\\\n#23 0x7fbcbdb29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.88)\nE       Stacktrace:\nE       #0 0x557020822ffa <unknown>\nE       #1 0x5570202e1970 <unknown>\nE       #2 0x55702033a1ec <unknown>\nE       #3 0x557020338055 <unknown>\nE       #4 0x5570203356f2 <unknown>\nE       #5 0x5570203348ca <unknown>\nE       #6 0x5570203274cd <unknown>\nE       #7 0x557020359292 <unknown>\nE       #8 0x557020326e4a <unknown>\nE       #9 0x55702035945e <unknown>\nE       #10 0x55702037f70c <unknown>\nE       #11 0x557020359063 <unknown>\nE       #12 0x557020325328 <unknown>\nE       #13 0x557020326491 <unknown>\nE       #14 0x5570207ea42b <unknown>\nE       #15 0x5570207ee2ec <unknown>\nE       #16 0x5570207d1a22 <unknown>\nE       #17 0x5570207eee64 <unknown>\nE       #18 0x5570207b5bef <unknown>\nE       #19 0x557020811558 <unknown>\nE       #20 0x557020811736 <unknown>\nE       #21 0x557020821e76 <unknown>\nE       #22 0x7fbcbda9caa4 <unknown>\nE       #23 0x7fbcbdb29c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7f0d599f2330>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bd8aae31612680ea02c54f0aaaacdb32\")>\ncur_language = 'nl', cur_country = 'nl', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step('Start retest manual AT_55!660  The page with \"404 Pagina niet gevonden.\" text is displayed')\n    @pytest.mark.parametrize('cur_language', ['nl'])\n    @pytest.mark.parametrize('cur_country', ['nl'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_660\n    def test_660(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Menu section [Learn] > Menu item [Market guides] > Click on the \"Commodity trading guide\" link >\n                Click on the \"commodities market\" link\n        Language: NL\n        License: CYSEC\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"660\", 'The page with \"404 Pagina niet gevonden.\" text is displayed after clicking the '\n                   '[grondstoffenmarkt](commodities market) link in \"Een complete gids...\"(A complete guide...) '\n                   'block after selected NL language and country'\n        )\n    \n>       link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:962: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:152: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7f0d594dfa70>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bd8aae31612680ea02c54f0aaaacdb32\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1742947195122,"stop":1742947195912,"duration":790},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1742947195912,"stop":1742947195912,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1742947195912,"stop":1742947195912,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1742947195912,"stop":1742947195912,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Menu section [Learn] > Menu item [Market guides] > Click on the \"Commodity trading guide\" link >\n                Click on the \"commodities market\" link\n        Language: NL\n        License: CYSEC\n        Author: Kasila\n        ","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7f0d594dfa70>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bd8aae31612680ea02c54f0aaaacdb32\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0d59a20b90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x557020821e76 \\\\u003Cunknown>\\\\n#22 0x7fbcbda9caa4 \\\\u003Cunknown>\\\\n#23 0x7fbcbdb29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.88)\nE       Stacktrace:\nE       #0 0x557020822ffa <unknown>\nE       #1 0x5570202e1970 <unknown>\nE       #2 0x55702033a1ec <unknown>\nE       #3 0x557020338055 <unknown>\nE       #4 0x5570203356f2 <unknown>\nE       #5 0x5570203348ca <unknown>\nE       #6 0x5570203274cd <unknown>\nE       #7 0x557020359292 <unknown>\nE       #8 0x557020326e4a <unknown>\nE       #9 0x55702035945e <unknown>\nE       #10 0x55702037f70c <unknown>\nE       #11 0x557020359063 <unknown>\nE       #12 0x557020325328 <unknown>\nE       #13 0x557020326491 <unknown>\nE       #14 0x5570207ea42b <unknown>\nE       #15 0x5570207ee2ec <unknown>\nE       #16 0x5570207d1a22 <unknown>\nE       #17 0x5570207eee64 <unknown>\nE       #18 0x5570207b5bef <unknown>\nE       #19 0x557020811558 <unknown>\nE       #20 0x557020811736 <unknown>\nE       #21 0x557020821e76 <unknown>\nE       #22 0x7fbcbda9caa4 <unknown>\nE       #23 0x7fbcbdb29c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7f0d599f2330>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bd8aae31612680ea02c54f0aaaacdb32\")>\ncur_language = 'nl', cur_country = 'nl', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step('Start retest manual AT_55!660  The page with \"404 Pagina niet gevonden.\" text is displayed')\n    @pytest.mark.parametrize('cur_language', ['nl'])\n    @pytest.mark.parametrize('cur_country', ['nl'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_660\n    def test_660(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Menu section [Learn] > Menu item [Market guides] > Click on the \"Commodity trading guide\" link >\n                Click on the \"commodities market\" link\n        Language: NL\n        License: CYSEC\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"660\", 'The page with \"404 Pagina niet gevonden.\" text is displayed after clicking the '\n                   '[grondstoffenmarkt](commodities market) link in \"Een complete gids...\"(A complete guide...) '\n                   'block after selected NL language and country'\n        )\n    \n>       link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:962: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:152: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7f0d594dfa70>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bd8aae31612680ea02c54f0aaaacdb32\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","steps":[{"name":"Start retest manual AT_55!660  The page with \"404 Pagina niet gevonden.\" text is displayed","time":{"start":1742948889339,"stop":1742948897534,"duration":8195},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py\", line 962, in test_660\n    link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 78, in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 152, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1742948889339,"stop":1742948889341,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"bd8aae31612680ea02c54f0aaaacdb32\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'nl'"},{"name":"cur_country","value":"'nl'"},{"name":"cur_role","value":"'Auth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'660'"},{"name":"desc_tc","value":"'The page with \"404 Pagina niet gevonden.\" text is displayed after clicking the [grondstoffenmarkt](commodities market) link in \"Een complete gids...\"(A complete guide...) block after selected NL language and country'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1742948889342,"stop":1742948897533,"duration":8191},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 152, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"2025-03-25 23:59:55.084505   Start Authorization","time":{"start":1742948896451,"stop":1742948897533,"duration":1082},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"bd8aae31612680ea02c54f0aaaacdb32\")>"},{"name":"link","value":"'https://capital.com/en-gb'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"bd8aae31612680ea02c54f0aaaacdb32\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'nl'"},{"name":"cur_country","value":"'nl'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"bd8aae31612680ea02c54f0aaaacdb32\")>"},{"name":"cur_language","value":"'nl'"},{"name":"cur_country","value":"'nl'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"34e03c5d6819331f","name":"Screenshot","source":"34e03c5d6819331f.png","type":"image/png","size":611094},{"uid":"f583146bd7e6a82c","name":"stdout","source":"f583146bd7e6a82c.txt","type":"text/plain","size":2239}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1742948931322,"stop":1742948931624,"duration":302},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!660 | The page with \"404 Pagina niet gevonden.\" text is displayed after clicking the [grondstoffenmarkt](commodities market) link in \"Een complete gids...\"(A complete guide...) block after selected NL language and country"},{"name":"feature","value":"Role: Auth"},{"name":"story","value":"Country: nl"},{"name":"tag","value":"bug_660"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az1781-141"},{"name":"thread","value":"32700-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'nl'"},{"name":"cur_language","value":"'nl'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":18,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":18},"items":[{"uid":"32c80bc9b2077c92","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/358//#testresult/32c80bc9b2077c92","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742862298269,"stop":1742862306598,"duration":8329}},{"uid":"acc689230b0e2d9f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/357//#testresult/acc689230b0e2d9f","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742775969102,"stop":1742775977424,"duration":8322}},{"uid":"d150d8fa8560e51","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/356//#testresult/d150d8fa8560e51","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742690303576,"stop":1742690312085,"duration":8509}},{"uid":"fb90382543778646","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/355//#testresult/fb90382543778646","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742603939408,"stop":1742603948014,"duration":8606}},{"uid":"90fb54064dddcd11","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/354//#testresult/90fb54064dddcd11","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742516517286,"stop":1742516525582,"duration":8296}},{"uid":"9b91e3f7867443bf","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/353//#testresult/9b91e3f7867443bf","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742430155720,"stop":1742430164021,"duration":8301}},{"uid":"9b07e0f4ddb2a2b7","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/352//#testresult/9b07e0f4ddb2a2b7","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742343274627,"stop":1742343283067,"duration":8440}},{"uid":"cd803636d2605ec8","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/351//#testresult/cd803636d2605ec8","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742258418095,"stop":1742258426428,"duration":8333}},{"uid":"2d26ea03317935a9","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/350//#testresult/2d26ea03317935a9","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742171809312,"stop":1742171817652,"duration":8340}},{"uid":"c811a667d5aeb2ef","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/349//#testresult/c811a667d5aeb2ef","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742085726837,"stop":1742085735271,"duration":8434}},{"uid":"8b59dadbc6070415","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/348//#testresult/8b59dadbc6070415","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1741998262842,"stop":1741998271250,"duration":8408}},{"uid":"c862d4fa9c29975d","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/347//#testresult/c862d4fa9c29975d","status":"failed","statusDetails":"Failed: #Bug # 55!660 \nExpected result: The page 'Grondstoffen'(Commodities) with 'https://capital.com/nl-nl/markets/commodities' URL is displayed\nActual result: The page '404' with URL 'https://capital.com/nl-nl/learn/market-guides/%E2%80%9Chttps:/capital.com/nl-nl/markets/commodities%E2%80%9D' is displayed","time":{"start":1741917783334,"stop":1741917805059,"duration":21725}},{"uid":"1abd1da5d92c932e","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/346//#testresult/1abd1da5d92c932e","status":"failed","statusDetails":"Failed: #Bug # 55!660 \nExpected result: The page 'Grondstoffen'(Commodities) with 'https://capital.com/nl-nl/markets/commodities' URL is displayed\nActual result: The page '404' with URL 'https://capital.com/nl-nl/learn/market-guides/%E2%80%9Chttps:/capital.com/nl-nl/markets/commodities%E2%80%9D' is displayed","time":{"start":1741830635196,"stop":1741830657519,"duration":22323}},{"uid":"2b21cd1d1b39b033","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/345//#testresult/2b21cd1d1b39b033","status":"failed","statusDetails":"Failed: #Bug # 55!660 \nExpected result: The page 'Grondstoffen'(Commodities) with 'https://capital.com/nl-nl/markets/commodities' URL is displayed\nActual result: The page '404' with URL 'https://capital.com/nl-nl/learn/market-guides/%E2%80%9Chttps:/capital.com/nl-nl/markets/commodities%E2%80%9D' is displayed","time":{"start":1741750806799,"stop":1741750830332,"duration":23533}},{"uid":"806b1522c1de84c7","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/344//#testresult/806b1522c1de84c7","status":"failed","statusDetails":"Failed: #Bug # 55!660 \nExpected result: The page 'Grondstoffen'(Commodities) with 'https://capital.com/nl-nl/markets/commodities' URL is displayed\nActual result: The page '404' with URL 'https://capital.com/nl-nl/learn/market-guides/%E2%80%9Chttps:/capital.com/nl-nl/markets/commodities%E2%80%9D' is displayed","time":{"start":1741664710552,"stop":1741664734194,"duration":23642}},{"uid":"a881e6d660952b15","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/343//#testresult/a881e6d660952b15","status":"failed","statusDetails":"Failed: #Bug # 55!660 \nExpected result: The page 'Grondstoffen'(Commodities) with 'https://capital.com/nl-nl/markets/commodities' URL is displayed\nActual result: The page '404' with URL 'https://capital.com/nl-nl/learn/market-guides/%E2%80%9Chttps:/capital.com/nl-nl/markets/commodities%E2%80%9D' is displayed","time":{"start":1741571512410,"stop":1741571535012,"duration":22602}},{"uid":"60cdbd38d30b0db","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/342//#testresult/60cdbd38d30b0db","status":"failed","statusDetails":"Failed: #Bug # 55!660 \nExpected result: The page 'Grondstoffen'(Commodities) with 'https://capital.com/nl-nl/markets/commodities' URL is displayed\nActual result: The page '404' with URL 'https://capital.com/nl-nl/learn/market-guides/%E2%80%9Chttps:/capital.com/nl-nl/markets/commodities%E2%80%9D' is displayed","time":{"start":1741484559718,"stop":1741484580725,"duration":21007}}]},"tags":["bug_660","us_55"]},"source":"e19720693e154c9f.json","parameterValues":["'nl'","'nl'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'Auth'","'Chrome'"]}