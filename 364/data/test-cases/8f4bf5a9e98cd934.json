{"uid":"8f4bf5a9e98cd934","name":"TC_55!273 (Lang: ar) | Bid:55!273-ar.ae.NoAuth","fullName":"tests.US_55_ReTestsManual.saii-d3v.US_55-saii-d3v_ReTestsManual_test.TestManualDetectedBugs#test_273","historyId":"dea81e12531c0953a08f42722fa8ee7f","time":{"start":1743377996938,"stop":1743378002718,"duration":5780},"description":"\n         Check: The page with “404 error” message is displayed\n                after clicking the link [تعلّم التداول] (Learn to trade)\n                in the tile [ترغب في تحسين استراتيجياتك؟] (Looking to sharpen your strategies?)\n                on the page \"تعلّم التداول\" (Learn to trade) when AR language is selected\n         Language: AR.\n         License: SCA.\n         Author: Sergey Aiidzhanov\n         ","descriptionHtml":"<pre><code>     Check: The page with “404 error” message is displayed\n            after clicking the link [تعلّم التداول] (Learn to trade)\n            in the tile [ترغب في تحسين استراتيجياتك؟] (Looking to sharpen your strategies?)\n            on the page &quot;تعلّم التداول&quot; (Learn to trade) when AR language is selected\n     Language: AR.\n     License: SCA.\n     Author: Sergey Aiidzhanov\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7f361e845640>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cf07fdc702da39d2de9655e54cac0e0f\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'NoAuth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f361e80d880>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x563b92286e76 \\\\u003Cunknown>\\\\n#22 0x7f0d9a89caa4 \\\\u003Cunknown>\\\\n#23 0x7f0d9a929c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.88)\nE       Stacktrace:\nE       #0 0x563b92287ffa <unknown>\nE       #1 0x563b91d46970 <unknown>\nE       #2 0x563b91d9f1ec <unknown>\nE       #3 0x563b91d9d055 <unknown>\nE       #4 0x563b91d9a6f2 <unknown>\nE       #5 0x563b91d998ca <unknown>\nE       #6 0x563b91d8c4cd <unknown>\nE       #7 0x563b91dbe292 <unknown>\nE       #8 0x563b91d8be4a <unknown>\nE       #9 0x563b91dbe45e <unknown>\nE       #10 0x563b91de470c <unknown>\nE       #11 0x563b91dbe063 <unknown>\nE       #12 0x563b91d8a328 <unknown>\nE       #13 0x563b91d8b491 <unknown>\nE       #14 0x563b9224f42b <unknown>\nE       #15 0x563b922532ec <unknown>\nE       #16 0x563b92236a22 <unknown>\nE       #17 0x563b92253e64 <unknown>\nE       #18 0x563b9221abef <unknown>\nE       #19 0x563b92276558 <unknown>\nE       #20 0x563b92276736 <unknown>\nE       #21 0x563b92286e76 <unknown>\nE       #22 0x7f0d9a89caa4 <unknown>\nE       #23 0x7f0d9a929c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-saii-d3v_ReTestsManual_test.TestManualDetectedBugs object at 0x7f361e7774a0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cf07fdc702da39d2de9655e54cac0e0f\")>\ncur_language = 'ar', cur_country = 'ae', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\n        'Start retest manual TC_55!273 | The page with “404 error” message is displayed '\n        'after clicking the link [تعلّم التداول] (Learn to trade) '\n        'in the tile [ترغب في تحسين استراتيجياتك؟] (Looking to sharpen your strategies?) '\n        'on the page \"تعلّم التداول\" (Learn to trade) when AR language is selected')\n    @pytest.mark.parametrize('cur_language', ['ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', ['Auth', 'NoAuth', 'NoReg'])\n    @pytest.mark.bug_273\n    def test_273(self, worker_id, d, cur_language, cur_country, cur_role,\n                 cur_login, cur_password):\n        \"\"\"\n         Check: The page with “404 error” message is displayed\n                after clicking the link [تعلّم التداول] (Learn to trade)\n                in the tile [ترغب في تحسين استراتيجياتك؟] (Looking to sharpen your strategies?)\n                on the page \"تعلّم التداول\" (Learn to trade) when AR language is selected\n         Language: AR.\n         License: SCA.\n         Author: Sergey Aiidzhanov\n         \"\"\"\n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"273\",\n            'The page with “404 error” message is displayed '\n            'after clicking the link [تعلّم التداول] (Learn to trade) '\n            'in the tile [ترغب في تحسين استراتيجياتك؟] (Looking to sharpen your strategies?) '\n            'on the page \"تعلّم التداول\" (Learn to trade) when AR language is selected',\n            False,\n            False\n        )\n    \n        # Arrange\n>       link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/saii-d3v/US_55-saii-d3v_ReTestsManual_test.py:478: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:154: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7f361e845640>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cf07fdc702da39d2de9655e54cac0e0f\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'NoAuth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1743377008115,"stop":1743377008947,"duration":832},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1743377008947,"stop":1743377008947,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1743377008947,"stop":1743377008947,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1743377008947,"stop":1743377008947,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n         Check: The page with “404 error” message is displayed\n                after clicking the link [تعلّم التداول] (Learn to trade)\n                in the tile [ترغب في تحسين استراتيجياتك؟] (Looking to sharpen your strategies?)\n                on the page \"تعلّم التداول\" (Learn to trade) when AR language is selected\n         Language: AR.\n         License: SCA.\n         Author: Sergey Aiidzhanov\n         ","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7f361e845640>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cf07fdc702da39d2de9655e54cac0e0f\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'NoAuth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f361e80d880>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x563b92286e76 \\\\u003Cunknown>\\\\n#22 0x7f0d9a89caa4 \\\\u003Cunknown>\\\\n#23 0x7f0d9a929c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.88)\nE       Stacktrace:\nE       #0 0x563b92287ffa <unknown>\nE       #1 0x563b91d46970 <unknown>\nE       #2 0x563b91d9f1ec <unknown>\nE       #3 0x563b91d9d055 <unknown>\nE       #4 0x563b91d9a6f2 <unknown>\nE       #5 0x563b91d998ca <unknown>\nE       #6 0x563b91d8c4cd <unknown>\nE       #7 0x563b91dbe292 <unknown>\nE       #8 0x563b91d8be4a <unknown>\nE       #9 0x563b91dbe45e <unknown>\nE       #10 0x563b91de470c <unknown>\nE       #11 0x563b91dbe063 <unknown>\nE       #12 0x563b91d8a328 <unknown>\nE       #13 0x563b91d8b491 <unknown>\nE       #14 0x563b9224f42b <unknown>\nE       #15 0x563b922532ec <unknown>\nE       #16 0x563b92236a22 <unknown>\nE       #17 0x563b92253e64 <unknown>\nE       #18 0x563b9221abef <unknown>\nE       #19 0x563b92276558 <unknown>\nE       #20 0x563b92276736 <unknown>\nE       #21 0x563b92286e76 <unknown>\nE       #22 0x7f0d9a89caa4 <unknown>\nE       #23 0x7f0d9a929c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-saii-d3v_ReTestsManual_test.TestManualDetectedBugs object at 0x7f361e7774a0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cf07fdc702da39d2de9655e54cac0e0f\")>\ncur_language = 'ar', cur_country = 'ae', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\n        'Start retest manual TC_55!273 | The page with “404 error” message is displayed '\n        'after clicking the link [تعلّم التداول] (Learn to trade) '\n        'in the tile [ترغب في تحسين استراتيجياتك؟] (Looking to sharpen your strategies?) '\n        'on the page \"تعلّم التداول\" (Learn to trade) when AR language is selected')\n    @pytest.mark.parametrize('cur_language', ['ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', ['Auth', 'NoAuth', 'NoReg'])\n    @pytest.mark.bug_273\n    def test_273(self, worker_id, d, cur_language, cur_country, cur_role,\n                 cur_login, cur_password):\n        \"\"\"\n         Check: The page with “404 error” message is displayed\n                after clicking the link [تعلّم التداول] (Learn to trade)\n                in the tile [ترغب في تحسين استراتيجياتك؟] (Looking to sharpen your strategies?)\n                on the page \"تعلّم التداول\" (Learn to trade) when AR language is selected\n         Language: AR.\n         License: SCA.\n         Author: Sergey Aiidzhanov\n         \"\"\"\n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"273\",\n            'The page with “404 error” message is displayed '\n            'after clicking the link [تعلّم التداول] (Learn to trade) '\n            'in the tile [ترغب في تحسين استراتيجياتك؟] (Looking to sharpen your strategies?) '\n            'on the page \"تعلّم التداول\" (Learn to trade) when AR language is selected',\n            False,\n            False\n        )\n    \n        # Arrange\n>       link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/saii-d3v/US_55-saii-d3v_ReTestsManual_test.py:478: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:154: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7f361e845640>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cf07fdc702da39d2de9655e54cac0e0f\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'NoAuth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","steps":[{"name":"Start retest manual TC_55!273 | The page with “404 error” message is displayed after clicking the link [تعلّم التداول] (Learn to trade) in the tile [ترغب في تحسين استراتيجياتك؟] (Looking to sharpen your strategies?) on the page \"تعلّم التداول\" (Learn to trade) when AR language is selected","time":{"start":1743377996938,"stop":1743378002717,"duration":5779},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/saii-d3v/US_55-saii-d3v_ReTestsManual_test.py\", line 478, in test_273\n    link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 78, in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 154, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1743377996938,"stop":1743377996941,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"cf07fdc702da39d2de9655e54cac0e0f\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'273'"},{"name":"desc_tc","value":"'The page with “404 error” message is displayed after clicking the link [تعلّم التداول] (Learn to trade) in the tile [ترغب في تحسين استراتيجياتك؟] (Looking to sharpen your strategies?) on the page \"تعلّم التداول\" (Learn to trade) when AR language is selected'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1743377996941,"stop":1743378002716,"duration":5775},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 154, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"2025-03-30 23:23:28.048038   Start Authorization","time":{"start":1743378001651,"stop":1743378002716,"duration":1065},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"cf07fdc702da39d2de9655e54cac0e0f\")>"},{"name":"link","value":"'https://capital.com/en-gb'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"cf07fdc702da39d2de9655e54cac0e0f\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"cf07fdc702da39d2de9655e54cac0e0f\")>"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"5701a54f1bd6b574","name":"Screenshot","source":"5701a54f1bd6b574.png","type":"image/png","size":611008},{"uid":"583fd1e0e4969ddd","name":"stdout","source":"583fd1e0e4969ddd.txt","type":"text/plain","size":1962}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1743379619113,"stop":1743379619494,"duration":381},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!273 | The page with “404 error” message is displayed after clicking the link [تعلّم التداول] (Learn to trade) in the tile [ترغب في تحسين استراتيجياتك؟] (Looking to sharpen your strategies?) on the page \"تعلّم التداول\" (Learn to trade) when AR language is selected"},{"name":"feature","value":"Role: NoAuth"},{"name":"story","value":"Country: ae"},{"name":"tag","value":"bug_273"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.saii-d3v"},{"name":"suite","value":"US_55-saii-d3v_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az2211-234"},{"name":"thread","value":"19359-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.saii-d3v.US_55-saii-d3v_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"'ar'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":23,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":23},"items":[{"uid":"97ab109d1da78ff8","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/363//#testresult/97ab109d1da78ff8","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743291967300,"stop":1743291973165,"duration":5865}},{"uid":"77132bbf2073091a","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/362//#testresult/77132bbf2073091a","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743205508618,"stop":1743205514706,"duration":6088}},{"uid":"15fbfe7746b6b968","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/361//#testresult/15fbfe7746b6b968","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743119062305,"stop":1743119068070,"duration":5765}},{"uid":"76725451e61c62d7","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/360//#testresult/76725451e61c62d7","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743031933569,"stop":1743031939453,"duration":5884}},{"uid":"83d61c94f6351b6b","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/359//#testresult/83d61c94f6351b6b","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742945481549,"stop":1742945487347,"duration":5798}},{"uid":"7105e21839167105","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/358//#testresult/7105e21839167105","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742858929880,"stop":1742858935726,"duration":5846}},{"uid":"c9b6a752f3c2c9a2","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/357//#testresult/c9b6a752f3c2c9a2","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742772805055,"stop":1742772810848,"duration":5793}},{"uid":"333c6171e3ef112","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/356//#testresult/333c6171e3ef112","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742686921969,"stop":1742686928181,"duration":6212}},{"uid":"5c8846d2932c0471","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/355//#testresult/5c8846d2932c0471","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742600551217,"stop":1742600557199,"duration":5982}},{"uid":"1d666f082457603e","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/354//#testresult/1d666f082457603e","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742513146712,"stop":1742513152603,"duration":5891}},{"uid":"d3461a063d724f25","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/353//#testresult/d3461a063d724f25","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742426760009,"stop":1742426765816,"duration":5807}},{"uid":"4d1e24e2e2a7b821","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/352//#testresult/4d1e24e2e2a7b821","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742339839515,"stop":1742339845480,"duration":5965}},{"uid":"733896a8447ae483","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/351//#testresult/733896a8447ae483","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742255079720,"stop":1742255085619,"duration":5899}},{"uid":"595bd53cc2f7d7d6","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/350//#testresult/595bd53cc2f7d7d6","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742168525602,"stop":1742168531503,"duration":5901}},{"uid":"9d5c964f444dc3a7","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/349//#testresult/9d5c964f444dc3a7","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742082358881,"stop":1742082364790,"duration":5909}},{"uid":"5583088635635717","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/348//#testresult/5583088635635717","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1741994890908,"stop":1741994896866,"duration":5958}},{"uid":"d52b36179f0ff146","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/347//#testresult/d52b36179f0ff146","status":"failed","statusDetails":"Failed: Bug # 55!273 The the block \"Experienced traders\" is NOT into viewport","time":{"start":1741911158487,"stop":1741911185759,"duration":27272}},{"uid":"1d3c6ab56e113fe","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/346//#testresult/1d3c6ab56e113fe","status":"failed","statusDetails":"Failed: Bug # 55!273 The the block \"Experienced traders\" is NOT into viewport","time":{"start":1741824256767,"stop":1741824284021,"duration":27254}},{"uid":"1af0c6ca0727589f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/345//#testresult/1af0c6ca0727589f","status":"failed","statusDetails":"Failed: Bug # 55!273 The the block \"Experienced traders\" is NOT into viewport","time":{"start":1741737607230,"stop":1741737635318,"duration":28088}},{"uid":"472ce45e30e2ca58","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/344//#testresult/472ce45e30e2ca58","status":"failed","statusDetails":"Failed: Bug # 55!273 The the block \"Experienced traders\" is NOT into viewport","time":{"start":1741651818561,"stop":1741651846582,"duration":28021}}]},"tags":["bug_273","us_55"]},"source":"8f4bf5a9e98cd934.json","parameterValues":["'ae'","'ar'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoAuth'","'Chrome'"]}