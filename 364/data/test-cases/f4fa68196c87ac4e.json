{"uid":"f4fa68196c87ac4e","name":"TC_55!624 (Lang: en) | Bid:55!624-en.au.NoAuth","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_624","historyId":"101754df9eb34e353b8dd3d8efdfbb23","time":{"start":1743381209474,"stop":1743381215245,"duration":5771},"description":"\n        Check: Menu section [Learn] > Menu item  [Market guides] > Click the link “Shares trading guide”\n                > Сlick the link “Netflix” > Сlick the link “Trade Coca-Cola shares”\n                > Сlick the link “KO” in the block “Performance of the Coca-Cola stock in recent years”\n        Language: EN\n        License: FCA\n        Author: Kasila\n        ","descriptionHtml":"<pre><code>    Check: Menu section [Learn] &gt; Menu item  [Market guides] &gt; Click the link “Shares trading guide”\n            &gt; Сlick the link “Netflix” &gt; Сlick the link “Trade Coca-Cola shares”\n            &gt; Сlick the link “KO” in the block “Performance of the Coca-Cola stock in recent years”\n    Language: EN\n    License: FCA\n    Author: Kasila\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7f86a2684890>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"360eec9999ca38c64572e4e744a260dc\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'NoAuth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f86a1af7320>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55cd1b5c9e76 \\\\u003Cunknown>\\\\n#22 0x7f799e69caa4 \\\\u003Cunknown>\\\\n#23 0x7f799e729c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.88)\nE       Stacktrace:\nE       #0 0x55cd1b5caffa <unknown>\nE       #1 0x55cd1b089970 <unknown>\nE       #2 0x55cd1b0e21ec <unknown>\nE       #3 0x55cd1b0e0055 <unknown>\nE       #4 0x55cd1b0dd6f2 <unknown>\nE       #5 0x55cd1b0dc8ca <unknown>\nE       #6 0x55cd1b0cf4cd <unknown>\nE       #7 0x55cd1b101292 <unknown>\nE       #8 0x55cd1b0cee4a <unknown>\nE       #9 0x55cd1b10145e <unknown>\nE       #10 0x55cd1b12770c <unknown>\nE       #11 0x55cd1b101063 <unknown>\nE       #12 0x55cd1b0cd328 <unknown>\nE       #13 0x55cd1b0ce491 <unknown>\nE       #14 0x55cd1b59242b <unknown>\nE       #15 0x55cd1b5962ec <unknown>\nE       #16 0x55cd1b579a22 <unknown>\nE       #17 0x55cd1b596e64 <unknown>\nE       #18 0x55cd1b55dbef <unknown>\nE       #19 0x55cd1b5b9558 <unknown>\nE       #20 0x55cd1b5b9736 <unknown>\nE       #21 0x55cd1b5c9e76 <unknown>\nE       #22 0x7f799e69caa4 <unknown>\nE       #23 0x7f799e729c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7f86a28e8da0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"360eec9999ca38c64572e4e744a260dc\")>\ncur_language = '', cur_country = 'au', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step('Start retest manual AT_55!624 The error message “This site can’t be reached” is displayed')\n    @pytest.mark.parametrize('cur_language', [''])\n    @pytest.mark.parametrize('cur_country', ['ae', 'gb', 'au'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_624\n    def test_624(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Menu section [Learn] > Menu item  [Market guides] > Click the link “Shares trading guide”\n                > Сlick the link “Netflix” > Сlick the link “Trade Coca-Cola shares”\n                > Сlick the link “KO” in the block “Performance of the Coca-Cola stock in recent years”\n        Language: EN\n        License: FCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"624\", 'Error message “This site can’t be reached” is displayed after clicking the link “KO” '\n                   'in the block “Performance of the Coca-Cola stock in recent years” on the page “How to trade '\n                   'Coca-Cola stocks” when EN language is selected (SCA / FCA / ASIC licenses)'\n        )\n    \n>       link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:864: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:154: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7f86a2684890>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"360eec9999ca38c64572e4e744a260dc\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'NoAuth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1743379621009,"stop":1743379622276,"duration":1267},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1743379622276,"stop":1743379622276,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1743379622276,"stop":1743379622276,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1743379622276,"stop":1743379622276,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Menu section [Learn] > Menu item  [Market guides] > Click the link “Shares trading guide”\n                > Сlick the link “Netflix” > Сlick the link “Trade Coca-Cola shares”\n                > Сlick the link “KO” in the block “Performance of the Coca-Cola stock in recent years”\n        Language: EN\n        License: FCA\n        Author: Kasila\n        ","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7f86a2684890>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"360eec9999ca38c64572e4e744a260dc\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'NoAuth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f86a1af7320>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55cd1b5c9e76 \\\\u003Cunknown>\\\\n#22 0x7f799e69caa4 \\\\u003Cunknown>\\\\n#23 0x7f799e729c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.88)\nE       Stacktrace:\nE       #0 0x55cd1b5caffa <unknown>\nE       #1 0x55cd1b089970 <unknown>\nE       #2 0x55cd1b0e21ec <unknown>\nE       #3 0x55cd1b0e0055 <unknown>\nE       #4 0x55cd1b0dd6f2 <unknown>\nE       #5 0x55cd1b0dc8ca <unknown>\nE       #6 0x55cd1b0cf4cd <unknown>\nE       #7 0x55cd1b101292 <unknown>\nE       #8 0x55cd1b0cee4a <unknown>\nE       #9 0x55cd1b10145e <unknown>\nE       #10 0x55cd1b12770c <unknown>\nE       #11 0x55cd1b101063 <unknown>\nE       #12 0x55cd1b0cd328 <unknown>\nE       #13 0x55cd1b0ce491 <unknown>\nE       #14 0x55cd1b59242b <unknown>\nE       #15 0x55cd1b5962ec <unknown>\nE       #16 0x55cd1b579a22 <unknown>\nE       #17 0x55cd1b596e64 <unknown>\nE       #18 0x55cd1b55dbef <unknown>\nE       #19 0x55cd1b5b9558 <unknown>\nE       #20 0x55cd1b5b9736 <unknown>\nE       #21 0x55cd1b5c9e76 <unknown>\nE       #22 0x7f799e69caa4 <unknown>\nE       #23 0x7f799e729c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7f86a28e8da0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"360eec9999ca38c64572e4e744a260dc\")>\ncur_language = '', cur_country = 'au', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step('Start retest manual AT_55!624 The error message “This site can’t be reached” is displayed')\n    @pytest.mark.parametrize('cur_language', [''])\n    @pytest.mark.parametrize('cur_country', ['ae', 'gb', 'au'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_624\n    def test_624(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Menu section [Learn] > Menu item  [Market guides] > Click the link “Shares trading guide”\n                > Сlick the link “Netflix” > Сlick the link “Trade Coca-Cola shares”\n                > Сlick the link “KO” in the block “Performance of the Coca-Cola stock in recent years”\n        Language: EN\n        License: FCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"624\", 'Error message “This site can’t be reached” is displayed after clicking the link “KO” '\n                   'in the block “Performance of the Coca-Cola stock in recent years” on the page “How to trade '\n                   'Coca-Cola stocks” when EN language is selected (SCA / FCA / ASIC licenses)'\n        )\n    \n>       link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:864: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:154: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7f86a2684890>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"360eec9999ca38c64572e4e744a260dc\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'NoAuth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","steps":[{"name":"Start retest manual AT_55!624 The error message “This site can’t be reached” is displayed","time":{"start":1743381209474,"stop":1743381215244,"duration":5770},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py\", line 864, in test_624\n    link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 78, in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 154, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1743381209474,"stop":1743381209476,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"360eec9999ca38c64572e4e744a260dc\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'624'"},{"name":"desc_tc","value":"'Error message “This site can’t be reached” is displayed after clicking the link “KO” in the block “Performance of the Coca-Cola stock in recent years” on the page “How to trade Coca-Cola stocks” when EN language is selected (SCA / FCA / ASIC licenses)'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1743381209476,"stop":1743381215243,"duration":5767},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 154, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"2025-03-31 00:07:00.972417   Start Authorization","time":{"start":1743381214177,"stop":1743381215243,"duration":1066},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"360eec9999ca38c64572e4e744a260dc\")>"},{"name":"link","value":"'https://capital.com/en-gb'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"360eec9999ca38c64572e4e744a260dc\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"360eec9999ca38c64572e4e744a260dc\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"d98b1fc97972b199","name":"Screenshot","source":"d98b1fc97972b199.png","type":"image/png","size":611008},{"uid":"2a906b0446dd1b2","name":"stdout","source":"2a906b0446dd1b2.txt","type":"text/plain","size":1962}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1743381319799,"stop":1743381320104,"duration":305},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!624 | Error message “This site can’t be reached” is displayed after clicking the link “KO” in the block “Performance of the Coca-Cola stock in recent years” on the page “How to trade Coca-Cola stocks” when EN language is selected (SCA / FCA / ASIC licenses)"},{"name":"feature","value":"Role: NoAuth"},{"name":"story","value":"Country: au"},{"name":"tag","value":"bug_624"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az2211-234"},{"name":"thread","value":"29882-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'au'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":17,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":23},"items":[{"uid":"99ea16df8459d612","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/363//#testresult/99ea16df8459d612","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743295328082,"stop":1743295333889,"duration":5807}},{"uid":"52f6aafd31fc7943","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/362//#testresult/52f6aafd31fc7943","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743208736367,"stop":1743208742315,"duration":5948}},{"uid":"948d5af0a24a5bf1","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/361//#testresult/948d5af0a24a5bf1","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743122423389,"stop":1743122429156,"duration":5767}},{"uid":"3bcc7557417ddcb9","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/360//#testresult/3bcc7557417ddcb9","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743035315217,"stop":1743035321215,"duration":5998}},{"uid":"e82fbace65723d3c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/359//#testresult/e82fbace65723d3c","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742948819696,"stop":1742948825485,"duration":5789}},{"uid":"1d101d90099973f3","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/358//#testresult/1d101d90099973f3","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742862228712,"stop":1742862234625,"duration":5913}},{"uid":"734bf0e7629898e3","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/357//#testresult/734bf0e7629898e3","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742775900297,"stop":1742775906177,"duration":5880}},{"uid":"a3b072c4cb37406e","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/356//#testresult/a3b072c4cb37406e","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742690233918,"stop":1742690239923,"duration":6005}},{"uid":"b637082513afa4b","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/355//#testresult/b637082513afa4b","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742603869958,"stop":1742603875806,"duration":5848}},{"uid":"f8dae420834b480f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/354//#testresult/f8dae420834b480f","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742516447304,"stop":1742516453275,"duration":5971}},{"uid":"621ca54f94b79b71","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/353//#testresult/621ca54f94b79b71","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742430086708,"stop":1742430092571,"duration":5863}},{"uid":"9f7a46b72f8d06eb","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/352//#testresult/9f7a46b72f8d06eb","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742343203234,"stop":1742343209190,"duration":5956}},{"uid":"13844126dbb2da57","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/351//#testresult/13844126dbb2da57","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742258349042,"stop":1742258354847,"duration":5805}},{"uid":"18baaa4b3cf681a2","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/350//#testresult/18baaa4b3cf681a2","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742171739210,"stop":1742171745304,"duration":6094}},{"uid":"e3f920ecf9af79b","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/349//#testresult/e3f920ecf9af79b","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742085656913,"stop":1742085662939,"duration":6026}},{"uid":"20925bde38818222","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/348//#testresult/20925bde38818222","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1741998194025,"stop":1741998199853,"duration":5828}},{"uid":"5ebf5bba173fa214","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/347//#testresult/5ebf5bba173fa214","status":"passed","time":{"start":1741917613946,"stop":1741917633628,"duration":19682}},{"uid":"88f64cf460b758d4","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/346//#testresult/88f64cf460b758d4","status":"passed","time":{"start":1741830465784,"stop":1741830485684,"duration":19900}},{"uid":"7abf13e69ae07d89","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/345//#testresult/7abf13e69ae07d89","status":"passed","time":{"start":1741750635422,"stop":1741750655140,"duration":19718}},{"uid":"3073f2d27bb29e57","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/344//#testresult/3073f2d27bb29e57","status":"passed","time":{"start":1741664536117,"stop":1741664556069,"duration":19952}}]},"tags":["us_55","bug_624"]},"source":"f4fa68196c87ac4e.json","parameterValues":["'au'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoAuth'","'Chrome'"]}