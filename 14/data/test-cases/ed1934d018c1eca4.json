{"uid":"ed1934d018c1eca4","name":"TC_11.01.03.01_03 with parameters: es, au, NoReg","fullName":"tests.US_11_Education.US_11-01-03_cfd_trading_guide.us_11-01-03-01_cfd_trading_guide_test.TestCFDTradingGuide#test_03_most_traded_trade_button","historyId":"fabf8a3158f246cf164d6557defc8454","time":{"start":1702359611939,"stop":1702359621316,"duration":9377},"description":"\n        Check: Button [Trade] in Most traded block\n        Language: All. License: All.\n        ","descriptionHtml":"<pre><code>    Check: Button [Trade] in Most traded block\n    Language: All. License: All.\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button _ngcontent-ng-c2980653992=\"\" button-main=\"\" _nghost-ng-c2129233594=\"\" class=\"ghost default small\">...</button> is not clickable at point (1213, 88). Other element would receive the click: <div class=\"cdk-overlay-backdrop modal-overlay2 modal-overlay2--cursor-default cdk-overlay-backdrop-showing\"></div>\n  (Session info: chrome=119.0.6045.199)\nStacktrace:\n#0 0x55d17f9fd5e3 <unknown>\n#1 0x55d17f6c00b7 <unknown>\n#2 0x55d17f715cfc <unknown>\n#3 0x55d17f71365f <unknown>\n#4 0x55d17f710be4 <unknown>\n#5 0x55d17f70f934 <unknown>\n#6 0x55d17f7021a0 <unknown>\n#7 0x55d17f734ef2 <unknown>\n#8 0x55d17f701a02 <unknown>\n#9 0x55d17f7350be <unknown>\n#10 0x55d17f750b3d <unknown>\n#11 0x55d17f734cc3 <unknown>\n#12 0x55d17f7000e4 <unknown>\n#13 0x55d17f7010ae <unknown>\n#14 0x55d17f9c3ce1 <unknown>\n#15 0x55d17f9c7b7e <unknown>\n#16 0x55d17f9b14b5 <unknown>\n#17 0x55d17f9c87d6 <unknown>\n#18 0x55d17f994dbf <unknown>\n#19 0x55d17f9eb748 <unknown>\n#20 0x55d17f9eb917 <unknown>\n#21 0x55d17f9fc773 <unknown>\n#22 0x7fb1b6694ac3 <unknown>","statusTrace":"self = <us_11-01-03-01_cfd_trading_guide_test.TestCFDTradingGuide object at 0x7f4ec030ff50>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"71dea62a51cb03fb130876a1cb04b900\")>\ncur_language = 'es', cur_country = 'au', cur_role = 'NoReg'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\ncur_item_link = 'https://capital.com/es/cfd-vs-trading-acciones'\n\n    @allure.step(\"Start test of buttons [Trade] in Most traded block\")\n    def test_03_most_traded_trade_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link):\n        \"\"\"\n        Check: Button [Trade] in Most traded block\n        Language: All. License: All.\n        \"\"\"\n        build_dynamic_arg_v3(self, d, worker_id, cur_language, cur_country, cur_role,\n                             \"11.01.03\", \"Educations > Menu item [CFD trading guide]\",\n                             \".01_03\", \"Testing button [Trade] in Most traded block\")\n    \n        check_language(cur_language, [\"\", \"de\", \"es\", \"fr\", \"nl\", \"pl\", \"ro\", \"ru\", \"zh\"])\n        check_country(cur_country, [\"gb\"])\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = ButtonTradeOnWidgetMostTraded(d, cur_item_link)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link)\n\ntests/US_11_Education/US_11-01-03_cfd_trading_guide/us_11-01-03-01_cfd_trading_guide_test.py:130: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/ButtonTradeOnWidgetMostTraded.py:29: in full_test_with_tpi\n    self.clear_chart_list()\npages/Elements/ButtonTradeOnWidgetMostTraded.py:103: in clear_chart_list\n    close_all_buttons[1].click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4ec140a750>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55d17f9eb917 \\\\u003Cunknown>\\\\n#21 0x55d17f9fc773 \\\\u003Cunknown>\\\\n#22 0x7fb1b6694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button _ngcontent-ng-c2980653992=\"\" button-main=\"\" _nghost-ng-c2129233594=\"\" class=\"ghost default small\">...</button> is not clickable at point (1213, 88). Other element would receive the click: <div class=\"cdk-overlay-backdrop modal-overlay2 modal-overlay2--cursor-default cdk-overlay-backdrop-showing\"></div>\nE         (Session info: chrome=119.0.6045.199)\nE       Stacktrace:\nE       #0 0x55d17f9fd5e3 <unknown>\nE       #1 0x55d17f6c00b7 <unknown>\nE       #2 0x55d17f715cfc <unknown>\nE       #3 0x55d17f71365f <unknown>\nE       #4 0x55d17f710be4 <unknown>\nE       #5 0x55d17f70f934 <unknown>\nE       #6 0x55d17f7021a0 <unknown>\nE       #7 0x55d17f734ef2 <unknown>\nE       #8 0x55d17f701a02 <unknown>\nE       #9 0x55d17f7350be <unknown>\nE       #10 0x55d17f750b3d <unknown>\nE       #11 0x55d17f734cc3 <unknown>\nE       #12 0x55d17f7000e4 <unknown>\nE       #13 0x55d17f7010ae <unknown>\nE       #14 0x55d17f9c3ce1 <unknown>\nE       #15 0x55d17f9c7b7e <unknown>\nE       #16 0x55d17f9b14b5 <unknown>\nE       #17 0x55d17f9c87d6 <unknown>\nE       #18 0x55d17f994dbf <unknown>\nE       #19 0x55d17f9eb748 <unknown>\nE       #20 0x55d17f9eb917 <unknown>\nE       #21 0x55d17f9fc773 <unknown>\nE       #22 0x7fb1b6694ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1702358390865,"stop":1702358391756,"duration":891},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1702358390865,"stop":1702358390865,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"go","time":{"start":1702358391756,"stop":1702358391756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1702358391757,"stop":1702358391757,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1702358391757,"stop":1702358391757,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1702358391757,"stop":1702358391757,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1702358391757,"stop":1702358391757,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1702358391757,"stop":1702358391757,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [Trade] in Most traded block\n        Language: All. License: All.\n        ","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button _ngcontent-ng-c2980653992=\"\" button-main=\"\" _nghost-ng-c2129233594=\"\" class=\"ghost default small\">...</button> is not clickable at point (1213, 88). Other element would receive the click: <div class=\"cdk-overlay-backdrop modal-overlay2 modal-overlay2--cursor-default cdk-overlay-backdrop-showing\"></div>\n  (Session info: chrome=119.0.6045.199)\nStacktrace:\n#0 0x55d17f9fd5e3 <unknown>\n#1 0x55d17f6c00b7 <unknown>\n#2 0x55d17f715cfc <unknown>\n#3 0x55d17f71365f <unknown>\n#4 0x55d17f710be4 <unknown>\n#5 0x55d17f70f934 <unknown>\n#6 0x55d17f7021a0 <unknown>\n#7 0x55d17f734ef2 <unknown>\n#8 0x55d17f701a02 <unknown>\n#9 0x55d17f7350be <unknown>\n#10 0x55d17f750b3d <unknown>\n#11 0x55d17f734cc3 <unknown>\n#12 0x55d17f7000e4 <unknown>\n#13 0x55d17f7010ae <unknown>\n#14 0x55d17f9c3ce1 <unknown>\n#15 0x55d17f9c7b7e <unknown>\n#16 0x55d17f9b14b5 <unknown>\n#17 0x55d17f9c87d6 <unknown>\n#18 0x55d17f994dbf <unknown>\n#19 0x55d17f9eb748 <unknown>\n#20 0x55d17f9eb917 <unknown>\n#21 0x55d17f9fc773 <unknown>\n#22 0x7fb1b6694ac3 <unknown>","statusTrace":"self = <us_11-01-03-01_cfd_trading_guide_test.TestCFDTradingGuide object at 0x7f4ec030ff50>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"71dea62a51cb03fb130876a1cb04b900\")>\ncur_language = 'es', cur_country = 'au', cur_role = 'NoReg'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\ncur_item_link = 'https://capital.com/es/cfd-vs-trading-acciones'\n\n    @allure.step(\"Start test of buttons [Trade] in Most traded block\")\n    def test_03_most_traded_trade_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link):\n        \"\"\"\n        Check: Button [Trade] in Most traded block\n        Language: All. License: All.\n        \"\"\"\n        build_dynamic_arg_v3(self, d, worker_id, cur_language, cur_country, cur_role,\n                             \"11.01.03\", \"Educations > Menu item [CFD trading guide]\",\n                             \".01_03\", \"Testing button [Trade] in Most traded block\")\n    \n        check_language(cur_language, [\"\", \"de\", \"es\", \"fr\", \"nl\", \"pl\", \"ro\", \"ru\", \"zh\"])\n        check_country(cur_country, [\"gb\"])\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = ButtonTradeOnWidgetMostTraded(d, cur_item_link)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link)\n\ntests/US_11_Education/US_11-01-03_cfd_trading_guide/us_11-01-03-01_cfd_trading_guide_test.py:130: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/ButtonTradeOnWidgetMostTraded.py:29: in full_test_with_tpi\n    self.clear_chart_list()\npages/Elements/ButtonTradeOnWidgetMostTraded.py:103: in clear_chart_list\n    close_all_buttons[1].click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4ec140a750>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55d17f9eb917 \\\\u003Cunknown>\\\\n#21 0x55d17f9fc773 \\\\u003Cunknown>\\\\n#22 0x7fb1b6694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button _ngcontent-ng-c2980653992=\"\" button-main=\"\" _nghost-ng-c2129233594=\"\" class=\"ghost default small\">...</button> is not clickable at point (1213, 88). Other element would receive the click: <div class=\"cdk-overlay-backdrop modal-overlay2 modal-overlay2--cursor-default cdk-overlay-backdrop-showing\"></div>\nE         (Session info: chrome=119.0.6045.199)\nE       Stacktrace:\nE       #0 0x55d17f9fd5e3 <unknown>\nE       #1 0x55d17f6c00b7 <unknown>\nE       #2 0x55d17f715cfc <unknown>\nE       #3 0x55d17f71365f <unknown>\nE       #4 0x55d17f710be4 <unknown>\nE       #5 0x55d17f70f934 <unknown>\nE       #6 0x55d17f7021a0 <unknown>\nE       #7 0x55d17f734ef2 <unknown>\nE       #8 0x55d17f701a02 <unknown>\nE       #9 0x55d17f7350be <unknown>\nE       #10 0x55d17f750b3d <unknown>\nE       #11 0x55d17f734cc3 <unknown>\nE       #12 0x55d17f7000e4 <unknown>\nE       #13 0x55d17f7010ae <unknown>\nE       #14 0x55d17f9c3ce1 <unknown>\nE       #15 0x55d17f9c7b7e <unknown>\nE       #16 0x55d17f9b14b5 <unknown>\nE       #17 0x55d17f9c87d6 <unknown>\nE       #18 0x55d17f994dbf <unknown>\nE       #19 0x55d17f9eb748 <unknown>\nE       #20 0x55d17f9eb917 <unknown>\nE       #21 0x55d17f9fc773 <unknown>\nE       #22 0x7fb1b6694ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Start test of buttons [Trade] in Most traded block","time":{"start":1702359611940,"stop":1702359621315,"duration":9375},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button _ngcontent-ng-c2980653992=\"\" button-main=\"\" _nghost-ng-c2129233594=\"\" class=\"ghost default small\">...</button> is not clickable at point (1213, 88). Other element would receive the click: <div class=\"cdk-overlay-backdrop modal-overlay2 modal-overlay2--cursor-default cdk-overlay-backdrop-showing\"></div>\n  (Session info: chrome=119.0.6045.199)\nStacktrace:\n#0 0x55d17f9fd5e3 <unknown>\n#1 0x55d17f6c00b7 <unknown>\n#2 0x55d17f715cfc <unknown>\n#3 0x55d17f71365f <unknown>\n#4 0x55d17f710be4 <unknown>\n#5 0x55d17f70f934 <unknown>\n#6 0x55d17f7021a0 <unknown>\n#7 0x55d17f734ef2 <unknown>\n#8 0x55d17f701a02 <unknown>\n#9 0x55d17f7350be <unknown>\n#10 0x55d17f750b3d <unknown>\n#11 0x55d17f734cc3 <unknown>\n#12 0x55d17f7000e4 <unknown>\n#13 0x55d17f7010ae <unknown>\n#14 0x55d17f9c3ce1 <unknown>\n#15 0x55d17f9c7b7e <unknown>\n#16 0x55d17f9b14b5 <unknown>\n#17 0x55d17f9c87d6 <unknown>\n#18 0x55d17f994dbf <unknown>\n#19 0x55d17f9eb748 <unknown>\n#20 0x55d17f9eb917 <unknown>\n#21 0x55d17f9fc773 <unknown>\n#22 0x7fb1b6694ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_11_Education/US_11-01-03_cfd_trading_guide/us_11-01-03-01_cfd_trading_guide_test.py\", line 130, in test_03_most_traded_trade_button\n    test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/ButtonTradeOnWidgetMostTraded.py\", line 29, in full_test_with_tpi\n    self.clear_chart_list()\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/ButtonTradeOnWidgetMostTraded.py\", line 103, in clear_chart_list\n    close_all_buttons[1].click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Set preconditions","time":{"start":1702359611942,"stop":1702359616167,"duration":4225},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"71dea62a51cb03fb130876a1cb04b900\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'es'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Click button MOST_TRADED","time":{"start":1702359616178,"stop":1702359616281,"duration":103},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"random_index","value":"3"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Checking that \"Signup\" opened","time":{"start":1702359616281,"stop":1702359616404,"duration":123},"status":"passed","steps":[{"name":"Check that \"Sign up\" form opened","time":{"start":1702359616281,"stop":1702359616339,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_language","value":"'es'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Close form [Sign up]","time":{"start":1702359616339,"stop":1702359616404,"duration":65},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"71dea62a51cb03fb130876a1cb04b900\")>"},{"name":"cur_language","value":"'es'"},{"name":"cur_link","value":"'https://capital.com/es/cfd-vs-trading-acciones'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"71dea62a51cb03fb130876a1cb04b900\")>"},{"name":"cur_language","value":"'es'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_item_link","value":"'https://capital.com/es/cfd-vs-trading-acciones'"}],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"f324dc459c9bc420","name":"Screenshot","source":"f324dc459c9bc420.png","type":"image/png","size":93933},{"uid":"32576f7c9bf5e1ce","name":"log","source":"32576f7c9bf5e1ce.txt","type":"text/plain","size":781},{"uid":"46423ecd008da572","name":"stdout","source":"46423ecd008da572.txt","type":"text/plain","size":2218}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"go::0","time":{"start":1702361387959,"stop":1702361388175,"duration":216},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Language: es / US_11.01.03 | Educations > Menu item [CFD trading guide]"},{"name":"feature","value":"Country: au / Role: NoReg / TS_11.01.03 | Educations > Menu item [CFD trading guide]"},{"name":"story","value":"TC_11.01.03.01_03 | Testing button [Trade] in Most traded block"},{"name":"tag","value":"us_11_01_03"},{"name":"parentSuite","value":"tests.US_11_Education.US_11-01-03_cfd_trading_guide"},{"name":"suite","value":"us_11-01-03-01_cfd_trading_guide_test"},{"name":"subSuite","value":"TestCFDTradingGuide"},{"name":"host","value":"fv-az1426-980"},{"name":"thread","value":"7812-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_11_Education.US_11-01-03_cfd_trading_guide.us_11-01-03-01_cfd_trading_guide_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'au'"},{"name":"cur_item_link","value":"'https://capital.com/es/cfd-vs-trading-acciones'"},{"name":"cur_language","value":"'es'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_role","value":"'NoReg'"},{"name":"go","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["us_11_01_03"]},"source":"ed1934d018c1eca4.json","parameterValues":["'au'","'https://capital.com/es/cfd-vs-trading-acciones'","'es'","'aqa.tomelo.an@gmail.com'","'iT9Vgqi6d$fiZ*Z'","'NoReg'","'chrome'"]}