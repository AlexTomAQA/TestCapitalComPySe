{"uid":"822dfe09b0a90382","name":"TC_11.02.06_06 with parameters: es, au, Auth","fullName":"tests.US_11_Education.US_11-02-06_Indices_trading.us_11-02-06_indices_trading_test.TestIndicesTrading#test_06_start_trading_in_content_block_button","historyId":"8d96b86cb6a6fd3d065c31b620afaa35","time":{"start":1702367656480,"stop":1702367663952,"duration":7472},"description":"\n        Check: Button [Start trading] in article\n        Language: All. License: All.\n        ","descriptionHtml":"<pre><code>    Check: Button [Start trading] in article\n    Language: All. License: All.\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=119.0.6045.199); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55d47e86a5e3 <unknown>\n#1 0x55d47e52d0b7 <unknown>\n#2 0x55d47e53e38f <unknown>\n#3 0x55d47e533cc4 <unknown>\n#4 0x55d47e533da1 <unknown>\n#5 0x55d47e531d69 <unknown>\n#6 0x55d47e5359b1 <unknown>\n#7 0x55d47e5be71f <unknown>\n#8 0x55d47e5a1ef2 <unknown>\n#9 0x55d47e5bdb3d <unknown>\n#10 0x55d47e5a1cc3 <unknown>\n#11 0x55d47e56d0e4 <unknown>\n#12 0x55d47e56e0ae <unknown>\n#13 0x55d47e830ce1 <unknown>\n#14 0x55d47e834b7e <unknown>\n#15 0x55d47e81e4b5 <unknown>\n#16 0x55d47e8357d6 <unknown>\n#17 0x55d47e801dbf <unknown>\n#18 0x55d47e858748 <unknown>\n#19 0x55d47e858917 <unknown>\n#20 0x55d47e869773 <unknown>\n#21 0x7f9a35a94ac3 <unknown>","statusTrace":"self = <us_11-02-06_indices_trading_test.TestIndicesTrading object at 0x7f5bdfb9a210>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"37341c3e9ef5d0e45b6cdaf612200c2e\")>\ncur_language = 'es', cur_country = 'au', cur_role = 'Auth'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\ncur_item_link = 'https://capital.com/es/opera-dow-jones', prob_run_tc = ''\n\n    @allure.step(\"Start test of button [Start trading] in content block\")\n    def test_06_start_trading_in_content_block_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link,\n            prob_run_tc):\n        \"\"\"\n        Check: Button [Start trading] in article\n        Language: All. License: All.\n        \"\"\"\n        test_title = (\"11.02.06\", \"Educations > Menu item [Indices Trading]\",\n                      \"06\", \"Testing button [Start trading] in Content block\")\n    \n        logger.info(f\"====== START testing {', '.join(test_title)} ======\")\n    \n        build_dynamic_arg_v2(self, d, worker_id, cur_language, cur_country, cur_role, prob_run_tc, *test_title)\n    \n        self.only_four_tests(cur_item_link)\n        self.not_for_the_sixth_test(cur_item_link)\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = ContentStartTrading(d, cur_item_link)\n        test_elements_list = test_element.arrange_v2_()\n    \n        for index, element in enumerate(test_elements_list):\n            logger.info(f\"Testing element #{index + 1}\")\n>           if not test_element.element_click_v2(element):\n\ntests/US_11_Education/US_11-02-06_Indices_trading/us_11-02-06_indices_trading_test.py:296: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/ButtonStartTradingInContent.py:202: in element_click_v2\n    self.browser.execute_script(\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:408: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f5be1f9d810>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#19 0x55d47e858917 \\\\u003Cunknown>\\\\n#20 0x55d47e869773 \\\\u003Cunknown>\\\\n#21 0x7f9a35a94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome=119.0.6045.199); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55d47e86a5e3 <unknown>\nE       #1 0x55d47e52d0b7 <unknown>\nE       #2 0x55d47e53e38f <unknown>\nE       #3 0x55d47e533cc4 <unknown>\nE       #4 0x55d47e533da1 <unknown>\nE       #5 0x55d47e531d69 <unknown>\nE       #6 0x55d47e5359b1 <unknown>\nE       #7 0x55d47e5be71f <unknown>\nE       #8 0x55d47e5a1ef2 <unknown>\nE       #9 0x55d47e5bdb3d <unknown>\nE       #10 0x55d47e5a1cc3 <unknown>\nE       #11 0x55d47e56d0e4 <unknown>\nE       #12 0x55d47e56e0ae <unknown>\nE       #13 0x55d47e830ce1 <unknown>\nE       #14 0x55d47e834b7e <unknown>\nE       #15 0x55d47e81e4b5 <unknown>\nE       #16 0x55d47e8357d6 <unknown>\nE       #17 0x55d47e801dbf <unknown>\nE       #18 0x55d47e858748 <unknown>\nE       #19 0x55d47e858917 <unknown>\nE       #20 0x55d47e869773 <unknown>\nE       #21 0x7f9a35a94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"worker_id","time":{"start":1702367465931,"stop":1702367465931,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"d","time":{"start":1702367465931,"stop":1702367466803,"duration":872},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"go","time":{"start":1702367466803,"stop":1702367466803,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1702367466803,"stop":1702367466803,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1702367466803,"stop":1702367466803,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1702367466804,"stop":1702367466804,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1702367466804,"stop":1702367466804,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1702367591697,"stop":1702367591697,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"prob_run_tc","time":{"start":1702367656480,"stop":1702367656480,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [Start trading] in article\n        Language: All. License: All.\n        ","status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=119.0.6045.199); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55d47e86a5e3 <unknown>\n#1 0x55d47e52d0b7 <unknown>\n#2 0x55d47e53e38f <unknown>\n#3 0x55d47e533cc4 <unknown>\n#4 0x55d47e533da1 <unknown>\n#5 0x55d47e531d69 <unknown>\n#6 0x55d47e5359b1 <unknown>\n#7 0x55d47e5be71f <unknown>\n#8 0x55d47e5a1ef2 <unknown>\n#9 0x55d47e5bdb3d <unknown>\n#10 0x55d47e5a1cc3 <unknown>\n#11 0x55d47e56d0e4 <unknown>\n#12 0x55d47e56e0ae <unknown>\n#13 0x55d47e830ce1 <unknown>\n#14 0x55d47e834b7e <unknown>\n#15 0x55d47e81e4b5 <unknown>\n#16 0x55d47e8357d6 <unknown>\n#17 0x55d47e801dbf <unknown>\n#18 0x55d47e858748 <unknown>\n#19 0x55d47e858917 <unknown>\n#20 0x55d47e869773 <unknown>\n#21 0x7f9a35a94ac3 <unknown>","statusTrace":"self = <us_11-02-06_indices_trading_test.TestIndicesTrading object at 0x7f5bdfb9a210>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"37341c3e9ef5d0e45b6cdaf612200c2e\")>\ncur_language = 'es', cur_country = 'au', cur_role = 'Auth'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\ncur_item_link = 'https://capital.com/es/opera-dow-jones', prob_run_tc = ''\n\n    @allure.step(\"Start test of button [Start trading] in content block\")\n    def test_06_start_trading_in_content_block_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link,\n            prob_run_tc):\n        \"\"\"\n        Check: Button [Start trading] in article\n        Language: All. License: All.\n        \"\"\"\n        test_title = (\"11.02.06\", \"Educations > Menu item [Indices Trading]\",\n                      \"06\", \"Testing button [Start trading] in Content block\")\n    \n        logger.info(f\"====== START testing {', '.join(test_title)} ======\")\n    \n        build_dynamic_arg_v2(self, d, worker_id, cur_language, cur_country, cur_role, prob_run_tc, *test_title)\n    \n        self.only_four_tests(cur_item_link)\n        self.not_for_the_sixth_test(cur_item_link)\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = ContentStartTrading(d, cur_item_link)\n        test_elements_list = test_element.arrange_v2_()\n    \n        for index, element in enumerate(test_elements_list):\n            logger.info(f\"Testing element #{index + 1}\")\n>           if not test_element.element_click_v2(element):\n\ntests/US_11_Education/US_11-02-06_Indices_trading/us_11-02-06_indices_trading_test.py:296: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/ButtonStartTradingInContent.py:202: in element_click_v2\n    self.browser.execute_script(\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:408: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f5be1f9d810>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#19 0x55d47e858917 \\\\u003Cunknown>\\\\n#20 0x55d47e869773 \\\\u003Cunknown>\\\\n#21 0x7f9a35a94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome=119.0.6045.199); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55d47e86a5e3 <unknown>\nE       #1 0x55d47e52d0b7 <unknown>\nE       #2 0x55d47e53e38f <unknown>\nE       #3 0x55d47e533cc4 <unknown>\nE       #4 0x55d47e533da1 <unknown>\nE       #5 0x55d47e531d69 <unknown>\nE       #6 0x55d47e5359b1 <unknown>\nE       #7 0x55d47e5be71f <unknown>\nE       #8 0x55d47e5a1ef2 <unknown>\nE       #9 0x55d47e5bdb3d <unknown>\nE       #10 0x55d47e5a1cc3 <unknown>\nE       #11 0x55d47e56d0e4 <unknown>\nE       #12 0x55d47e56e0ae <unknown>\nE       #13 0x55d47e830ce1 <unknown>\nE       #14 0x55d47e834b7e <unknown>\nE       #15 0x55d47e81e4b5 <unknown>\nE       #16 0x55d47e8357d6 <unknown>\nE       #17 0x55d47e801dbf <unknown>\nE       #18 0x55d47e858748 <unknown>\nE       #19 0x55d47e858917 <unknown>\nE       #20 0x55d47e869773 <unknown>\nE       #21 0x7f9a35a94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Start test of button [Start trading] in content block","time":{"start":1702367656481,"stop":1702367663951,"duration":7470},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=119.0.6045.199); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55d47e86a5e3 <unknown>\n#1 0x55d47e52d0b7 <unknown>\n#2 0x55d47e53e38f <unknown>\n#3 0x55d47e533cc4 <unknown>\n#4 0x55d47e533da1 <unknown>\n#5 0x55d47e531d69 <unknown>\n#6 0x55d47e5359b1 <unknown>\n#7 0x55d47e5be71f <unknown>\n#8 0x55d47e5a1ef2 <unknown>\n#9 0x55d47e5bdb3d <unknown>\n#10 0x55d47e5a1cc3 <unknown>\n#11 0x55d47e56d0e4 <unknown>\n#12 0x55d47e56e0ae <unknown>\n#13 0x55d47e830ce1 <unknown>\n#14 0x55d47e834b7e <unknown>\n#15 0x55d47e81e4b5 <unknown>\n#16 0x55d47e8357d6 <unknown>\n#17 0x55d47e801dbf <unknown>\n#18 0x55d47e858748 <unknown>\n#19 0x55d47e858917 <unknown>\n#20 0x55d47e869773 <unknown>\n#21 0x7f9a35a94ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_11_Education/US_11-02-06_Indices_trading/us_11-02-06_indices_trading_test.py\", line 296, in test_06_start_trading_in_content_block_button\n    if not test_element.element_click_v2(element):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/ButtonStartTradingInContent.py\", line 202, in element_click_v2\n    self.browser.execute_script(\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 408, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Set preconditions","time":{"start":1702367656526,"stop":1702367660975,"duration":4449},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"37341c3e9ef5d0e45b6cdaf612200c2e\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'es'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Works ARRANGE START_TRADING_IN_ARTICLE (generator) - ver 2","time":{"start":1702367660976,"stop":1702367660976,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Click button START_TRADING_IN_ARTICLE - ver 2","time":{"start":1702367660987,"stop":1702367661497,"duration":510},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"web_element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"37341c3e9ef5d0e45b6cdaf612200c2e\", element=\"0C132BFDE09283C6B5B8D8B6E7771E4F_element_1387\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Checking that \"Trading platform\" page opened - ver 4","time":{"start":1702367661497,"stop":1702367663906,"duration":2409},"status":"passed","steps":[{"name":"Checking that the trading platform page has opened - ver 4","time":{"start":1702367661497,"stop":1702367663906,"duration":2409},"status":"passed","steps":[{"name":"Check that the page has the expected title - ver 2","time":{"start":1702367662011,"stop":1702367662014,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"title","value":"'Trading Platform | Capital.com'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check if the Logo element is present on the page","time":{"start":1702367662014,"stop":1702367663178,"duration":1164},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check if the trading platform opened in LIVE mode","time":{"start":1702367663178,"stop":1702367663190,"duration":12},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"timeout","value":"20"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"37341c3e9ef5d0e45b6cdaf612200c2e\")>"},{"name":"cur_link","value":"'https://capital.com/es/opera-dow-jones'"},{"name":"tpd","value":"False"},{"name":"tpi","value":"False"},{"name":"trade_instrument","value":"''"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"37341c3e9ef5d0e45b6cdaf612200c2e\")>"},{"name":"cur_link","value":"'https://capital.com/es/opera-dow-jones'"},{"name":"tpd","value":"False"},{"name":"tpi","value":"False"},{"name":"trade_instrument","value":"''"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Click button START_TRADING_IN_ARTICLE - ver 2","time":{"start":1702367663906,"stop":1702367663950,"duration":44},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=119.0.6045.199); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55d47e86a5e3 <unknown>\n#1 0x55d47e52d0b7 <unknown>\n#2 0x55d47e53e38f <unknown>\n#3 0x55d47e533cc4 <unknown>\n#4 0x55d47e533da1 <unknown>\n#5 0x55d47e531d69 <unknown>\n#6 0x55d47e5359b1 <unknown>\n#7 0x55d47e5be71f <unknown>\n#8 0x55d47e5a1ef2 <unknown>\n#9 0x55d47e5bdb3d <unknown>\n#10 0x55d47e5a1cc3 <unknown>\n#11 0x55d47e56d0e4 <unknown>\n#12 0x55d47e56e0ae <unknown>\n#13 0x55d47e830ce1 <unknown>\n#14 0x55d47e834b7e <unknown>\n#15 0x55d47e81e4b5 <unknown>\n#16 0x55d47e8357d6 <unknown>\n#17 0x55d47e801dbf <unknown>\n#18 0x55d47e858748 <unknown>\n#19 0x55d47e858917 <unknown>\n#20 0x55d47e869773 <unknown>\n#21 0x7f9a35a94ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/ButtonStartTradingInContent.py\", line 202, in element_click_v2\n    self.browser.execute_script(\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 408, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"web_element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"37341c3e9ef5d0e45b6cdaf612200c2e\", element=\"0C132BFDE09283C6B5B8D8B6E7771E4F_element_1388\")>"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"37341c3e9ef5d0e45b6cdaf612200c2e\")>"},{"name":"cur_language","value":"'es'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_item_link","value":"'https://capital.com/es/opera-dow-jones'"},{"name":"prob_run_tc","value":"''"}],"shouldDisplayMessage":false,"stepsCount":9,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9812d370e5447e4f","name":"Screenshot","source":"9812d370e5447e4f.png","type":"image/png","size":126469},{"uid":"7be949215d91eed7","name":"stdout","source":"7be949215d91eed7.txt","type":"text/plain","size":2291}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":10,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"go::0","time":{"start":1702368094140,"stop":1702368094297,"duration":157},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Language: es / US_11.02.06 | Educations > Menu item [Indices Trading]"},{"name":"feature","value":"Country: au / Role: Auth / TS_11.02.06 | Educations > Menu item [Indices Trading]"},{"name":"story","value":"TC_11.02.06_06 | Testing button [Start trading] in Content block"},{"name":"tag","value":"us_11_02_06"},{"name":"parentSuite","value":"tests.US_11_Education.US_11-02-06_Indices_trading"},{"name":"suite","value":"us_11-02-06_indices_trading_test"},{"name":"subSuite","value":"TestIndicesTrading"},{"name":"host","value":"fv-az1426-980"},{"name":"thread","value":"37573-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_11_Education.US_11-02-06_Indices_trading.us_11-02-06_indices_trading_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'au'"},{"name":"cur_item_link","value":"'https://capital.com/es/opera-dow-jones'"},{"name":"cur_language","value":"'es'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_role","value":"'Auth'"},{"name":"go","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["us_11_02_06"]},"source":"822dfe09b0a90382.json","parameterValues":["'au'","'https://capital.com/es/opera-dow-jones'","'es'","'aqa.tomelo.an@gmail.com'","'iT9Vgqi6d$fiZ*Z'","'Auth'","'chrome'"]}