{"uid":"e18d36bd98323c15","name":"TC_11.01.03.01_03 | Testing button [Trade] in Most traded block. Bid:11.01.03.01_03-es.de.Auth","fullName":"tests.US_11_Education.US_11-01-03_cfd_trading_guide.us_11-01-03!01_cfd_trading_guide_test.TestCFDTradingGuide#test_03_most_traded_trade_button","historyId":"df40dedc794eb4d9d509aa3e0ed32d88","time":{"start":1712172393056,"stop":1712172400253,"duration":7197},"description":"\n        Check: Button [Trade] in Most traded block\n        Language: All. License: All.\n        ","descriptionHtml":"<pre><code>    Check: Button [Trade] in Most traded block\n    Language: All. License: All.\n</code></pre>\n","status":"broken","statusMessage":"AttributeError: 'list' object has no attribute 'text'","statusTrace":"self = <us_11-01-03!01_cfd_trading_guide_test.TestCFDTradingGuide object at 0x7f03cd450f20>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"dbba28e5039fd3011fe298c8daf79003\")>\ncur_language = 'es', cur_country = 'de', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_item_link = 'https://capital.com/es/explicacion-del-trading-de-cfds'\n\n    @allure.step(f\"{datetime.now()}   Start test of buttons [Trade] in Most traded block\")\n    @pytest.mark.test_03\n    def test_03_most_traded_trade_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link):\n        \"\"\"\n        Check: Button [Trade] in Most traded block\n        Language: All. License: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"11.01.03\", \"Education > Menu item [CFD trading guide]\",\n            \".01_03\", \"Testing button [Trade] in Most traded block\")\n    \n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n        Common().check_language_in_list_and_skip_if_not_present(\n            cur_language, [\"\", \"de\", \"es\", \"fr\", \"nl\", \"pl\", \"ro\", \"ru\", \"zh\"])\n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            # d, cur_item_link, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = ButtonTradeOnWidgetMostTraded(d, cur_item_link, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link)\n\ntests/US_11_Education/US_11-01-03_cfd_trading_guide/us_11-01-03!01_cfd_trading_guide_test.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/MostTradedWidgetTradeButton.py:50: in full_test_with_tpi\n    test_element.assert_trading_platform_v4(d, cur_item_link, False, True, trade_instrument)\npages/Elements/AssertClass.py:164: in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\npages/Capital/Trading_platform/trading_platform.py:131: in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Capital.Trading_platform.trading_platform.TradingPlatform object at 0x7f03cdbd5a60>\ntest_link = 'https://capital.com/es/explicacion-del-trading-de-cfds'\ntrade_instrument = 'Gold Spot'\n\n    def should_be_corresponding_trading_instrument(self, test_link, trade_instrument):\n        \"\"\"\n        Check Trading platform is opened for corresponding trade instrument\n        \"\"\"\n        allure.step(f\"{datetime.now()}   Check if Trading platform open for corresponding trade instrument\")\n    \n        # cur_url = self.driver.current_url\n        print(f\"\\n{datetime.now()}   trade_instrument = '{trade_instrument}'\")\n        # trade_instrument_name = trade_instrument.split(\" \")[0]\n        # print(f\"{datetime.now()}   => trade_instrument_name = '{trade_instrument_name}'\")\n    \n        # 4.1. проверяем, что открыта трейдинговая платформа на вкладке [Charts]\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.1. Check that Trading Platform is opened in Chart mode\")\n        menu_chart = self.elements_are_present(*ChartingLocators.MENU_CHART)\n        if len(menu_chart) == 0:\n            print(f\"{datetime.now()}   => Trading Platform opened, but not Chart mode\")\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '14', self.link)\n            msg = \"Bug # 14. Trading platform opened, but not Chart mode\"\n            Common().assert_true_false(False, msg)\n        print(f\"{datetime.now()}   => Trading Platform opened in Chart mode\")\n    \n        # 4.2. определяем, какие вкладки открыты и избегаем ошибки пустого списка\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.2. Check that Top Charts List of Trading Platform not empty =>\")\n        top_chart_trade_list = self.elements_are_located(TradingInstruments.LIST_TRADE_INSTRUMENTS, 5)\n        if len(top_chart_trade_list) == 0:\n            print(f\"{datetime.now()}   => Trading Platform opened in Chart mode, but Top Charts List is empty\")\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '15', self.link)\n            msg = (\"Bug # 15. Trading platform was opened, \"\n                   \"but does no contain any trade instrument in the Top Charts List\")\n            Common().assert_true_false(False, msg)\n            # Common().browser_back_to_link_and_test_fail(self.driver, test_link, msg)\n    \n        # 4.3. проверяем, открыты ли детали выбранного торгового инструмента\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.3. Check that opened trade instrument info page =>\")\n        open_ticket = self.driver.find_elements(*TradingInstruments.OPEN_TICKET_TRADE_INSTRUMENTS)\n        if len(open_ticket) == 0:\n            msg = (\"Trading platform was opened, \"\n                   \"but does not contain any trading info\")\n            print(f\"{datetime.now()}   => {msg}\")\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '16', self.link)\n            Common().pytest_fail(f\"Bug # 16. {msg}\")\n    \n        # 4.4. проверяем, открыты ли детали выбранного торгового инструмента\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.4. Check that opened Info page of selected '{trade_instrument}' trade instrument =>\")\n        print(f\"{datetime.now()}   Trading instrument - '{trade_instrument}'\")\n>       print(f\"{datetime.now()}   Title opened trading instrument info page - '{open_ticket.text}'\")\nE       AttributeError: 'list' object has no attribute 'text'\n\npages/Capital/Trading_platform/trading_platform.py:338: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1712172362706,"stop":1712172363111,"duration":405},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1712172363111,"stop":1712172363112,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1712172363112,"stop":1712172363112,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1712172363112,"stop":1712172363112,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1712172363112,"stop":1712172363112,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1712172363112,"stop":1712172363112,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1712172363112,"stop":1712172363112,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [Trade] in Most traded block\n        Language: All. License: All.\n        ","status":"broken","statusMessage":"AttributeError: 'list' object has no attribute 'text'","statusTrace":"self = <us_11-01-03!01_cfd_trading_guide_test.TestCFDTradingGuide object at 0x7f03cd450f20>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"dbba28e5039fd3011fe298c8daf79003\")>\ncur_language = 'es', cur_country = 'de', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_item_link = 'https://capital.com/es/explicacion-del-trading-de-cfds'\n\n    @allure.step(f\"{datetime.now()}   Start test of buttons [Trade] in Most traded block\")\n    @pytest.mark.test_03\n    def test_03_most_traded_trade_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link):\n        \"\"\"\n        Check: Button [Trade] in Most traded block\n        Language: All. License: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"11.01.03\", \"Education > Menu item [CFD trading guide]\",\n            \".01_03\", \"Testing button [Trade] in Most traded block\")\n    \n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n        Common().check_language_in_list_and_skip_if_not_present(\n            cur_language, [\"\", \"de\", \"es\", \"fr\", \"nl\", \"pl\", \"ro\", \"ru\", \"zh\"])\n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            # d, cur_item_link, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = ButtonTradeOnWidgetMostTraded(d, cur_item_link, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link)\n\ntests/US_11_Education/US_11-01-03_cfd_trading_guide/us_11-01-03!01_cfd_trading_guide_test.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/MostTradedWidgetTradeButton.py:50: in full_test_with_tpi\n    test_element.assert_trading_platform_v4(d, cur_item_link, False, True, trade_instrument)\npages/Elements/AssertClass.py:164: in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\npages/Capital/Trading_platform/trading_platform.py:131: in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Capital.Trading_platform.trading_platform.TradingPlatform object at 0x7f03cdbd5a60>\ntest_link = 'https://capital.com/es/explicacion-del-trading-de-cfds'\ntrade_instrument = 'Gold Spot'\n\n    def should_be_corresponding_trading_instrument(self, test_link, trade_instrument):\n        \"\"\"\n        Check Trading platform is opened for corresponding trade instrument\n        \"\"\"\n        allure.step(f\"{datetime.now()}   Check if Trading platform open for corresponding trade instrument\")\n    \n        # cur_url = self.driver.current_url\n        print(f\"\\n{datetime.now()}   trade_instrument = '{trade_instrument}'\")\n        # trade_instrument_name = trade_instrument.split(\" \")[0]\n        # print(f\"{datetime.now()}   => trade_instrument_name = '{trade_instrument_name}'\")\n    \n        # 4.1. проверяем, что открыта трейдинговая платформа на вкладке [Charts]\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.1. Check that Trading Platform is opened in Chart mode\")\n        menu_chart = self.elements_are_present(*ChartingLocators.MENU_CHART)\n        if len(menu_chart) == 0:\n            print(f\"{datetime.now()}   => Trading Platform opened, but not Chart mode\")\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '14', self.link)\n            msg = \"Bug # 14. Trading platform opened, but not Chart mode\"\n            Common().assert_true_false(False, msg)\n        print(f\"{datetime.now()}   => Trading Platform opened in Chart mode\")\n    \n        # 4.2. определяем, какие вкладки открыты и избегаем ошибки пустого списка\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.2. Check that Top Charts List of Trading Platform not empty =>\")\n        top_chart_trade_list = self.elements_are_located(TradingInstruments.LIST_TRADE_INSTRUMENTS, 5)\n        if len(top_chart_trade_list) == 0:\n            print(f\"{datetime.now()}   => Trading Platform opened in Chart mode, but Top Charts List is empty\")\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '15', self.link)\n            msg = (\"Bug # 15. Trading platform was opened, \"\n                   \"but does no contain any trade instrument in the Top Charts List\")\n            Common().assert_true_false(False, msg)\n            # Common().browser_back_to_link_and_test_fail(self.driver, test_link, msg)\n    \n        # 4.3. проверяем, открыты ли детали выбранного торгового инструмента\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.3. Check that opened trade instrument info page =>\")\n        open_ticket = self.driver.find_elements(*TradingInstruments.OPEN_TICKET_TRADE_INSTRUMENTS)\n        if len(open_ticket) == 0:\n            msg = (\"Trading platform was opened, \"\n                   \"but does not contain any trading info\")\n            print(f\"{datetime.now()}   => {msg}\")\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.driver, self.bid, '16', self.link)\n            Common().pytest_fail(f\"Bug # 16. {msg}\")\n    \n        # 4.4. проверяем, открыты ли детали выбранного торгового инструмента\n        print(f\"\\n{datetime.now()}   \"\n              f\"4.4. Check that opened Info page of selected '{trade_instrument}' trade instrument =>\")\n        print(f\"{datetime.now()}   Trading instrument - '{trade_instrument}'\")\n>       print(f\"{datetime.now()}   Title opened trading instrument info page - '{open_ticket.text}'\")\nE       AttributeError: 'list' object has no attribute 'text'\n\npages/Capital/Trading_platform/trading_platform.py:338: AttributeError","steps":[{"name":"2024-04-03 19:26:02.668534   Start test of buttons [Trade] in Most traded block","time":{"start":1712172393056,"stop":1712172400251,"duration":7195},"status":"broken","statusMessage":"AttributeError: 'list' object has no attribute 'text'\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_11_Education/US_11-01-03_cfd_trading_guide/us_11-01-03!01_cfd_trading_guide_test.py\", line 124, in test_03_most_traded_trade_button\n    test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/MostTradedWidgetTradeButton.py\", line 50, in full_test_with_tpi\n    test_element.assert_trading_platform_v4(d, cur_item_link, False, True, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 164, in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 131, in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 338, in should_be_corresponding_trading_instrument\n    print(f\"{datetime.now()}   Title opened trading instrument info page - '{open_ticket.text}'\")\n                                                                             ^^^^^^^^^^^^^^^^\n","steps":[{"name":"Preconditions","time":{"start":1712172393058,"stop":1712172394307,"duration":1249},"status":"passed","steps":[{"name":"2024-04-03 19:26:02.665516   Start Checking Captcha","time":{"start":1712172393272,"stop":1712172394304,"duration":1032},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"dbba28e5039fd3011fe298c8daf79003\")>"},{"name":"host","value":"'https://capital.com/'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'es'"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-04-03 19:26:02.667711   Start Full test Trade button on Most Traded widget","time":{"start":1712172394307,"stop":1712172400251,"duration":5944},"status":"broken","statusMessage":"AttributeError: 'list' object has no attribute 'text'\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/MostTradedWidgetTradeButton.py\", line 50, in full_test_with_tpi\n    test_element.assert_trading_platform_v4(d, cur_item_link, False, True, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 164, in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 131, in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 338, in should_be_corresponding_trading_instrument\n    print(f\"{datetime.now()}   Title opened trading instrument info page - '{open_ticket.text}'\")\n                                                                             ^^^^^^^^^^^^^^^^\n","steps":[{"name":"Click Trade button on Most traded widget","time":{"start":1712172394324,"stop":1712172397845,"duration":3521},"status":"passed","steps":[{"name":"2024-04-03 19:26:02.508006   Check that form [Sign up] opened","time":{"start":1712172394324,"stop":1712172395857,"duration":1533},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"timeout","value":"1"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"random_index","value":"0"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Checking that \"Trading platform\" page opened - ver 4","time":{"start":1712172397845,"stop":1712172400250,"duration":2405},"status":"broken","statusMessage":"AttributeError: 'list' object has no attribute 'text'\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 164, in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 131, in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 338, in should_be_corresponding_trading_instrument\n    print(f\"{datetime.now()}   Title opened trading instrument info page - '{open_ticket.text}'\")\n                                                                             ^^^^^^^^^^^^^^^^\n","steps":[{"name":"Checking that the trading platform page has opened - ver 4","time":{"start":1712172397845,"stop":1712172400249,"duration":2404},"status":"broken","statusMessage":"AttributeError: 'list' object has no attribute 'text'\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 131, in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(test_link, trade_instrument)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 338, in should_be_corresponding_trading_instrument\n    print(f\"{datetime.now()}   Title opened trading instrument info page - '{open_ticket.text}'\")\n                                                                             ^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"dbba28e5039fd3011fe298c8daf79003\")>"},{"name":"test_link","value":"'https://capital.com/es/explicacion-del-trading-de-cfds'"},{"name":"tpd","value":"False"},{"name":"tpi","value":"True"},{"name":"trade_instrument","value":"'Gold Spot'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"dbba28e5039fd3011fe298c8daf79003\")>"},{"name":"cur_link","value":"'https://capital.com/es/explicacion-del-trading-de-cfds'"},{"name":"tpd","value":"False"},{"name":"tpi","value":"True"},{"name":"trade_instrument","value":"'Gold Spot'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"dbba28e5039fd3011fe298c8daf79003\")>"},{"name":"cur_language","value":"'es'"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_item_link","value":"'https://capital.com/es/explicacion-del-trading-de-cfds'"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"dbba28e5039fd3011fe298c8daf79003\")>"},{"name":"cur_language","value":"'es'"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_item_link","value":"'https://capital.com/es/explicacion-del-trading-de-cfds'"}],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"f5981502d87d963","name":"Screenshot","source":"f5981502d87d963.png","type":"image/png","size":75986},{"uid":"e3873c72558dfec5","name":"log","source":"e3873c72558dfec5.txt","type":"text/plain","size":1408},{"uid":"dedf4171cfe1017f","name":"stdout","source":"dedf4171cfe1017f.txt","type":"text/plain","size":5937}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":8,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1712172602439,"stop":1712172602569,"duration":130},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_11.01.03 | Education > Menu item [CFD trading guide]"},{"name":"feature","value":"Language: es"},{"name":"story","value":"Country: de / Role: Auth"},{"name":"tag","value":"test_03"},{"name":"tag","value":"us_11_01_03_01"},{"name":"parentSuite","value":"tests.US_11_Education.US_11-01-03_cfd_trading_guide"},{"name":"suite","value":"us_11-01-03!01_cfd_trading_guide_test"},{"name":"subSuite","value":"TestCFDTradingGuide"},{"name":"host","value":"fv-az1530-585"},{"name":"thread","value":"25120-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_11_Education.US_11-01-03_cfd_trading_guide.us_11-01-03!01_cfd_trading_guide_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'de'"},{"name":"cur_item_link","value":"'https://capital.com/es/explicacion-del-trading-de-cfds'"},{"name":"cur_language","value":"'es'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["test_03","us_11_01_03_01"]},"source":"e18d36bd98323c15.json","parameterValues":["'de'","'https://capital.com/es/explicacion-del-trading-de-cfds'","'es'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'Auth'","'Chrome'"]}