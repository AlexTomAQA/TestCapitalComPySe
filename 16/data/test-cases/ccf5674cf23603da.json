{"uid":"ccf5674cf23603da","name":"TC_11.01.07.01_03 with parameters: en, de, Auth","fullName":"tests.US_11_Education.US_11-01-07_Glossary.US_11-01-07-01_Glossary_of_trading_terms_test.TestGlossaryItems#test_03","historyId":"b56bc05b5607901ed87dc973582413d3","time":{"start":1702402973145,"stop":1702402988556,"duration":15411},"description":"\n        Check: Button [Try Free Demo] under video banner [Capital.com]\n        Language: All. License: All.\n        ","descriptionHtml":"<pre><code>    Check: Button [Try Free Demo] under video banner [Capital.com]\n    Language: All. License: All.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Loaded page with https://capital.com/trading/platform/ url, but expected https://capital.com/trading/platform/?mode=demo","statusTrace":"self = <US_11-01-07-01_Glossary_of_trading_terms_test.TestGlossaryItems object at 0x7fad74d1c390>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"54e8142c7872868d58c33ba947351566\")>\ncur_language = '', cur_country = 'de', cur_role = 'Auth'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\ncur_item_link = 'https://capital.com/investment-policy-statement-definition'\n\n    @allure.step(\"Start test of button [Try Free Demo] under video banner [Capital.com]\")\n    def test_03(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password,\n            cur_item_link):\n        \"\"\"\n        Check: Button [Try Free Demo] under video banner [Capital.com]\n        Language: All. License: All.\n        \"\"\"\n        print(f\"\\n{datetime.now()}   Работает obj {self} с именем TC_11.01.07.01_03\")\n        build_dynamic_arg_v3(self, d, worker_id, cur_language, cur_country, cur_role,\n                             \"11.01.07\",\n                             \"Educations > Menu item [Glossary of trading terms]\",\n                             \".01_03\",\n                             \"Testing button [Try Free Demo] under video banner [Capital.com]\")\n    \n        if cur_language not in [\"\"]:\n            pytest.skip(f\"This test-case is not for {cur_language} language\")\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        button_name = \"try_free_demo\"\n        test_element = ButtonsUnderVideoBanner(d)\n        test_element.arrange_(cur_item_link, button_name)\n    \n        test_element.click(button_name)\n    \n        test_element = AssertClass(d, cur_item_link)\n        match cur_role:\n            case \"NoReg\" | \"Reg/NoAuth\":\n                test_element.assert_signup(d, cur_language, cur_item_link)\n            case \"Auth\":\n>               test_element.assert_trading_platform_v2(d, cur_item_link, True)\n\ntests/US_11_Education/US_11-01-07_Glossary/US_11-01-07-01_Glossary_of_trading_terms_test.py:161: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/AssertClass.py:84: in assert_trading_platform_v2\n    self.page_trading.should_be_trading_platform_page_v2(d, cur_link, demo)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Capital.Trading_platform.trading_platform.TradingPlatform object at 0x7fad74a4bf50>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"54e8142c7872868d58c33ba947351566\")>\ncur_link = 'https://capital.com/investment-policy-statement-definition'\ndemo = True\n\n    @allure.step(\"Checking that the trading platform page has opened - ver 2\")\n    def should_be_trading_platform_page_v2(self, d, cur_link, demo=False):\n        \"\"\"Check if the trading platform page is open\"\"\"\n        print(f\"{datetime.now()}   Checking that the trading platform page has opened =>\")\n        platform_url = data[\"PLATFORM_DEMO_URL\"] if demo else data[\"PLATFORM_URL/\"]\n        # print(platform_url)\n        # print(self.wait_for_change_url(platform_url, 120))\n        if self.wait_for_target_url(platform_url, 10):\n            print(f\"{datetime.now()}   => Opened page with {self.browser.current_url} url. Expected: {platform_url} \")\n            self.should_be_page_title_v2(data[\"PAGE_TITLE\"])\n            self.should_be_platform_logo()\n            self.should_be_corresponding_trading_instrument()\n            self.open_page()\n            assert True, 'Trading platform with title \"Trading Platform | Capital.com\" opened'\n        else:\n            print(f\"{datetime.now()}   => Loaded page {self.browser.current_url} with not {platform_url} url\")\n            cur_url = self.browser.current_url\n            self.open_page()\n>           assert False, f\"Loaded page with {cur_url} url, but expected {platform_url}\"\nE           AssertionError: Loaded page with https://capital.com/trading/platform/ url, but expected https://capital.com/trading/platform/?mode=demo\n\npages/Capital/Trading_platform/trading_platform.py:59: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1702402871485,"stop":1702402872438,"duration":953},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1702402871485,"stop":1702402871485,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"go","time":{"start":1702402872438,"stop":1702402872439,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1702402872439,"stop":1702402872439,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1702402872439,"stop":1702402872440,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1702402872439,"stop":1702402872439,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1702402872439,"stop":1702402872439,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1702402933980,"stop":1702402933980,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [Try Free Demo] under video banner [Capital.com]\n        Language: All. License: All.\n        ","status":"failed","statusMessage":"AssertionError: Loaded page with https://capital.com/trading/platform/ url, but expected https://capital.com/trading/platform/?mode=demo","statusTrace":"self = <US_11-01-07-01_Glossary_of_trading_terms_test.TestGlossaryItems object at 0x7fad74d1c390>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"54e8142c7872868d58c33ba947351566\")>\ncur_language = '', cur_country = 'de', cur_role = 'Auth'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\ncur_item_link = 'https://capital.com/investment-policy-statement-definition'\n\n    @allure.step(\"Start test of button [Try Free Demo] under video banner [Capital.com]\")\n    def test_03(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password,\n            cur_item_link):\n        \"\"\"\n        Check: Button [Try Free Demo] under video banner [Capital.com]\n        Language: All. License: All.\n        \"\"\"\n        print(f\"\\n{datetime.now()}   Работает obj {self} с именем TC_11.01.07.01_03\")\n        build_dynamic_arg_v3(self, d, worker_id, cur_language, cur_country, cur_role,\n                             \"11.01.07\",\n                             \"Educations > Menu item [Glossary of trading terms]\",\n                             \".01_03\",\n                             \"Testing button [Try Free Demo] under video banner [Capital.com]\")\n    \n        if cur_language not in [\"\"]:\n            pytest.skip(f\"This test-case is not for {cur_language} language\")\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        button_name = \"try_free_demo\"\n        test_element = ButtonsUnderVideoBanner(d)\n        test_element.arrange_(cur_item_link, button_name)\n    \n        test_element.click(button_name)\n    \n        test_element = AssertClass(d, cur_item_link)\n        match cur_role:\n            case \"NoReg\" | \"Reg/NoAuth\":\n                test_element.assert_signup(d, cur_language, cur_item_link)\n            case \"Auth\":\n>               test_element.assert_trading_platform_v2(d, cur_item_link, True)\n\ntests/US_11_Education/US_11-01-07_Glossary/US_11-01-07-01_Glossary_of_trading_terms_test.py:161: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/AssertClass.py:84: in assert_trading_platform_v2\n    self.page_trading.should_be_trading_platform_page_v2(d, cur_link, demo)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Capital.Trading_platform.trading_platform.TradingPlatform object at 0x7fad74a4bf50>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"54e8142c7872868d58c33ba947351566\")>\ncur_link = 'https://capital.com/investment-policy-statement-definition'\ndemo = True\n\n    @allure.step(\"Checking that the trading platform page has opened - ver 2\")\n    def should_be_trading_platform_page_v2(self, d, cur_link, demo=False):\n        \"\"\"Check if the trading platform page is open\"\"\"\n        print(f\"{datetime.now()}   Checking that the trading platform page has opened =>\")\n        platform_url = data[\"PLATFORM_DEMO_URL\"] if demo else data[\"PLATFORM_URL/\"]\n        # print(platform_url)\n        # print(self.wait_for_change_url(platform_url, 120))\n        if self.wait_for_target_url(platform_url, 10):\n            print(f\"{datetime.now()}   => Opened page with {self.browser.current_url} url. Expected: {platform_url} \")\n            self.should_be_page_title_v2(data[\"PAGE_TITLE\"])\n            self.should_be_platform_logo()\n            self.should_be_corresponding_trading_instrument()\n            self.open_page()\n            assert True, 'Trading platform with title \"Trading Platform | Capital.com\" opened'\n        else:\n            print(f\"{datetime.now()}   => Loaded page {self.browser.current_url} with not {platform_url} url\")\n            cur_url = self.browser.current_url\n            self.open_page()\n>           assert False, f\"Loaded page with {cur_url} url, but expected {platform_url}\"\nE           AssertionError: Loaded page with https://capital.com/trading/platform/ url, but expected https://capital.com/trading/platform/?mode=demo\n\npages/Capital/Trading_platform/trading_platform.py:59: AssertionError","steps":[{"name":"Start test of button [Try Free Demo] under video banner [Capital.com]","time":{"start":1702402973145,"stop":1702402988556,"duration":15411},"status":"failed","statusMessage":"AssertionError: Loaded page with https://capital.com/trading/platform/ url, but expected https://capital.com/trading/platform/?mode=demo\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_11_Education/US_11-01-07_Glossary/US_11-01-07-01_Glossary_of_trading_terms_test.py\", line 161, in test_03\n    test_element.assert_trading_platform_v2(d, cur_item_link, True)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 84, in assert_trading_platform_v2\n    self.page_trading.should_be_trading_platform_page_v2(d, cur_link, demo)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 59, in should_be_trading_platform_page_v2\n    assert False, f\"Loaded page with {cur_url} url, but expected {platform_url}\"\n","steps":[{"name":"Set preconditions","time":{"start":1702402973148,"stop":1702402977502,"duration":4354},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"54e8142c7872868d58c33ba947351566\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Click on button under video banner","time":{"start":1702402977514,"stop":1702402977804,"duration":290},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"button_name","value":"'try_free_demo'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Checking that \"Trading platform\" page opened - ver 2","time":{"start":1702402977804,"stop":1702402988555,"duration":10751},"status":"failed","statusMessage":"AssertionError: Loaded page with https://capital.com/trading/platform/ url, but expected https://capital.com/trading/platform/?mode=demo\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 84, in assert_trading_platform_v2\n    self.page_trading.should_be_trading_platform_page_v2(d, cur_link, demo)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 59, in should_be_trading_platform_page_v2\n    assert False, f\"Loaded page with {cur_url} url, but expected {platform_url}\"\n","steps":[{"name":"Checking that the trading platform page has opened - ver 2","time":{"start":1702402977804,"stop":1702402988555,"duration":10751},"status":"failed","statusMessage":"AssertionError: Loaded page with https://capital.com/trading/platform/ url, but expected https://capital.com/trading/platform/?mode=demo\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 59, in should_be_trading_platform_page_v2\n    assert False, f\"Loaded page with {cur_url} url, but expected {platform_url}\"\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"54e8142c7872868d58c33ba947351566\")>"},{"name":"cur_link","value":"'https://capital.com/investment-policy-statement-definition'"},{"name":"demo","value":"True"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"54e8142c7872868d58c33ba947351566\")>"},{"name":"cur_link","value":"'https://capital.com/investment-policy-statement-definition'"},{"name":"demo","value":"True"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"54e8142c7872868d58c33ba947351566\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_item_link","value":"'https://capital.com/investment-policy-statement-definition'"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"37d618eef2d800c2","name":"Screenshot","source":"37d618eef2d800c2.png","type":"image/png","size":137439},{"uid":"818963478b76caf2","name":"log","source":"818963478b76caf2.txt","type":"text/plain","size":781},{"uid":"577bba9b94c03a69","name":"stdout","source":"577bba9b94c03a69.txt","type":"text/plain","size":1732}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"go::0","time":{"start":1702403122394,"stop":1702403122553,"duration":159},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Language: en / US_11.01.07 | Educations > Menu item [Glossary of trading terms]"},{"name":"feature","value":"Country: de / Role: Auth / TS_11.01.07 | Educations > Menu item [Glossary of trading terms]"},{"name":"story","value":"TC_11.01.07.01_03 | Testing button [Try Free Demo] under video banner [Capital.com]"},{"name":"tag","value":"us_11_01_07"},{"name":"parentSuite","value":"tests.US_11_Education.US_11-01-07_Glossary"},{"name":"suite","value":"US_11-01-07-01_Glossary_of_trading_terms_test"},{"name":"subSuite","value":"TestGlossaryItems"},{"name":"host","value":"fv-az914-961"},{"name":"thread","value":"20392-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_11_Education.US_11-01-07_Glossary.US_11-01-07-01_Glossary_of_trading_terms_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'de'"},{"name":"cur_item_link","value":"'https://capital.com/investment-policy-statement-definition'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_role","value":"'Auth'"},{"name":"go","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["us_11_01_07"]},"source":"ccf5674cf23603da.json","parameterValues":["'de'","'https://capital.com/investment-policy-statement-definition'","''","'aqa.tomelo.an@gmail.com'","'iT9Vgqi6d$fiZ*Z'","'Auth'","'chrome'"]}