{"uid":"a545750d1a73f952","name":"TC_11.03.01.00_02 with parameters: de, au, Reg/NoAuth","fullName":"tests.US_11_Education.US_11-03-01_trading_strategies_guide.US_11-03-01_trading_strategies_guide_test.TestTradingStrategiesGuides#test_02_main_banner_try_demo_button","historyId":"e5d9fb597e59543c8a56b1732bbe68ed","time":{"start":1702307509977,"stop":1702307518123,"duration":8146},"description":"\n        Check: Button [Try demo] on Main banner\n        Language: All. License: All.\n        ","descriptionHtml":"<pre><code>    Check: Button [Try demo] on Main banner\n    Language: All. License: All.\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"button-cleared small l_cancel\">...</button> is not clickable at point (884, 46). Other element would receive the click: <div class=\"form-container-white form-container-small form-container-columned modal\" style=\"display: flex;\">...</div>\n  (Session info: chrome=119.0.6045.199)\nStacktrace:\n#0 0x560d1d35f5e3 <unknown>\n#1 0x560d1d0220b7 <unknown>\n#2 0x560d1d077cfc <unknown>\n#3 0x560d1d07565f <unknown>\n#4 0x560d1d072be4 <unknown>\n#5 0x560d1d071934 <unknown>\n#6 0x560d1d0641a0 <unknown>\n#7 0x560d1d096ef2 <unknown>\n#8 0x560d1d063a02 <unknown>\n#9 0x560d1d0970be <unknown>\n#10 0x560d1d0b2b3d <unknown>\n#11 0x560d1d096cc3 <unknown>\n#12 0x560d1d0620e4 <unknown>\n#13 0x560d1d0630ae <unknown>\n#14 0x560d1d325ce1 <unknown>\n#15 0x560d1d329b7e <unknown>\n#16 0x560d1d3134b5 <unknown>\n#17 0x560d1d32a7d6 <unknown>\n#18 0x560d1d2f6dbf <unknown>\n#19 0x560d1d34d748 <unknown>\n#20 0x560d1d34d917 <unknown>\n#21 0x560d1d35e773 <unknown>\n#22 0x7fb3a3094ac3 <unknown>","statusTrace":"self = <US_11-03-01_trading_strategies_guide_test.TestTradingStrategiesGuides object at 0x7f51d8822b50>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e8a27e8842f2b2e602369d3a22617018\")>\ncur_language = 'de', cur_country = 'au', cur_role = 'Reg/NoAuth'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\n\n    @allure.step(\"Start test_11.03.01_02 of button [Try demo] on Main banner\")\n    def test_02_main_banner_try_demo_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Button [Try demo] on Main banner\n        Language: All. License: All.\n        \"\"\"\n        link = build_dynamic_arg_v3(self, d, worker_id, cur_language, cur_country, cur_role,\n                                    \"11.03.01\",\n                                    \"Education > Menu item [Trading Strategies Guides]\",\n                                    \".00_02\",\n                                    \"Testing button [Try demo] on Main banner\")\n    \n        if cur_language not in [\"\", \"de\", \"es\", \"it\", \"cn\", \"zh\", \"ru\"]:\n            Common().skip_test_for_language(cur_language)\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        page_menu = MenuSection(d, link)\n        page_menu.menu_education_move_focus(d, cur_language)\n        cur_page_url = page_menu.sub_menu_trading_strategies_guide_move_focus_click(d, cur_language)\n    \n        test_element = MainBannerTryDemo(d, cur_page_url)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_page_url)\n\ntests/US_11_Education/US_11-03-01_trading_strategies_guide/US_11-03-01_trading_strategies_guide_test.py:82: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/ButtonTryDemoMainBanner.py:28: in full_test_with_tpi\n    test_element.assert_login(d, cur_language, cur_item_link)\npages/Elements/AssertClass.py:52: in assert_login\n    self.page_signup_login.close_login_form()\npages/Signup_login/signup_login.py:322: in close_login_form\n    self.browser.find_element(*LoginFormLocators.BUTTON_CLOSE_ON_LOGIN_FORM).click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f51d88243d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x560d1d34d917 \\\\u003Cunknown>\\\\n#21 0x560d1d35e773 \\\\u003Cunknown>\\\\n#22 0x7fb3a3094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"button-cleared small l_cancel\">...</button> is not clickable at point (884, 46). Other element would receive the click: <div class=\"form-container-white form-container-small form-container-columned modal\" style=\"display: flex;\">...</div>\nE         (Session info: chrome=119.0.6045.199)\nE       Stacktrace:\nE       #0 0x560d1d35f5e3 <unknown>\nE       #1 0x560d1d0220b7 <unknown>\nE       #2 0x560d1d077cfc <unknown>\nE       #3 0x560d1d07565f <unknown>\nE       #4 0x560d1d072be4 <unknown>\nE       #5 0x560d1d071934 <unknown>\nE       #6 0x560d1d0641a0 <unknown>\nE       #7 0x560d1d096ef2 <unknown>\nE       #8 0x560d1d063a02 <unknown>\nE       #9 0x560d1d0970be <unknown>\nE       #10 0x560d1d0b2b3d <unknown>\nE       #11 0x560d1d096cc3 <unknown>\nE       #12 0x560d1d0620e4 <unknown>\nE       #13 0x560d1d0630ae <unknown>\nE       #14 0x560d1d325ce1 <unknown>\nE       #15 0x560d1d329b7e <unknown>\nE       #16 0x560d1d3134b5 <unknown>\nE       #17 0x560d1d32a7d6 <unknown>\nE       #18 0x560d1d2f6dbf <unknown>\nE       #19 0x560d1d34d748 <unknown>\nE       #20 0x560d1d34d917 <unknown>\nE       #21 0x560d1d35e773 <unknown>\nE       #22 0x7fb3a3094ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1702307308482,"stop":1702307309367,"duration":885},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1702307308482,"stop":1702307308482,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1702307309367,"stop":1702307309367,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1702307309367,"stop":1702307309367,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1702307309367,"stop":1702307309367,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1702307309367,"stop":1702307309367,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"go","time":{"start":1702307309367,"stop":1702307309367,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1702307464448,"stop":1702307464448,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [Try demo] on Main banner\n        Language: All. License: All.\n        ","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"button-cleared small l_cancel\">...</button> is not clickable at point (884, 46). Other element would receive the click: <div class=\"form-container-white form-container-small form-container-columned modal\" style=\"display: flex;\">...</div>\n  (Session info: chrome=119.0.6045.199)\nStacktrace:\n#0 0x560d1d35f5e3 <unknown>\n#1 0x560d1d0220b7 <unknown>\n#2 0x560d1d077cfc <unknown>\n#3 0x560d1d07565f <unknown>\n#4 0x560d1d072be4 <unknown>\n#5 0x560d1d071934 <unknown>\n#6 0x560d1d0641a0 <unknown>\n#7 0x560d1d096ef2 <unknown>\n#8 0x560d1d063a02 <unknown>\n#9 0x560d1d0970be <unknown>\n#10 0x560d1d0b2b3d <unknown>\n#11 0x560d1d096cc3 <unknown>\n#12 0x560d1d0620e4 <unknown>\n#13 0x560d1d0630ae <unknown>\n#14 0x560d1d325ce1 <unknown>\n#15 0x560d1d329b7e <unknown>\n#16 0x560d1d3134b5 <unknown>\n#17 0x560d1d32a7d6 <unknown>\n#18 0x560d1d2f6dbf <unknown>\n#19 0x560d1d34d748 <unknown>\n#20 0x560d1d34d917 <unknown>\n#21 0x560d1d35e773 <unknown>\n#22 0x7fb3a3094ac3 <unknown>","statusTrace":"self = <US_11-03-01_trading_strategies_guide_test.TestTradingStrategiesGuides object at 0x7f51d8822b50>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e8a27e8842f2b2e602369d3a22617018\")>\ncur_language = 'de', cur_country = 'au', cur_role = 'Reg/NoAuth'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\n\n    @allure.step(\"Start test_11.03.01_02 of button [Try demo] on Main banner\")\n    def test_02_main_banner_try_demo_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Button [Try demo] on Main banner\n        Language: All. License: All.\n        \"\"\"\n        link = build_dynamic_arg_v3(self, d, worker_id, cur_language, cur_country, cur_role,\n                                    \"11.03.01\",\n                                    \"Education > Menu item [Trading Strategies Guides]\",\n                                    \".00_02\",\n                                    \"Testing button [Try demo] on Main banner\")\n    \n        if cur_language not in [\"\", \"de\", \"es\", \"it\", \"cn\", \"zh\", \"ru\"]:\n            Common().skip_test_for_language(cur_language)\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        page_menu = MenuSection(d, link)\n        page_menu.menu_education_move_focus(d, cur_language)\n        cur_page_url = page_menu.sub_menu_trading_strategies_guide_move_focus_click(d, cur_language)\n    \n        test_element = MainBannerTryDemo(d, cur_page_url)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_page_url)\n\ntests/US_11_Education/US_11-03-01_trading_strategies_guide/US_11-03-01_trading_strategies_guide_test.py:82: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/ButtonTryDemoMainBanner.py:28: in full_test_with_tpi\n    test_element.assert_login(d, cur_language, cur_item_link)\npages/Elements/AssertClass.py:52: in assert_login\n    self.page_signup_login.close_login_form()\npages/Signup_login/signup_login.py:322: in close_login_form\n    self.browser.find_element(*LoginFormLocators.BUTTON_CLOSE_ON_LOGIN_FORM).click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f51d88243d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x560d1d34d917 \\\\u003Cunknown>\\\\n#21 0x560d1d35e773 \\\\u003Cunknown>\\\\n#22 0x7fb3a3094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"button-cleared small l_cancel\">...</button> is not clickable at point (884, 46). Other element would receive the click: <div class=\"form-container-white form-container-small form-container-columned modal\" style=\"display: flex;\">...</div>\nE         (Session info: chrome=119.0.6045.199)\nE       Stacktrace:\nE       #0 0x560d1d35f5e3 <unknown>\nE       #1 0x560d1d0220b7 <unknown>\nE       #2 0x560d1d077cfc <unknown>\nE       #3 0x560d1d07565f <unknown>\nE       #4 0x560d1d072be4 <unknown>\nE       #5 0x560d1d071934 <unknown>\nE       #6 0x560d1d0641a0 <unknown>\nE       #7 0x560d1d096ef2 <unknown>\nE       #8 0x560d1d063a02 <unknown>\nE       #9 0x560d1d0970be <unknown>\nE       #10 0x560d1d0b2b3d <unknown>\nE       #11 0x560d1d096cc3 <unknown>\nE       #12 0x560d1d0620e4 <unknown>\nE       #13 0x560d1d0630ae <unknown>\nE       #14 0x560d1d325ce1 <unknown>\nE       #15 0x560d1d329b7e <unknown>\nE       #16 0x560d1d3134b5 <unknown>\nE       #17 0x560d1d32a7d6 <unknown>\nE       #18 0x560d1d2f6dbf <unknown>\nE       #19 0x560d1d34d748 <unknown>\nE       #20 0x560d1d34d917 <unknown>\nE       #21 0x560d1d35e773 <unknown>\nE       #22 0x7fb3a3094ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Start test_11.03.01_02 of button [Try demo] on Main banner","time":{"start":1702307509977,"stop":1702307518122,"duration":8145},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"button-cleared small l_cancel\">...</button> is not clickable at point (884, 46). Other element would receive the click: <div class=\"form-container-white form-container-small form-container-columned modal\" style=\"display: flex;\">...</div>\n  (Session info: chrome=119.0.6045.199)\nStacktrace:\n#0 0x560d1d35f5e3 <unknown>\n#1 0x560d1d0220b7 <unknown>\n#2 0x560d1d077cfc <unknown>\n#3 0x560d1d07565f <unknown>\n#4 0x560d1d072be4 <unknown>\n#5 0x560d1d071934 <unknown>\n#6 0x560d1d0641a0 <unknown>\n#7 0x560d1d096ef2 <unknown>\n#8 0x560d1d063a02 <unknown>\n#9 0x560d1d0970be <unknown>\n#10 0x560d1d0b2b3d <unknown>\n#11 0x560d1d096cc3 <unknown>\n#12 0x560d1d0620e4 <unknown>\n#13 0x560d1d0630ae <unknown>\n#14 0x560d1d325ce1 <unknown>\n#15 0x560d1d329b7e <unknown>\n#16 0x560d1d3134b5 <unknown>\n#17 0x560d1d32a7d6 <unknown>\n#18 0x560d1d2f6dbf <unknown>\n#19 0x560d1d34d748 <unknown>\n#20 0x560d1d34d917 <unknown>\n#21 0x560d1d35e773 <unknown>\n#22 0x7fb3a3094ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_11_Education/US_11-03-01_trading_strategies_guide/US_11-03-01_trading_strategies_guide_test.py\", line 82, in test_02_main_banner_try_demo_button\n    test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_page_url)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/ButtonTryDemoMainBanner.py\", line 28, in full_test_with_tpi\n    test_element.assert_login(d, cur_language, cur_item_link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 52, in assert_login\n    self.page_signup_login.close_login_form()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Signup_login/signup_login.py\", line 322, in close_login_form\n    self.browser.find_element(*LoginFormLocators.BUTTON_CLOSE_ON_LOGIN_FORM).click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Set preconditions","time":{"start":1702307509979,"stop":1702307514226,"duration":4247},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e8a27e8842f2b2e602369d3a22617018\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'de'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'Reg/NoAuth'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2023-12-11 15:08:28.471707.   Click 'Education' menu section.","time":{"start":1702307514226,"stop":1702307516015,"duration":1789},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e8a27e8842f2b2e602369d3a22617018\")>"},{"name":"test_language","value":"'de'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2023-12-11 15:08:28.471868.   Click 'Trading Strategies Guide' hyperlink.","time":{"start":1702307516015,"stop":1702307516817,"duration":802},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e8a27e8842f2b2e602369d3a22617018\")>"},{"name":"test_language","value":"'de'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Click button [Try demo] on Main banner","time":{"start":1702307516843,"stop":1702307516906,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Checking that \"Login\" form or page opened","time":{"start":1702307516906,"stop":1702307518122,"duration":1216},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"button-cleared small l_cancel\">...</button> is not clickable at point (884, 46). Other element would receive the click: <div class=\"form-container-white form-container-small form-container-columned modal\" style=\"display: flex;\">...</div>\n  (Session info: chrome=119.0.6045.199)\nStacktrace:\n#0 0x560d1d35f5e3 <unknown>\n#1 0x560d1d0220b7 <unknown>\n#2 0x560d1d077cfc <unknown>\n#3 0x560d1d07565f <unknown>\n#4 0x560d1d072be4 <unknown>\n#5 0x560d1d071934 <unknown>\n#6 0x560d1d0641a0 <unknown>\n#7 0x560d1d096ef2 <unknown>\n#8 0x560d1d063a02 <unknown>\n#9 0x560d1d0970be <unknown>\n#10 0x560d1d0b2b3d <unknown>\n#11 0x560d1d096cc3 <unknown>\n#12 0x560d1d0620e4 <unknown>\n#13 0x560d1d0630ae <unknown>\n#14 0x560d1d325ce1 <unknown>\n#15 0x560d1d329b7e <unknown>\n#16 0x560d1d3134b5 <unknown>\n#17 0x560d1d32a7d6 <unknown>\n#18 0x560d1d2f6dbf <unknown>\n#19 0x560d1d34d748 <unknown>\n#20 0x560d1d34d917 <unknown>\n#21 0x560d1d35e773 <unknown>\n#22 0x7fb3a3094ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 52, in assert_login\n    self.page_signup_login.close_login_form()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Signup_login/signup_login.py\", line 322, in close_login_form\n    self.browser.find_element(*LoginFormLocators.BUTTON_CLOSE_ON_LOGIN_FORM).click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Check that form [Login] is opened","time":{"start":1702307516906,"stop":1702307516999,"duration":93},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Close form [Login]","time":{"start":1702307516999,"stop":1702307518121,"duration":1122},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"button-cleared small l_cancel\">...</button> is not clickable at point (884, 46). Other element would receive the click: <div class=\"form-container-white form-container-small form-container-columned modal\" style=\"display: flex;\">...</div>\n  (Session info: chrome=119.0.6045.199)\nStacktrace:\n#0 0x560d1d35f5e3 <unknown>\n#1 0x560d1d0220b7 <unknown>\n#2 0x560d1d077cfc <unknown>\n#3 0x560d1d07565f <unknown>\n#4 0x560d1d072be4 <unknown>\n#5 0x560d1d071934 <unknown>\n#6 0x560d1d0641a0 <unknown>\n#7 0x560d1d096ef2 <unknown>\n#8 0x560d1d063a02 <unknown>\n#9 0x560d1d0970be <unknown>\n#10 0x560d1d0b2b3d <unknown>\n#11 0x560d1d096cc3 <unknown>\n#12 0x560d1d0620e4 <unknown>\n#13 0x560d1d0630ae <unknown>\n#14 0x560d1d325ce1 <unknown>\n#15 0x560d1d329b7e <unknown>\n#16 0x560d1d3134b5 <unknown>\n#17 0x560d1d32a7d6 <unknown>\n#18 0x560d1d2f6dbf <unknown>\n#19 0x560d1d34d748 <unknown>\n#20 0x560d1d34d917 <unknown>\n#21 0x560d1d35e773 <unknown>\n#22 0x7fb3a3094ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Signup_login/signup_login.py\", line 322, in close_login_form\n    self.browser.find_element(*LoginFormLocators.BUTTON_CLOSE_ON_LOGIN_FORM).click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e8a27e8842f2b2e602369d3a22617018\")>"},{"name":"cur_language","value":"'de'"},{"name":"cur_link","value":"'https://capital.com/de/trading-strategien-leitfaden'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e8a27e8842f2b2e602369d3a22617018\")>"},{"name":"cur_language","value":"'de'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'Reg/NoAuth'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"}],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"6364bb2634d6f48c","name":"Screenshot","source":"6364bb2634d6f48c.png","type":"image/png","size":80025},{"uid":"e6c9f3f8c3dea209","name":"stdout","source":"e6c9f3f8c3dea209.txt","type":"text/plain","size":1918}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":8,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"go::0","time":{"start":1702307554614,"stop":1702307554759,"duration":145},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Language: de / US_11.03.01 | Education > Menu item [Trading Strategies Guides]"},{"name":"feature","value":"Country: au / Role: Reg/NoAuth / TS_11.03.01 | Education > Menu item [Trading Strategies Guides]"},{"name":"story","value":"TC_11.03.01.00_02 | Testing button [Try demo] on Main banner"},{"name":"tag","value":"us_11_03_01"},{"name":"parentSuite","value":"tests.US_11_Education.US_11-03-01_trading_strategies_guide"},{"name":"suite","value":"US_11-03-01_trading_strategies_guide_test"},{"name":"subSuite","value":"TestTradingStrategiesGuides"},{"name":"host","value":"fv-az1493-571"},{"name":"thread","value":"35134-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_11_Education.US_11-03-01_trading_strategies_guide.US_11-03-01_trading_strategies_guide_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'au'"},{"name":"cur_language","value":"'de'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_role","value":"'Reg/NoAuth'"},{"name":"go","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["us_11_03_01"]},"source":"a545750d1a73f952.json","parameterValues":["'au'","'de'","'aqa.tomelo.an@gmail.com'","'iT9Vgqi6d$fiZ*Z'","'Reg/NoAuth'","'chrome'"]}