{"uid":"a06f8ba5c0bc2f86","name":"TC_55!407 (Lang: en) | Bid:55!407-en.ae.Auth","fullName":"tests.US_55_ReTestsManual.artemdashkov.US_55-artemdashkov_ReTestsManual_test.TestManualDetected#test_407_articles_all_authors_present_on_the_daniela_hathorn_page","historyId":"0b3bc6964f13d0d36ac4931d5caaae03","time":{"start":1733959218719,"stop":1733959246223,"duration":27504},"description":"\n        Check:  Menu section [Markets] > Menu item [Market analysis] >\n                Find and click article of 'Daniela Hathorn' author >\n                Click the link 'Daniela Hathorn' >\n                Click any article on the 'Daniela Hathorn' page\n        Language: EN\n        License/Country: SCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        ","descriptionHtml":"<pre><code>    Check:  Menu section [Markets] &gt; Menu item [Market analysis] &gt;\n            Find and click article of 'Daniela Hathorn' author &gt;\n            Click the link 'Daniela Hathorn' &gt;\n            Click any article on the 'Daniela Hathorn' page\n    Language: EN\n    License/Country: SCA\n    Role: NoReg, NoAuth, Auth\n    Author: Artem Dashkov\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","statusTrace":"self = <US_55-artemdashkov_ReTestsManual_test.TestManualDetected object at 0x7f9eb78e0650>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b4f20167f3214ee1b0019bf9e21e226f\")>\ncur_language = '', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test authors of articles on the 'Daniela Hathorn' page\")\n    @pytest.mark.parametrize('cur_language', [\"\"])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_407\n    def test_407_articles_all_authors_present_on_the_daniela_hathorn_page(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check:  Menu section [Markets] > Menu item [Market analysis] >\n                Find and click article of 'Daniela Hathorn' author >\n                Click the link 'Daniela Hathorn' >\n                Click any article on the 'Daniela Hathorn' page\n        Language: EN\n        License/Country: SCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"407\",\n            \"Menu section [Markets] > Menu item [Market analysis] > \"\n            \"Find and click article of 'Daniela Hathorn' author > \"\n            \"Click the link 'Daniela Hathorn' > \"\n            \"Click any article on the 'Daniela Hathorn' page\",\n            False, True\n        )\n        # pytest.skip(\"Промежуточная версия\")\n        # Arrange\n        cur_item_link = apply_preconditions_to_link(d, cur_language, cur_country,\n                                                    cur_role, cur_login, cur_password)\n    \n        page_menu = from_markets_menu_open_market_analysis.MenuNew(d, cur_item_link)\n        link = page_menu.from_markets_menu_open_market_analysis(\n            d, cur_language, cur_country, cur_item_link)\n    \n        test_element = BUG_407(d, link, bid)\n        test_element.arrange(d, link)\n    \n        # Act\n        test_element.act(d)\n    \n        # Assert\n>       test_element.assert_(d)\n\ntests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py:1156: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_407.py:205: in assert_\n    Common().pytest_fail(f\"Bug # {BUG_NUMBER} {msg}\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda\n\npages/common.py:235: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1733956573384,"stop":1733956573741,"duration":357},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1733956573741,"stop":1733956573741,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1733956573741,"stop":1733956573741,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1733956573741,"stop":1733956573741,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check:  Menu section [Markets] > Menu item [Market analysis] >\n                Find and click article of 'Daniela Hathorn' author >\n                Click the link 'Daniela Hathorn' >\n                Click any article on the 'Daniela Hathorn' page\n        Language: EN\n        License/Country: SCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        ","status":"failed","statusMessage":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","statusTrace":"self = <US_55-artemdashkov_ReTestsManual_test.TestManualDetected object at 0x7f9eb78e0650>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b4f20167f3214ee1b0019bf9e21e226f\")>\ncur_language = '', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test authors of articles on the 'Daniela Hathorn' page\")\n    @pytest.mark.parametrize('cur_language', [\"\"])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_407\n    def test_407_articles_all_authors_present_on_the_daniela_hathorn_page(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check:  Menu section [Markets] > Menu item [Market analysis] >\n                Find and click article of 'Daniela Hathorn' author >\n                Click the link 'Daniela Hathorn' >\n                Click any article on the 'Daniela Hathorn' page\n        Language: EN\n        License/Country: SCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"407\",\n            \"Menu section [Markets] > Menu item [Market analysis] > \"\n            \"Find and click article of 'Daniela Hathorn' author > \"\n            \"Click the link 'Daniela Hathorn' > \"\n            \"Click any article on the 'Daniela Hathorn' page\",\n            False, True\n        )\n        # pytest.skip(\"Промежуточная версия\")\n        # Arrange\n        cur_item_link = apply_preconditions_to_link(d, cur_language, cur_country,\n                                                    cur_role, cur_login, cur_password)\n    \n        page_menu = from_markets_menu_open_market_analysis.MenuNew(d, cur_item_link)\n        link = page_menu.from_markets_menu_open_market_analysis(\n            d, cur_language, cur_country, cur_item_link)\n    \n        test_element = BUG_407(d, link, bid)\n        test_element.arrange(d, link)\n    \n        # Act\n        test_element.act(d)\n    \n        # Assert\n>       test_element.assert_(d)\n\ntests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py:1156: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_407.py:205: in assert_\n    Common().pytest_fail(f\"Bug # {BUG_NUMBER} {msg}\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda\n\npages/common.py:235: Failed","steps":[{"name":"Start test authors of articles on the 'Daniela Hathorn' page","time":{"start":1733959218719,"stop":1733959246222,"duration":27503},"status":"failed","statusMessage":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py\", line 1156, in test_407_articles_all_authors_present_on_the_daniela_hathorn_page\n    test_element.assert_(d)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_407.py\", line 205, in assert_\n    Common().pytest_fail(f\"Bug # {BUG_NUMBER} {msg}\")\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/common.py\", line 235, in pytest_fail\n    pytest.fail(msg)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1733959218719,"stop":1733959218720,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"b4f20167f3214ee1b0019bf9e21e226f\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'407'"},{"name":"desc_tc","value":"'Menu section [Markets] > Menu item [Market analysis] > Find and click article of 'Daniela Hathorn' author > Click the link 'Daniela Hathorn' > Click any article on the 'Daniela Hathorn' page'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"True"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1733959218721,"stop":1733959233036,"duration":14315},"status":"passed","steps":[{"name":"2024-12-11 22:36:13.329622   Start Authorization","time":{"start":1733959226141,"stop":1733959229843,"duration":3702},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"b4f20167f3214ee1b0019bf9e21e226f\")>"},{"name":"link","value":"'https://capital.com/en-gb'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-12-11 22:36:13.329645   Set language and country","time":{"start":1733959229843,"stop":1733959233027,"duration":3184},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"b4f20167f3214ee1b0019bf9e21e226f\")>"},{"name":"cur_language","value":"'en'"},{"name":"cur_country","value":"'ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"b4f20167f3214ee1b0019bf9e21e226f\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Markets\" menu, \"Market analysis\" submenu","time":{"start":1733959233036,"stop":1733959241336,"duration":8300},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"b4f20167f3214ee1b0019bf9e21e226f\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"link","value":"'https://capital.com/en-ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-12-11 22:36:13.314999   1. Start Arrange: find target article,choose and click article,find and click link 'Daniela Hathorn', choose any random article","time":{"start":1733959241336,"stop":1733959241777,"duration":441},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"b4f20167f3214ee1b0019bf9e21e226f\")>"},{"name":"link","value":"'https://capital.com/en-ae/analysis'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"\n2024-12-11 22:36:13.315026   2. Start Act.","time":{"start":1733959241777,"stop":1733959246221,"duration":4444},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"b4f20167f3214ee1b0019bf9e21e226f\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-12-11 22:36:13.315040   3. Start Assert. Check author of articles","time":{"start":1733959246222,"stop":1733959246222,"duration":0},"status":"failed","statusMessage":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_407.py\", line 205, in assert_\n    Common().pytest_fail(f\"Bug # {BUG_NUMBER} {msg}\")\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/common.py\", line 235, in pytest_fail\n    pytest.fail(msg)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"b4f20167f3214ee1b0019bf9e21e226f\")>"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"b4f20167f3214ee1b0019bf9e21e226f\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":8,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"5007924de2b63c84","name":"Screenshot","source":"5007924de2b63c84.png","type":"image/png","size":350112},{"uid":"18dc5d0c8742217f","name":"stdout","source":"18dc5d0c8742217f.txt","type":"text/plain","size":7196}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":9,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1733960195758,"stop":1733960196131,"duration":373},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!407 | Menu section [Markets] > Menu item [Market analysis] > Find and click article of 'Daniela Hathorn' author > Click the link 'Daniela Hathorn' > Click any article on the 'Daniela Hathorn' page"},{"name":"feature","value":"Role: Auth"},{"name":"story","value":"Country: ae"},{"name":"tag","value":"bug_407"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.artemdashkov"},{"name":"suite","value":"US_55-artemdashkov_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetected"},{"name":"host","value":"fv-az658-8"},{"name":"thread","value":"4551-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.artemdashkov.US_55-artemdashkov_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":44,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":46},"items":[{"uid":"674a4b530462d08c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/253//#testresult/674a4b530462d08c","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1733872845924,"stop":1733872868497,"duration":22573}},{"uid":"ead6d083873b54ab","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/252//#testresult/ead6d083873b54ab","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1733787323027,"stop":1733787355831,"duration":32804}},{"uid":"c3e520be7fdd91eb","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/251//#testresult/c3e520be7fdd91eb","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1733701071118,"stop":1733701103072,"duration":31954}},{"uid":"21c52ebecb1c9b93","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/250//#testresult/21c52ebecb1c9b93","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team","time":{"start":1733614573749,"stop":1733614605915,"duration":32166}},{"uid":"abe9b6d2784e9c49","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/249//#testresult/abe9b6d2784e9c49","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team","time":{"start":1733528527954,"stop":1733528558439,"duration":30485}},{"uid":"5d3e050861f54e9","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/248//#testresult/5d3e050861f54e9","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team","time":{"start":1733465711564,"stop":1733465740216,"duration":28652}},{"uid":"6b52101b21d0570c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/244//#testresult/6b52101b21d0570c","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1733256325431,"stop":1733256351414,"duration":25983}},{"uid":"890e716133d14246","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/243//#testresult/890e716133d14246","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team","time":{"start":1733181351976,"stop":1733181376429,"duration":24453}},{"uid":"ade9883c4c536821","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/242//#testresult/ade9883c4c536821","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1733096003206,"stop":1733096029999,"duration":26793}},{"uid":"2091dcf62cff116","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/241//#testresult/2091dcf62cff116","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1733008745833,"stop":1733008771972,"duration":26139}},{"uid":"c667ea3ac4d60623","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/240//#testresult/c667ea3ac4d60623","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1732922135410,"stop":1732922159873,"duration":24463}},{"uid":"235223faf8bea988","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/239//#testresult/235223faf8bea988","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team","time":{"start":1732836725596,"stop":1732836751228,"duration":25632}},{"uid":"1f8e519afad85b36","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/238//#testresult/1f8e519afad85b36","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1732750472840,"stop":1732750497329,"duration":24489}},{"uid":"ec737ad82c95742","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/237//#testresult/ec737ad82c95742","status":"passed","time":{"start":1732662930999,"stop":1732662955656,"duration":24657}},{"uid":"18f5c38b75195299","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/236//#testresult/18f5c38b75195299","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team","time":{"start":1732576617026,"stop":1732576643284,"duration":26258}},{"uid":"e4fcfdc4b1316385","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/235//#testresult/e4fcfdc4b1316385","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team","time":{"start":1732489996408,"stop":1732490021895,"duration":25487}},{"uid":"e15bf080bed206ae","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/234//#testresult/e15bf080bed206ae","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1732403596382,"stop":1732403621253,"duration":24871}},{"uid":"e4a634661e15b877","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/233//#testresult/e4a634661e15b877","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team","time":{"start":1732317962923,"stop":1732317987860,"duration":24937}},{"uid":"c9365c869d55edbf","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/232//#testresult/c9365c869d55edbf","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1732247969891,"stop":1732247995098,"duration":25207}},{"uid":"fb885672374db966","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/231//#testresult/fb885672374db966","status":"passed","time":{"start":1732231842948,"stop":1732231868129,"duration":25181}}]},"tags":["bug_407","us_55"]},"source":"a06f8ba5c0bc2f86.json","parameterValues":["'ae'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'Auth'","'Chrome'"]}