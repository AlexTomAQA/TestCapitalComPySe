{"uid":"681c2760c6fe585d","name":"TC_55!322a (Lang: en) | Bid:55!322a-en.ae.NoReg","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_322a","historyId":"4291d05446b5eca7e537c29dc0794a32","time":{"start":1733013922503,"stop":1733013945993,"duration":23490},"description":"\n        Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        ","descriptionHtml":"<pre><code>    Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n            Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n            English or Arabic language.\n    Language: EN, AR\n    License: SCA\n    Author: Kasila\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","statusTrace":"self = <pages.BugsManual.bug_322.AssertTPI object at 0x7fbe52b20320>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2fc50e1a94dc67a8f1f9a98153ffee29\")>\n\n    def assert_signup(self, d):\n        print(f\"\\n{datetime.now()}   3. Assert\")\n    \n        try:\n>           signup_form = self.driver.find_element(By.XPATH, '//strong/span[contains(text(), \"Sign up\")]')\n\npages/BugsManual/bug_322.py:107: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbe52b9e9c0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x558c2f55c740 \\\\u003Cunknown>\\\\n#17 0x558c2f56c196 \\\\u003Cunknown>\\\\n#18 0x7fcde5694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//strong/span[contains(text(), \"Sign up\")]\"}\nE         (Session info: chrome=131.0.6778.85); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x558c2f56d31a <unknown>\nE       #1 0x558c2f0836e0 <unknown>\nE       #2 0x558c2f0d23e6 <unknown>\nE       #3 0x558c2f0d2681 <unknown>\nE       #4 0x558c2f117b04 <unknown>\nE       #5 0x558c2f0f648d <unknown>\nE       #6 0x558c2f114ed7 <unknown>\nE       #7 0x558c2f0f6203 <unknown>\nE       #8 0x558c2f0c4cc0 <unknown>\nE       #9 0x558c2f0c5c9e <unknown>\nE       #10 0x558c2f53ad0b <unknown>\nE       #11 0x558c2f53ec92 <unknown>\nE       #12 0x558c2f527b3c <unknown>\nE       #13 0x558c2f53f807 <unknown>\nE       #14 0x558c2f50d0df <unknown>\nE       #15 0x558c2f55c578 <unknown>\nE       #16 0x558c2f55c740 <unknown>\nE       #17 0x558c2f56c196 <unknown>\nE       #18 0x7fcde5694ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7fbe52c4f1d0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2fc50e1a94dc67a8f1f9a98153ffee29\")>\ncur_language = '', cur_country = 'ae', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ntitle_instrument = ''\n\n    @allure.step(\n        'Start retest manual AT_55!322a that the Sign Up/Login/page of the corresponding trading instrument on '\n        'the trading platform is opened after clicking [numeric values] in the Sell column.')\n    @pytest.mark.parametrize('cur_language', ['', 'ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('title_instrument', [''])\n    @pytest.mark.bug_322a\n    def test_322a(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, title_instrument):\n        \"\"\"\n        Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"322a\", 'The Sign Up/Login/page of the corresponding trading instrument on the trading platform'\n                   ' is not opened after clicking [numeric values] in the Sell column'\n        )\n    \n        match cur_language:\n            case '':\n                link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_sell(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n>                       test_element.assert_signup(d)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:254: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_322.py:113: in assert_signup\n    Common.pytest_fail(\"Bug # 55!322 \"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 55!322 \\nExpected result: Sign Up form is opened\\nActual result: Sign Up form is not opened'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 55!322 \nE    Expected result: Sign Up form is opened\nE    Actual result: Sign Up form is not opened\n\npages/common.py:235: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1733012969393,"stop":1733012970044,"duration":651},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1733012970044,"stop":1733012970044,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1733012970044,"stop":1733012970044,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1733012970044,"stop":1733012970044,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        ","status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","statusTrace":"self = <pages.BugsManual.bug_322.AssertTPI object at 0x7fbe52b20320>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2fc50e1a94dc67a8f1f9a98153ffee29\")>\n\n    def assert_signup(self, d):\n        print(f\"\\n{datetime.now()}   3. Assert\")\n    \n        try:\n>           signup_form = self.driver.find_element(By.XPATH, '//strong/span[contains(text(), \"Sign up\")]')\n\npages/BugsManual/bug_322.py:107: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbe52b9e9c0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x558c2f55c740 \\\\u003Cunknown>\\\\n#17 0x558c2f56c196 \\\\u003Cunknown>\\\\n#18 0x7fcde5694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//strong/span[contains(text(), \"Sign up\")]\"}\nE         (Session info: chrome=131.0.6778.85); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x558c2f56d31a <unknown>\nE       #1 0x558c2f0836e0 <unknown>\nE       #2 0x558c2f0d23e6 <unknown>\nE       #3 0x558c2f0d2681 <unknown>\nE       #4 0x558c2f117b04 <unknown>\nE       #5 0x558c2f0f648d <unknown>\nE       #6 0x558c2f114ed7 <unknown>\nE       #7 0x558c2f0f6203 <unknown>\nE       #8 0x558c2f0c4cc0 <unknown>\nE       #9 0x558c2f0c5c9e <unknown>\nE       #10 0x558c2f53ad0b <unknown>\nE       #11 0x558c2f53ec92 <unknown>\nE       #12 0x558c2f527b3c <unknown>\nE       #13 0x558c2f53f807 <unknown>\nE       #14 0x558c2f50d0df <unknown>\nE       #15 0x558c2f55c578 <unknown>\nE       #16 0x558c2f55c740 <unknown>\nE       #17 0x558c2f56c196 <unknown>\nE       #18 0x7fcde5694ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7fbe52c4f1d0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2fc50e1a94dc67a8f1f9a98153ffee29\")>\ncur_language = '', cur_country = 'ae', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ntitle_instrument = ''\n\n    @allure.step(\n        'Start retest manual AT_55!322a that the Sign Up/Login/page of the corresponding trading instrument on '\n        'the trading platform is opened after clicking [numeric values] in the Sell column.')\n    @pytest.mark.parametrize('cur_language', ['', 'ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('title_instrument', [''])\n    @pytest.mark.bug_322a\n    def test_322a(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, title_instrument):\n        \"\"\"\n        Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"322a\", 'The Sign Up/Login/page of the corresponding trading instrument on the trading platform'\n                   ' is not opened after clicking [numeric values] in the Sell column'\n        )\n    \n        match cur_language:\n            case '':\n                link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_sell(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n>                       test_element.assert_signup(d)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:254: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_322.py:113: in assert_signup\n    Common.pytest_fail(\"Bug # 55!322 \"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 55!322 \\nExpected result: Sign Up form is opened\\nActual result: Sign Up form is not opened'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 55!322 \nE    Expected result: Sign Up form is opened\nE    Actual result: Sign Up form is not opened\n\npages/common.py:235: Failed","steps":[{"name":"Start retest manual AT_55!322a that the Sign Up/Login/page of the corresponding trading instrument on the trading platform is opened after clicking [numeric values] in the Sell column.","time":{"start":1733013922503,"stop":1733013945992,"duration":23489},"status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py\", line 254, in test_322a\n    test_element.assert_signup(d)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_322.py\", line 113, in assert_signup\n    Common.pytest_fail(\"Bug # 55!322 \"\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/common.py\", line 235, in pytest_fail\n    pytest.fail(msg)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1733013922503,"stop":1733013922504,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"2fc50e1a94dc67a8f1f9a98153ffee29\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoReg'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'322a'"},{"name":"desc_tc","value":"'The Sign Up/Login/page of the corresponding trading instrument on the trading platform is not opened after clicking [numeric values] in the Sell column'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1733013922505,"stop":1733013932447,"duration":9942},"status":"passed","steps":[{"name":"2024-12-01 00:29:29.362320   Set language and country","time":{"start":1733013929989,"stop":1733013932440,"duration":2451},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"2fc50e1a94dc67a8f1f9a98153ffee29\")>"},{"name":"cur_language","value":"'en'"},{"name":"cur_country","value":"'ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"2fc50e1a94dc67a8f1f9a98153ffee29\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Trading\" menu, \"Trading\" submenu","time":{"start":1733013932448,"stop":1733013940784,"duration":8336},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"2fc50e1a94dc67a8f1f9a98153ffee29\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"link","value":"'https://capital.com/en-ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-12-01 00:29:29.194747   1. Start test that the Clicking [numeric values] in the Sell column in Menu tittle Markets opens the Sign-Up /Login form or page of the corresponding trading instrument on the trading platform.","time":{"start":1733013940785,"stop":1733013940820,"duration":35},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"2fc50e1a94dc67a8f1f9a98153ffee29\")>"},{"name":"cur_item_link","value":"'https://capital.com/en-ae/markets'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"2fc50e1a94dc67a8f1f9a98153ffee29\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"title_instrument","value":"''"}],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"771e6d3a31cc50cd","name":"Screenshot","source":"771e6d3a31cc50cd.png","type":"image/png","size":139588},{"uid":"1ab1d3418f011534","name":"stdout","source":"1ab1d3418f011534.txt","type":"text/plain","size":4921}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1733015083589,"stop":1733015083894,"duration":305},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!322a | The Sign Up/Login/page of the corresponding trading instrument on the trading platform is not opened after clicking [numeric values] in the Sell column"},{"name":"feature","value":"Role: NoReg"},{"name":"story","value":"Country: ae"},{"name":"tag","value":"bug_322a"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az1109-986"},{"name":"thread","value":"34919-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoReg'"},{"name":"d","value":"'Chrome'"},{"name":"title_instrument","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":36,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":36},"items":[{"uid":"7cf8da27f14ce447","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/240//#testresult/7cf8da27f14ce447","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1732927064427,"stop":1732927087011,"duration":22584}},{"uid":"38511ead82d3fa52","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/239//#testresult/38511ead82d3fa52","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1732842185498,"stop":1732842209058,"duration":23560}},{"uid":"86797370bde5ccee","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/238//#testresult/86797370bde5ccee","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1732755856045,"stop":1732755879105,"duration":23060}},{"uid":"baa27e73dd985ca","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/237//#testresult/baa27e73dd985ca","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1732668176884,"stop":1732668199801,"duration":22917}},{"uid":"2fcc1377c8a9e40f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/236//#testresult/2fcc1377c8a9e40f","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1732581833150,"stop":1732581856157,"duration":23007}},{"uid":"b8150c3bc48ff37a","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/235//#testresult/b8150c3bc48ff37a","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1732495837356,"stop":1732495860677,"duration":23321}},{"uid":"387e2b19f5e9ec70","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/234//#testresult/387e2b19f5e9ec70","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country '' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1732408019628,"stop":1732408036671,"duration":17043}},{"uid":"a21e885a691442b3","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/233//#testresult/a21e885a691442b3","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country '' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1732326651539,"stop":1732326668328,"duration":16789}},{"uid":"2864b02fc7649831","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/232//#testresult/2864b02fc7649831","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country '' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1732252999476,"stop":1732253016985,"duration":17509}},{"uid":"df647fe3a7634f19","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/231//#testresult/df647fe3a7634f19","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country '' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1732237077346,"stop":1732237094097,"duration":16751}},{"uid":"7e8a473a2f30c834","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/230//#testresult/7e8a473a2f30c834","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country '' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1732150647256,"stop":1732150664182,"duration":16926}},{"uid":"72fb464c14981844","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/229//#testresult/72fb464c14981844","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country '' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1732063882326,"stop":1732063898963,"duration":16637}},{"uid":"27b64ab01dd5de04","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/228//#testresult/27b64ab01dd5de04","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country '' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1731978271540,"stop":1731978288591,"duration":17051}},{"uid":"c29d0f366c76e133","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/227//#testresult/c29d0f366c76e133","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country '' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1731890389093,"stop":1731890406164,"duration":17071}},{"uid":"e35de5d5dddbcd2c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/226//#testresult/e35de5d5dddbcd2c","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country '' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1731803437894,"stop":1731803454851,"duration":16957}},{"uid":"4717c8491d96dbcc","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/225//#testresult/4717c8491d96dbcc","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country '' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1731737790014,"stop":1731737806706,"duration":16692}},{"uid":"b7b6eb29bcd88587","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/224//#testresult/b7b6eb29bcd88587","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country '' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1731717962515,"stop":1731717979541,"duration":17026}},{"uid":"c0a58cabb88828cf","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/223//#testresult/c0a58cabb88828cf","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country '' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1731652404598,"stop":1731652421325,"duration":16727}},{"uid":"2d5d200217e72e42","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/222//#testresult/2d5d200217e72e42","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1731630646846,"stop":1731630669771,"duration":22925}},{"uid":"25a51aa6968ea16f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/221//#testresult/25a51aa6968ea16f","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1731544673180,"stop":1731544696464,"duration":23284}}]},"tags":["us_55","bug_322a"]},"source":"681c2760c6fe585d.json","parameterValues":["'ae'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoReg'","'Chrome'","''"]}