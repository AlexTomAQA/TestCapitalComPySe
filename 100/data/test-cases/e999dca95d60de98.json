{"uid":"e999dca95d60de98","name":"TC_11.03.08.01_05 | Testing button [Practise for free] in Content block. Bid:11.03.08.01_05-endeAuth","fullName":"tests.US_11_Education.US_11-03-08_Trading_psychology_guide.US_11-03-08-01_trading_psychology_guide_test.TestTradingPsychologyGuideItem#test_05","historyId":"764702806ffc826fcf246380c9ec3764","time":{"start":1703679664169,"stop":1703679674542,"duration":10373},"description":"\n        Check: Button [Practise for free] in Content block\n        Language: All. License: All.\n        ","descriptionHtml":"<pre><code>    Check: Button [Practise for free] in Content block\n    Language: All. License: All.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Bug # 10. Loaded page with https://capital.com/trading/signup?go=demo url, but expected the Trading platform inLive mode(timeout=30c)","statusTrace":"self = <US_11-03-08-01_trading_psychology_guide_test.TestTradingPsychologyGuideItem object at 0x7f06a7a63450>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"88fdf02d8f01546fbb934c6c3303307d\")>\ncur_language = '', cur_country = 'de', cur_role = 'Auth'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\ncur_item_link = 'https://capital.com/self-attribution-bias'\n\n    @allure.step(\"Start test of button [Practise for free] in Content block\")\n    @pytest.mark.test_05\n    def test_05(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link):\n        \"\"\"\n        Check: Button [Practise for free] in Content block\n        Language: All. License: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"11.03.08\", \"Education > Menu item [Trading Psychology Guide]\",\n            \".01_05\", \"Testing button [Practise for free] in Content block\")\n    \n        if cur_language not in [\"\"]:\n            pytest.skip(f\"This test not for {cur_language} language\")\n        if cur_country == 'gb':\n            pytest.skip(\"This test is not supported on UK location\")\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = ButtonPractiseForFreeInContentBlock(d, cur_item_link)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link)\n\ntests/US_11_Education/US_11-03-08_Trading_psychology_guide/US_11-03-08-01_trading_psychology_guide_test.py:155: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/ButtonPractiseForFreeInContentBlock.py:30: in full_test_with_tpi\n    test_element.assert_trading_platform_v4(d, cur_item_link)\npages/Elements/AssertClass.py:106: in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Capital.Trading_platform.trading_platform.TradingPlatform object at 0x7f06a79f1d10>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"88fdf02d8f01546fbb934c6c3303307d\")>\ncur_link = 'https://capital.com/self-attribution-bias', tpd = False, tpi = False\ntrade_instrument = ''\n\n    @allure.step(\"Checking that the trading platform page has opened - ver 4\")\n    def should_be_trading_platform_page_v4(self, d, cur_link, tpd, tpi, trade_instrument):\n        \"\"\"\n        Check if the trading platform page for the corresponding trade instrument is opened\n        Args:\n            d: Webdriver\n            cur_link: Link in the list of 3 random items and start page of the sidebar\n            tpd: open Trade platform in Demo mode (True). Live mode (False)\n            tpi: open Trade platform for corresponding trade instrument (False)\n            trade_instrument: corresponding trade instrument (False)\n        \"\"\"\n        print(f\"{datetime.now()}   Checking that the trading platform page has opened (v4) =>\")\n        platform_url = data[\"PLATFORM_URL/\"]\n        cur_url = self.browser.current_url\n        if self.wait_for_target_url(platform_url, 15):\n    \n            self.should_be_page_title_v2(data[\"PAGE_TITLE\"])\n            self.should_be_platform_logo()\n            if tpd:\n                self.should_be_platform_demo_mode()\n                print(f\"{datetime.now()}   => The page with {cur_url} url was opened in DEMO mode\")\n            else:\n                self.should_be_platform_live_mode()\n                print(f\"{datetime.now()}   => The page with {cur_url} url was opened in lIVE mode\")\n            if tpi:\n                print(f\"{datetime.now()}   => Opened page with {cur_url} url for corresponding trading\"\n                      f\" instrument '{trade_instrument}'\")\n                self.should_be_corresponding_trading_instrument(cur_url, trade_instrument)\n    \n            assert True, 'Trading platform with title \"Trading Platform | Capital.com\" opened'\n            self.open_page()\n        else:\n            if tpd:\n                print(f\"{datetime.now()}   => Loaded page {self.browser.current_url} with not {platform_url} url\")\n                assert False, (f\"Bug # 9. Loaded page with {cur_url} url, but expected the Trading platform in\"\n                               f\"Demo mode(timeout=30c)\")\n            else:\n                print(f\"{datetime.now()}   => Loaded page {self.browser.current_url} with not {platform_url} url\")\n>               assert False, (f\"Bug # 10. Loaded page with {cur_url} url, but expected the Trading platform in\"\n                               f\"Live mode(timeout=30c)\")\nE               AssertionError: Bug # 10. Loaded page with https://capital.com/trading/signup?go=demo url, but expected the Trading platform inLive mode(timeout=30c)\n\npages/Capital/Trading_platform/trading_platform.py:119: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"worker_id","time":{"start":1703679556700,"stop":1703679556701,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"d","time":{"start":1703679556701,"stop":1703679557603,"duration":902},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"go","time":{"start":1703679557603,"stop":1703679557604,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1703679557604,"stop":1703679557604,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1703679557604,"stop":1703679557604,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1703679557604,"stop":1703679557604,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1703679557604,"stop":1703679557604,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1703679557604,"stop":1703679557604,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [Practise for free] in Content block\n        Language: All. License: All.\n        ","status":"failed","statusMessage":"AssertionError: Bug # 10. Loaded page with https://capital.com/trading/signup?go=demo url, but expected the Trading platform inLive mode(timeout=30c)","statusTrace":"self = <US_11-03-08-01_trading_psychology_guide_test.TestTradingPsychologyGuideItem object at 0x7f06a7a63450>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"88fdf02d8f01546fbb934c6c3303307d\")>\ncur_language = '', cur_country = 'de', cur_role = 'Auth'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\ncur_item_link = 'https://capital.com/self-attribution-bias'\n\n    @allure.step(\"Start test of button [Practise for free] in Content block\")\n    @pytest.mark.test_05\n    def test_05(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link):\n        \"\"\"\n        Check: Button [Practise for free] in Content block\n        Language: All. License: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"11.03.08\", \"Education > Menu item [Trading Psychology Guide]\",\n            \".01_05\", \"Testing button [Practise for free] in Content block\")\n    \n        if cur_language not in [\"\"]:\n            pytest.skip(f\"This test not for {cur_language} language\")\n        if cur_country == 'gb':\n            pytest.skip(\"This test is not supported on UK location\")\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = ButtonPractiseForFreeInContentBlock(d, cur_item_link)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link)\n\ntests/US_11_Education/US_11-03-08_Trading_psychology_guide/US_11-03-08-01_trading_psychology_guide_test.py:155: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/ButtonPractiseForFreeInContentBlock.py:30: in full_test_with_tpi\n    test_element.assert_trading_platform_v4(d, cur_item_link)\npages/Elements/AssertClass.py:106: in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Capital.Trading_platform.trading_platform.TradingPlatform object at 0x7f06a79f1d10>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"88fdf02d8f01546fbb934c6c3303307d\")>\ncur_link = 'https://capital.com/self-attribution-bias', tpd = False, tpi = False\ntrade_instrument = ''\n\n    @allure.step(\"Checking that the trading platform page has opened - ver 4\")\n    def should_be_trading_platform_page_v4(self, d, cur_link, tpd, tpi, trade_instrument):\n        \"\"\"\n        Check if the trading platform page for the corresponding trade instrument is opened\n        Args:\n            d: Webdriver\n            cur_link: Link in the list of 3 random items and start page of the sidebar\n            tpd: open Trade platform in Demo mode (True). Live mode (False)\n            tpi: open Trade platform for corresponding trade instrument (False)\n            trade_instrument: corresponding trade instrument (False)\n        \"\"\"\n        print(f\"{datetime.now()}   Checking that the trading platform page has opened (v4) =>\")\n        platform_url = data[\"PLATFORM_URL/\"]\n        cur_url = self.browser.current_url\n        if self.wait_for_target_url(platform_url, 15):\n    \n            self.should_be_page_title_v2(data[\"PAGE_TITLE\"])\n            self.should_be_platform_logo()\n            if tpd:\n                self.should_be_platform_demo_mode()\n                print(f\"{datetime.now()}   => The page with {cur_url} url was opened in DEMO mode\")\n            else:\n                self.should_be_platform_live_mode()\n                print(f\"{datetime.now()}   => The page with {cur_url} url was opened in lIVE mode\")\n            if tpi:\n                print(f\"{datetime.now()}   => Opened page with {cur_url} url for corresponding trading\"\n                      f\" instrument '{trade_instrument}'\")\n                self.should_be_corresponding_trading_instrument(cur_url, trade_instrument)\n    \n            assert True, 'Trading platform with title \"Trading Platform | Capital.com\" opened'\n            self.open_page()\n        else:\n            if tpd:\n                print(f\"{datetime.now()}   => Loaded page {self.browser.current_url} with not {platform_url} url\")\n                assert False, (f\"Bug # 9. Loaded page with {cur_url} url, but expected the Trading platform in\"\n                               f\"Demo mode(timeout=30c)\")\n            else:\n                print(f\"{datetime.now()}   => Loaded page {self.browser.current_url} with not {platform_url} url\")\n>               assert False, (f\"Bug # 10. Loaded page with {cur_url} url, but expected the Trading platform in\"\n                               f\"Live mode(timeout=30c)\")\nE               AssertionError: Bug # 10. Loaded page with https://capital.com/trading/signup?go=demo url, but expected the Trading platform inLive mode(timeout=30c)\n\npages/Capital/Trading_platform/trading_platform.py:119: AssertionError","steps":[{"name":"Start test of button [Practise for free] in Content block","time":{"start":1703679664169,"stop":1703679674541,"duration":10372},"status":"failed","statusMessage":"AssertionError: Bug # 10. Loaded page with https://capital.com/trading/signup?go=demo url, but expected the Trading platform inLive mode(timeout=30c)\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_11_Education/US_11-03-08_Trading_psychology_guide/US_11-03-08-01_trading_psychology_guide_test.py\", line 155, in test_05\n    test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/ButtonPractiseForFreeInContentBlock.py\", line 30, in full_test_with_tpi\n    test_element.assert_trading_platform_v4(d, cur_item_link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 106, in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 119, in should_be_trading_platform_page_v4\n    assert False, (f\"Bug # 10. Loaded page with {cur_url} url, but expected the Trading platform in\"\n","steps":[{"name":"Set preconditions","time":{"start":1703679664208,"stop":1703679668565,"duration":4357},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"88fdf02d8f01546fbb934c6c3303307d\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Click 'Button Practise for free' in Content Block. V3","time":{"start":1703679668576,"stop":1703679669651,"duration":1075},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"i","value":"0"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Checking that \"Trading platform\" page opened - ver 4","time":{"start":1703679669651,"stop":1703679674541,"duration":4890},"status":"failed","statusMessage":"AssertionError: Bug # 10. Loaded page with https://capital.com/trading/signup?go=demo url, but expected the Trading platform inLive mode(timeout=30c)\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 106, in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 119, in should_be_trading_platform_page_v4\n    assert False, (f\"Bug # 10. Loaded page with {cur_url} url, but expected the Trading platform in\"\n","steps":[{"name":"Checking that the trading platform page has opened - ver 4","time":{"start":1703679669651,"stop":1703679674540,"duration":4889},"status":"failed","statusMessage":"AssertionError: Bug # 10. Loaded page with https://capital.com/trading/signup?go=demo url, but expected the Trading platform inLive mode(timeout=30c)\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 119, in should_be_trading_platform_page_v4\n    assert False, (f\"Bug # 10. Loaded page with {cur_url} url, but expected the Trading platform in\"\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"88fdf02d8f01546fbb934c6c3303307d\")>"},{"name":"cur_link","value":"'https://capital.com/self-attribution-bias'"},{"name":"tpd","value":"False"},{"name":"tpi","value":"False"},{"name":"trade_instrument","value":"''"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"88fdf02d8f01546fbb934c6c3303307d\")>"},{"name":"cur_link","value":"'https://capital.com/self-attribution-bias'"},{"name":"tpd","value":"False"},{"name":"tpi","value":"False"},{"name":"trade_instrument","value":"''"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"88fdf02d8f01546fbb934c6c3303307d\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_item_link","value":"'https://capital.com/self-attribution-bias'"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"3e76ed0a912bf797","name":"Screenshot","source":"3e76ed0a912bf797.png","type":"image/png","size":15387},{"uid":"7d1aedb312d44f5a","name":"log","source":"7d1aedb312d44f5a.txt","type":"text/plain","size":2587},{"uid":"6c48e7e5d0552cd5","name":"stdout","source":"6c48e7e5d0552cd5.txt","type":"text/plain","size":1528}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"go::0","time":{"start":1703680252538,"stop":1703680252699,"duration":161},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_11.03.08 | Education > Menu item [Trading Psychology Guide]"},{"name":"feature","value":"Language: en"},{"name":"story","value":"Country: de / Role: Auth"},{"name":"tag","value":"test_05"},{"name":"tag","value":"us_11_03_08_01"},{"name":"parentSuite","value":"tests.US_11_Education.US_11-03-08_Trading_psychology_guide"},{"name":"suite","value":"US_11-03-08-01_trading_psychology_guide_test"},{"name":"subSuite","value":"TestTradingPsychologyGuideItem"},{"name":"host","value":"fv-az532-920"},{"name":"thread","value":"43055-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_11_Education.US_11-03-08_Trading_psychology_guide.US_11-03-08-01_trading_psychology_guide_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'de'"},{"name":"cur_item_link","value":"'https://capital.com/self-attribution-bias'"},{"name":"cur_language","value":"'fr'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_role","value":"'Auth'"},{"name":"go","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["test_05","us_11_03_08_01"]},"source":"e999dca95d60de98.json","parameterValues":["'de'","'https://capital.com/self-attribution-bias'","'fr'","'aqa.tomelo.an@gmail.com'","'iT9Vgqi6d$fiZ*Z'","'Auth'","'Chrome'"]}