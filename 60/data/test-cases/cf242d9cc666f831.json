{"uid":"cf242d9cc666f831","name":"TC_55!077 (Lang: ru) | Bid:55!077-ru.ua.NoReg","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_077","historyId":"2c85a477ef4cf31b409d2d07d7911df7","time":{"start":1721637757485,"stop":1721637773938,"duration":16453},"description":"\n        Check: presence of the sidebar \"Crypto Trading Guide\" on the \"Bitcoin Gold\" and \"Cryptocurrencies vs. Stocks:\n        What's the Difference?\" pages.\n        Language: DE, ZH, RU, ES,IT, PL\n        License: CYSEC, SCB, ASIC\n        Author: Kasila\n        ","descriptionHtml":"<pre><code>    Check: presence of the sidebar &quot;Crypto Trading Guide&quot; on the &quot;Bitcoin Gold&quot; and &quot;Cryptocurrencies vs. Stocks:\n    What's the Difference?&quot; pages.\n    Language: DE, ZH, RU, ES,IT, PL\n    License: CYSEC, SCB, ASIC\n    Author: Kasila\n</code></pre>\n","status":"failed","statusMessage":"Failed: #Bug # 55!077 \nExpected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\nActual result: Sidebar is absent on the 'Bitcoin Gold' page","statusTrace":"self = <pages.BugsManual.bug_077.Sidebar object at 0x7f02ff9b6d50>\nsidebar_item = 'Bitcoin Gold'\n\n    def assert_(self, sidebar_item):\n        print(f\"\\n{datetime.now()}   2. Assert\")\n        try:\n>           sidebar = self.driver.find_element(By.CSS_SELECTOR, 'div.side-nav')\n\npages/BugsManual/bug_077.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f02ffd91eb0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x556fe878f7f0 \\\\u003Cunknown>\\\\n#17 0x556fe879ed8c \\\\u003Cunknown>\\\\n#18 0x7f836ce94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div.side-nav\"}\nE         (Session info: chrome=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x556fe879fc5a <unknown>\nE       #1 0x556fe8482e2c <unknown>\nE       #2 0x556fe84cf661 <unknown>\nE       #3 0x556fe84cf751 <unknown>\nE       #4 0x556fe8513f64 <unknown>\nE       #5 0x556fe84f25ed <unknown>\nE       #6 0x556fe8511303 <unknown>\nE       #7 0x556fe84f2363 <unknown>\nE       #8 0x556fe84c2247 <unknown>\nE       #9 0x556fe84c2b9e <unknown>\nE       #10 0x556fe876622b <unknown>\nE       #11 0x556fe876a2d1 <unknown>\nE       #12 0x556fe8751ade <unknown>\nE       #13 0x556fe876ae32 <unknown>\nE       #14 0x556fe873677f <unknown>\nE       #15 0x556fe878f618 <unknown>\nE       #16 0x556fe878f7f0 <unknown>\nE       #17 0x556fe879ed8c <unknown>\nE       #18 0x7f836ce94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7f02ffbfef00>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c240ffe20cf34c4ed44c8618addef004\")>\ncur_language_2_rnd_from_7 = 'ru', cur_country = 'ua', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\nsidebar_item = 'Bitcoin Gold'\n\n    @allure.step('Start retest manual AT_55!077 of the  presence of the \"Crypto trading  guide\" sidebar on '\n                 '\"Bitcoin Gold\" and \"Crypto vs stocks: What is the difference?\" pages')\n    @pytest.mark.parametrize('cur_country', ['es', 'ua', 'au'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('sidebar_item', ['Bitcoin Gold'])\n    @pytest.mark.bug_077\n    def test_077(self, worker_id, d, cur_language_2_rnd_from_7, cur_country, cur_role, cur_login, cur_password,\n                 sidebar_item):\n        \"\"\"\n        Check: presence of the sidebar \"Crypto Trading Guide\" on the \"Bitcoin Gold\" and \"Cryptocurrencies vs. Stocks:\n        What's the Difference?\" pages.\n        Language: DE, ZH, RU, ES,IT, PL\n        License: CYSEC, SCB, ASIC\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language_2_rnd_from_7, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"077\", 'Sidebar \" Crypto trading  guide\" is absent on page \"Bitcoin Gold\"'\n        )\n    \n        page_conditions = Conditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language_2_rnd_from_7, cur_country, cur_role, cur_login, cur_password)\n    \n        menu = MenuSection(d, link)\n        cur_item_link = menu.open_education_cryptocurrency_trading_menu(d, cur_language_2_rnd_from_7, cur_country,\n                                                                        link)\n    \n        test_element = Sidebar(d, cur_item_link, bid)\n        match cur_language_2_rnd_from_7:\n            case \"de\" | \"zh\":\n                test_element.sidebar_de_zh(d, cur_item_link, sidebar_item)\n            case \"ru\" | \"es\" | \"it\" | \"pl\":\n                test_element.sidebar_ru_es_it_pl(d, cur_item_link, sidebar_item)\n>       test_element.assert_(sidebar_item)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:155: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_077.py:104: in assert_\n    Common.pytest_fail(f\"#Bug # 55!077 \"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = \"#Bug # 55!077 \\nExpected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\\nActual result: Sidebar is absent on the 'Bitcoin Gold' page\"\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: #Bug # 55!077 \nE    Expected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\nE    Actual result: Sidebar is absent on the 'Bitcoin Gold' page\n\npages/common.py:232: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1721636840410,"stop":1721636840781,"duration":371},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1721636840782,"stop":1721636840782,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1721636840782,"stop":1721636840782,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1721636840782,"stop":1721636840782,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language_2_rnd_from_7","time":{"start":1721637757484,"stop":1721637757484,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: presence of the sidebar \"Crypto Trading Guide\" on the \"Bitcoin Gold\" and \"Cryptocurrencies vs. Stocks:\n        What's the Difference?\" pages.\n        Language: DE, ZH, RU, ES,IT, PL\n        License: CYSEC, SCB, ASIC\n        Author: Kasila\n        ","status":"failed","statusMessage":"Failed: #Bug # 55!077 \nExpected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\nActual result: Sidebar is absent on the 'Bitcoin Gold' page","statusTrace":"self = <pages.BugsManual.bug_077.Sidebar object at 0x7f02ff9b6d50>\nsidebar_item = 'Bitcoin Gold'\n\n    def assert_(self, sidebar_item):\n        print(f\"\\n{datetime.now()}   2. Assert\")\n        try:\n>           sidebar = self.driver.find_element(By.CSS_SELECTOR, 'div.side-nav')\n\npages/BugsManual/bug_077.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f02ffd91eb0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x556fe878f7f0 \\\\u003Cunknown>\\\\n#17 0x556fe879ed8c \\\\u003Cunknown>\\\\n#18 0x7f836ce94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div.side-nav\"}\nE         (Session info: chrome=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x556fe879fc5a <unknown>\nE       #1 0x556fe8482e2c <unknown>\nE       #2 0x556fe84cf661 <unknown>\nE       #3 0x556fe84cf751 <unknown>\nE       #4 0x556fe8513f64 <unknown>\nE       #5 0x556fe84f25ed <unknown>\nE       #6 0x556fe8511303 <unknown>\nE       #7 0x556fe84f2363 <unknown>\nE       #8 0x556fe84c2247 <unknown>\nE       #9 0x556fe84c2b9e <unknown>\nE       #10 0x556fe876622b <unknown>\nE       #11 0x556fe876a2d1 <unknown>\nE       #12 0x556fe8751ade <unknown>\nE       #13 0x556fe876ae32 <unknown>\nE       #14 0x556fe873677f <unknown>\nE       #15 0x556fe878f618 <unknown>\nE       #16 0x556fe878f7f0 <unknown>\nE       #17 0x556fe879ed8c <unknown>\nE       #18 0x7f836ce94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7f02ffbfef00>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c240ffe20cf34c4ed44c8618addef004\")>\ncur_language_2_rnd_from_7 = 'ru', cur_country = 'ua', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\nsidebar_item = 'Bitcoin Gold'\n\n    @allure.step('Start retest manual AT_55!077 of the  presence of the \"Crypto trading  guide\" sidebar on '\n                 '\"Bitcoin Gold\" and \"Crypto vs stocks: What is the difference?\" pages')\n    @pytest.mark.parametrize('cur_country', ['es', 'ua', 'au'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('sidebar_item', ['Bitcoin Gold'])\n    @pytest.mark.bug_077\n    def test_077(self, worker_id, d, cur_language_2_rnd_from_7, cur_country, cur_role, cur_login, cur_password,\n                 sidebar_item):\n        \"\"\"\n        Check: presence of the sidebar \"Crypto Trading Guide\" on the \"Bitcoin Gold\" and \"Cryptocurrencies vs. Stocks:\n        What's the Difference?\" pages.\n        Language: DE, ZH, RU, ES,IT, PL\n        License: CYSEC, SCB, ASIC\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language_2_rnd_from_7, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"077\", 'Sidebar \" Crypto trading  guide\" is absent on page \"Bitcoin Gold\"'\n        )\n    \n        page_conditions = Conditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language_2_rnd_from_7, cur_country, cur_role, cur_login, cur_password)\n    \n        menu = MenuSection(d, link)\n        cur_item_link = menu.open_education_cryptocurrency_trading_menu(d, cur_language_2_rnd_from_7, cur_country,\n                                                                        link)\n    \n        test_element = Sidebar(d, cur_item_link, bid)\n        match cur_language_2_rnd_from_7:\n            case \"de\" | \"zh\":\n                test_element.sidebar_de_zh(d, cur_item_link, sidebar_item)\n            case \"ru\" | \"es\" | \"it\" | \"pl\":\n                test_element.sidebar_ru_es_it_pl(d, cur_item_link, sidebar_item)\n>       test_element.assert_(sidebar_item)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:155: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_077.py:104: in assert_\n    Common.pytest_fail(f\"#Bug # 55!077 \"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = \"#Bug # 55!077 \\nExpected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\\nActual result: Sidebar is absent on the 'Bitcoin Gold' page\"\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: #Bug # 55!077 \nE    Expected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\nE    Actual result: Sidebar is absent on the 'Bitcoin Gold' page\n\npages/common.py:232: Failed","steps":[{"name":"Start retest manual AT_55!077 of the  presence of the \"Crypto trading  guide\" sidebar on \"Bitcoin Gold\" and \"Crypto vs stocks: What is the difference?\" pages","time":{"start":1721637757485,"stop":1721637773937,"duration":16452},"status":"failed","statusMessage":"Failed: #Bug # 55!077 \nExpected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\nActual result: Sidebar is absent on the 'Bitcoin Gold' page\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py\", line 155, in test_077\n    test_element.assert_(sidebar_item)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_077.py\", line 104, in assert_\n    Common.pytest_fail(f\"#Bug # 55!077 \"\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/common.py\", line 232, in pytest_fail\n    pytest.fail(msg)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 177, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Preconditions","time":{"start":1721637757487,"stop":1721637767511,"duration":10024},"status":"passed","steps":[{"name":"2024-07-22 08:27:20.242424   Start Checking Captcha","time":{"start":1721637759413,"stop":1721637760439,"duration":1026},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"2024-07-22 08:27:20.242424   Start Checking Captcha","time":{"start":1721637760439,"stop":1721637761469,"duration":1030},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Open 'Language and Country' menu section.","time":{"start":1721637761472,"stop":1721637762777,"duration":1305},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"test_language","value":"'ru'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Set country (licence)","time":{"start":1721637762778,"stop":1721637765448,"duration":2670},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_country","value":"'ua'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-07-22 08:27:20.242424   Start Checking Captcha","time":{"start":1721637765448,"stop":1721637766478,"duration":1030},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"2024-07-22 08:27:20.242424   Start Checking Captcha","time":{"start":1721637766478,"stop":1721637767508,"duration":1030},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"c240ffe20cf34c4ed44c8618addef004\")>"},{"name":"host","value":"'https://capital.com/'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'ru'"},{"name":"cur_country","value":"'ua'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":6,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Education\" menu, \"Cryptocurrency trading\" submenu","time":{"start":1721637767511,"stop":1721637772046,"duration":4535},"status":"passed","steps":[{"name":"Focus moved to 'Education' menu","time":{"start":1721637767518,"stop":1721637769309,"duration":1791},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"c240ffe20cf34c4ed44c8618addef004\")>"},{"name":"test_language","value":"'ru'"},{"name":"test_country","value":"'ua'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Focus move to 'Cryptocurrency trading' submenu and click","time":{"start":1721637769309,"stop":1721637771742,"duration":2433},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"c240ffe20cf34c4ed44c8618addef004\")>"},{"name":"test_language","value":"'ru'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"c240ffe20cf34c4ed44c8618addef004\")>"},{"name":"cur_language","value":"'ru'"},{"name":"cur_country","value":"'ua'"},{"name":"link","value":"'https://capital.com/ru?country=ua'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"c240ffe20cf34c4ed44c8618addef004\")>"},{"name":"cur_language_2_rnd_from_7","value":"'ru'"},{"name":"cur_country","value":"'ua'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"sidebar_item","value":"'Bitcoin Gold'"}],"shouldDisplayMessage":true,"stepsCount":10,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"42137d3f31f97f00","name":"Screenshot","source":"42137d3f31f97f00.png","type":"image/png","size":163743},{"uid":"74fd5eb6e636e4f5","name":"stdout","source":"74fd5eb6e636e4f5.txt","type":"text/plain","size":3459}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":11,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1721638100414,"stop":1721638100634,"duration":220},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!077 | Sidebar \" Crypto trading  guide\" is absent on page \"Bitcoin Gold\""},{"name":"feature","value":"Role: NoReg"},{"name":"story","value":"Country: ua"},{"name":"tag","value":"bug_077"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az2026-283"},{"name":"thread","value":"28772-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ua'"},{"name":"cur_language_2_rnd_from_7","value":"'ru'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoReg'"},{"name":"d","value":"'Chrome'"},{"name":"sidebar_item","value":"'Bitcoin Gold'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["bug_077","us_55"]},"source":"cf242d9cc666f831.json","parameterValues":["'ua'","'ru'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoReg'","'Chrome'","'Bitcoin Gold'"]}