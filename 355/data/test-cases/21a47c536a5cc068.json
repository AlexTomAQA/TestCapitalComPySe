{"uid":"21a47c536a5cc068","name":"TC_55!405 (Lang: en) | Bid:55!405-en.ae.Auth","fullName":"tests.US_55_ReTestsManual.mila_podchasova.US_55-mila_podchasova_ReTestsManual_test.TestManualDetectedBugs#test_405_link_research_team_open_on_404_error_message","historyId":"219c54ba14822bbc6bd06d1ba8fbb165","time":{"start":1742604473900,"stop":1742604482194,"duration":8294},"description":"\n        Check:  Menu section [Markets] >\n                Menu item [Market analysis] >\n                Scroll down to the block “pagination” >\n                Click the link \"11\"\n                Click the link “BP share price forecast” >\n                Сlick the link “Capital.com Research Team” >\n        Language: EN\n        License/Country: SCA\n        Role: NoReg, NoAuth, Auth\n        Author: podchasova11\n        ","descriptionHtml":"<pre><code>    Check:  Menu section [Markets] &gt;\n            Menu item [Market analysis] &gt;\n            Scroll down to the block “pagination” &gt;\n            Click the link &quot;11&quot;\n            Click the link “BP share price forecast” &gt;\n            Сlick the link “Capital.com Research Team” &gt;\n    Language: EN\n    License/Country: SCA\n    Role: NoReg, NoAuth, Auth\n    Author: podchasova11\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7f00ca3f20f0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"881b7c658712889925422294bc6d42fa\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f00ca21e1b0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x5576960c3e76 \\\\u003Cunknown>\\\\n#22 0x7fcb9f89caa4 \\\\u003Cunknown>\\\\n#23 0x7fcb9f929c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.88)\nE       Stacktrace:\nE       #0 0x5576960c4ffa <unknown>\nE       #1 0x557695b83970 <unknown>\nE       #2 0x557695bdc1ec <unknown>\nE       #3 0x557695bda055 <unknown>\nE       #4 0x557695bd76f2 <unknown>\nE       #5 0x557695bd68ca <unknown>\nE       #6 0x557695bc94cd <unknown>\nE       #7 0x557695bfb292 <unknown>\nE       #8 0x557695bc8e4a <unknown>\nE       #9 0x557695bfb45e <unknown>\nE       #10 0x557695c2170c <unknown>\nE       #11 0x557695bfb063 <unknown>\nE       #12 0x557695bc7328 <unknown>\nE       #13 0x557695bc8491 <unknown>\nE       #14 0x55769608c42b <unknown>\nE       #15 0x5576960902ec <unknown>\nE       #16 0x557696073a22 <unknown>\nE       #17 0x557696090e64 <unknown>\nE       #18 0x557696057bef <unknown>\nE       #19 0x5576960b3558 <unknown>\nE       #20 0x5576960b3736 <unknown>\nE       #21 0x5576960c3e76 <unknown>\nE       #22 0x7fcb9f89caa4 <unknown>\nE       #23 0x7fcb9f929c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-mila_podchasova_ReTestsManual_test.TestManualDetectedBugs object at 0x7f00ca21c7a0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"881b7c658712889925422294bc6d42fa\")>\ncur_language = '', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test of link 'Capital.com Research Team' on page 'BP share price forecast'\")\n    @pytest.mark.parametrize('cur_language', [\"\"])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_405\n    def test_405_link_research_team_open_on_404_error_message(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check:  Menu section [Markets] >\n                Menu item [Market analysis] >\n                Scroll down to the block “pagination” >\n                Click the link \"11\"\n                Click the link “BP share price forecast” >\n                Сlick the link “Capital.com Research Team” >\n        Language: EN\n        License/Country: SCA\n        Role: NoReg, NoAuth, Auth\n        Author: podchasova11\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"405\",\n            \"Menu section [Markets] > Menu item [Market analysis] >\"\n            \"Scroll down to the block 'pagination' >\"\n            \"Click the link '11' >\"\n            \"Click the link 'BP share price forecast' >\"\n            \"Сlick the header of the accordion 'How do you trade commodities?' >\"\n            \"Сlick the link 'Capital.com Research Team' \",\n            False, True\n        )\n        # Arrange\n>       cur_item_link = apply_preconditions_to_link(d, cur_language, cur_country,\n                                                    cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/mila_podchasova/US_55-mila_podchasova_ReTestsManual_test.py:491: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:152: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7f00ca3f20f0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"881b7c658712889925422294bc6d42fa\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1742603983917,"stop":1742603984711,"duration":794},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1742603984711,"stop":1742603984711,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1742603984712,"stop":1742603984712,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1742603984712,"stop":1742603984712,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1742604025015,"stop":1742604025015,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check:  Menu section [Markets] >\n                Menu item [Market analysis] >\n                Scroll down to the block “pagination” >\n                Click the link \"11\"\n                Click the link “BP share price forecast” >\n                Сlick the link “Capital.com Research Team” >\n        Language: EN\n        License/Country: SCA\n        Role: NoReg, NoAuth, Auth\n        Author: podchasova11\n        ","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7f00ca3f20f0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"881b7c658712889925422294bc6d42fa\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f00ca21e1b0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x5576960c3e76 \\\\u003Cunknown>\\\\n#22 0x7fcb9f89caa4 \\\\u003Cunknown>\\\\n#23 0x7fcb9f929c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.88)\nE       Stacktrace:\nE       #0 0x5576960c4ffa <unknown>\nE       #1 0x557695b83970 <unknown>\nE       #2 0x557695bdc1ec <unknown>\nE       #3 0x557695bda055 <unknown>\nE       #4 0x557695bd76f2 <unknown>\nE       #5 0x557695bd68ca <unknown>\nE       #6 0x557695bc94cd <unknown>\nE       #7 0x557695bfb292 <unknown>\nE       #8 0x557695bc8e4a <unknown>\nE       #9 0x557695bfb45e <unknown>\nE       #10 0x557695c2170c <unknown>\nE       #11 0x557695bfb063 <unknown>\nE       #12 0x557695bc7328 <unknown>\nE       #13 0x557695bc8491 <unknown>\nE       #14 0x55769608c42b <unknown>\nE       #15 0x5576960902ec <unknown>\nE       #16 0x557696073a22 <unknown>\nE       #17 0x557696090e64 <unknown>\nE       #18 0x557696057bef <unknown>\nE       #19 0x5576960b3558 <unknown>\nE       #20 0x5576960b3736 <unknown>\nE       #21 0x5576960c3e76 <unknown>\nE       #22 0x7fcb9f89caa4 <unknown>\nE       #23 0x7fcb9f929c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-mila_podchasova_ReTestsManual_test.TestManualDetectedBugs object at 0x7f00ca21c7a0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"881b7c658712889925422294bc6d42fa\")>\ncur_language = '', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test of link 'Capital.com Research Team' on page 'BP share price forecast'\")\n    @pytest.mark.parametrize('cur_language', [\"\"])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_405\n    def test_405_link_research_team_open_on_404_error_message(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check:  Menu section [Markets] >\n                Menu item [Market analysis] >\n                Scroll down to the block “pagination” >\n                Click the link \"11\"\n                Click the link “BP share price forecast” >\n                Сlick the link “Capital.com Research Team” >\n        Language: EN\n        License/Country: SCA\n        Role: NoReg, NoAuth, Auth\n        Author: podchasova11\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"405\",\n            \"Menu section [Markets] > Menu item [Market analysis] >\"\n            \"Scroll down to the block 'pagination' >\"\n            \"Click the link '11' >\"\n            \"Click the link 'BP share price forecast' >\"\n            \"Сlick the header of the accordion 'How do you trade commodities?' >\"\n            \"Сlick the link 'Capital.com Research Team' \",\n            False, True\n        )\n        # Arrange\n>       cur_item_link = apply_preconditions_to_link(d, cur_language, cur_country,\n                                                    cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/mila_podchasova/US_55-mila_podchasova_ReTestsManual_test.py:491: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:152: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7f00ca3f20f0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"881b7c658712889925422294bc6d42fa\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","steps":[{"name":"Start test of link 'Capital.com Research Team' on page 'BP share price forecast'","time":{"start":1742604473900,"stop":1742604482194,"duration":8294},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/mila_podchasova/US_55-mila_podchasova_ReTestsManual_test.py\", line 491, in test_405_link_research_team_open_on_404_error_message\n    cur_item_link = apply_preconditions_to_link(d, cur_language, cur_country,\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 78, in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 152, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1742604473900,"stop":1742604473902,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"881b7c658712889925422294bc6d42fa\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'405'"},{"name":"desc_tc","value":"'Menu section [Markets] > Menu item [Market analysis] >Scroll down to the block 'pagination' >Click the link '11' >Click the link 'BP share price forecast' >Сlick the header of the accordion 'How do you trade commodities?' >Сlick the link 'Capital.com Research Team' '"},{"name":"manual","value":"False"},{"name":"new_layout","value":"True"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1742604473902,"stop":1742604482193,"duration":8291},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 152, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"2025-03-22 00:39:43.901752   Start Authorization","time":{"start":1742604481116,"stop":1742604482192,"duration":1076},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"881b7c658712889925422294bc6d42fa\")>"},{"name":"link","value":"'https://capital.com/en-gb'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"881b7c658712889925422294bc6d42fa\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"881b7c658712889925422294bc6d42fa\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"5287a5278abc1aa5","name":"Screenshot","source":"5287a5278abc1aa5.png","type":"image/png","size":611094},{"uid":"782f0e949450ee03","name":"stdout","source":"782f0e949450ee03.txt","type":"text/plain","size":2239}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1742604566615,"stop":1742604566876,"duration":261},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!405 | Menu section [Markets] > Menu item [Market analysis] >Scroll down to the block 'pagination' >Click the link '11' >Click the link 'BP share price forecast' >Сlick the header of the accordion 'How do you trade commodities?' >Сlick the link 'Capital.com Research Team' "},{"name":"feature","value":"Role: Auth"},{"name":"story","value":"Country: ae"},{"name":"tag","value":"bug_405"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.mila_podchasova"},{"name":"suite","value":"US_55-mila_podchasova_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az1046-586"},{"name":"thread","value":"40990-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.mila_podchasova.US_55-mila_podchasova_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":14},"items":[{"uid":"9af3876ebb0f531a","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/354//#testresult/9af3876ebb0f531a","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742517096735,"stop":1742517105067,"duration":8332}},{"uid":"fd3849c38694dea4","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/353//#testresult/fd3849c38694dea4","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742430576772,"stop":1742430585109,"duration":8337}},{"uid":"a433bab04f2caa01","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/352//#testresult/a433bab04f2caa01","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742343703655,"stop":1742343712312,"duration":8657}},{"uid":"8a0a2279731049","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/351//#testresult/8a0a2279731049","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742258838944,"stop":1742258847790,"duration":8846}},{"uid":"b259a3501048a534","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/350//#testresult/b259a3501048a534","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742172234750,"stop":1742172243285,"duration":8535}},{"uid":"85d3473c0aa1d6ff","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/349//#testresult/85d3473c0aa1d6ff","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742086289193,"stop":1742086297349,"duration":8156}},{"uid":"55bac8d494ba32ca","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/348//#testresult/55bac8d494ba32ca","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1741998784702,"stop":1741998792890,"duration":8188}},{"uid":"58a9de38049fa9ee","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/347//#testresult/58a9de38049fa9ee","status":"failed","statusDetails":"Failed: Bug # 405 The page 'BP share price forecast...' not present in DOM","time":{"start":1741918535172,"stop":1741918560879,"duration":25707}},{"uid":"af1fa15af1b20b00","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/346//#testresult/af1fa15af1b20b00","status":"failed","statusDetails":"Failed: Bug # 405 The page 'BP share price forecast...' not present in DOM","time":{"start":1741831412478,"stop":1741831438633,"duration":26155}},{"uid":"88a9bccb7b442e4b","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/345//#testresult/88a9bccb7b442e4b","status":"failed","statusDetails":"Failed: Bug # 405 The page 'BP share price forecast...' not present in DOM","time":{"start":1741751654948,"stop":1741751681637,"duration":26689}},{"uid":"12fa0c0e7bbd3c23","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/344//#testresult/12fa0c0e7bbd3c23","status":"failed","statusDetails":"Failed: Bug # 405 The page 'BP share price forecast...' not present in DOM","time":{"start":1741665551641,"stop":1741665578847,"duration":27206}},{"uid":"e475ba56c1399c8c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/343//#testresult/e475ba56c1399c8c","status":"failed","statusDetails":"Failed: Bug # 405 The page 'BP share price forecast...' not present in DOM","time":{"start":1741572333629,"stop":1741572359839,"duration":26210}},{"uid":"d21045a747f30d95","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/342//#testresult/d21045a747f30d95","status":"failed","statusDetails":"Failed: Bug # 405 The page 'BP share price forecast...' not present in DOM","time":{"start":1741485440045,"stop":1741485466500,"duration":26455}}]},"tags":["us_55","bug_405"]},"source":"21a47c536a5cc068.json","parameterValues":["'ae'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'Auth'","'Chrome'"]}