{"uid":"3b77f69b457ff7c5","name":"TC_55!516 (Lang: en) | Bid:55!516-en.au.NoAuth","fullName":"tests.US_55_ReTestsManual.K_Alex_N.US_55_K_Alex_N_ReTestsManual_test.TestManualDetectedBugs#test_516","historyId":"f92dcd8d80e08e3ce3abb9c17c6e1d14","time":{"start":1736560813668,"stop":1736560872564,"duration":58896},"description":"\n         Check: Menu section [Markets] > \n                Menu item [Markets analysis] > \n                article \"The graph (GRT) price prediction..\" > \n                Click on the [collapse] link\n         Language: EN\n         License: ASIC\n         Author: Aleksei Kurochkin\n         ","descriptionHtml":"<pre><code>     Check: Menu section [Markets] &gt; \n            Menu item [Markets analysis] &gt; \n            article &quot;The graph (GRT) price prediction..&quot; &gt; \n            Click on the [collapse] link\n     Language: EN\n     License: ASIC\n     Author: Aleksei Kurochkin\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <b class=\"\">...</b> is not clickable at point (750, 10). Other element would receive the click: <span class=\"text-accord\">...</span>\n  (Session info: chrome=131.0.6778.204)\nStacktrace:\n#0 0x55903f90d1fa <unknown>\n#1 0x55903f41d810 <unknown>\n#2 0x55903f473206 <unknown>\n#3 0x55903f47116d <unknown>\n#4 0x55903f46e885 <unknown>\n#5 0x55903f46da48 <unknown>\n#6 0x55903f4611f5 <unknown>\n#7 0x55903f490582 <unknown>\n#8 0x55903f460b38 <unknown>\n#9 0x55903f49074e <unknown>\n#10 0x55903f4af007 <unknown>\n#11 0x55903f490323 <unknown>\n#12 0x55903f45ede0 <unknown>\n#13 0x55903f45fdbe <unknown>\n#14 0x55903f8d912b <unknown>\n#15 0x55903f8dd0c7 <unknown>\n#16 0x55903f8c66cc <unknown>\n#17 0x55903f8ddc47 <unknown>\n#18 0x55903f8ab67f <unknown>\n#19 0x55903f8fc288 <unknown>\n#20 0x55903f8fc450 <unknown>\n#21 0x55903f90c076 <unknown>\n#22 0x7f3ccbe9ca94 <unknown>\n#23 0x7f3ccbf29c3c <unknown>","statusTrace":"self = <US_55_K_Alex_N_ReTestsManual_test.TestManualDetectedBugs object at 0x7fe70e122de0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"20bbb60ae970800c22f39b2dfae0c5b3\")>\ncur_language = '', cur_country = 'au', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @pytest.mark.parametrize('cur_language', [''])\n    @pytest.mark.parametrize('cur_country', ['au'])\n    @pytest.mark.parametrize('cur_role', random.sample(['Auth', 'NoAuth', 'NoReg'], 1))\n    def test_516(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n         Check: Menu section [Markets] >\n                Menu item [Markets analysis] >\n                article \"The graph (GRT) price prediction..\" >\n                Click on the [collapse] link\n         Language: EN\n         License: ASIC\n         Author: Aleksei Kurochkin\n         \"\"\"\n        test = self\n        self.cur_language = cur_language\n        self.cur_country = cur_country\n        self.driver = d\n    \n        self.bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"516\",\n            'Menu section [Markets] > Menu item [Markets analysis] > '\n            'article \"The graph (GRT) price prediction..\" > Click on the [collapse] link',\n            False,\n            False\n        )\n    \n        # Arrange\n        self.link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n        self.bug = Bug516(test)\n        self.bug.open_market_analysis_page(test)\n    \n        # Act\n>       MyCommon.search_and_open_an_article_in_market_analysis_page(d, \"The graph (GRT) price prediction\")\n\ntests/US_55_ReTestsManual/K_Alex_N/US_55_K_Alex_N_ReTestsManual_test.py:422: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/US_55_ReTestsManual/K_Alex_N/MyCommon.py:50: in search_and_open_an_article_in_market_analysis_page\n    open_the_article()\ntests/US_55_ReTestsManual/K_Alex_N/MyCommon.py:41: in open_the_article\n    driver.find_element(*ARTICLE_LOCATOR).click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fe70e154d40>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55903f90c076 \\\\u003Cunknown>\\\\n#22 0x7f3ccbe9ca94 \\\\u003Cunknown>\\\\n#23 0x7f3ccbf29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <b class=\"\">...</b> is not clickable at point (750, 10). Other element would receive the click: <span class=\"text-accord\">...</span>\nE         (Session info: chrome=131.0.6778.204)\nE       Stacktrace:\nE       #0 0x55903f90d1fa <unknown>\nE       #1 0x55903f41d810 <unknown>\nE       #2 0x55903f473206 <unknown>\nE       #3 0x55903f47116d <unknown>\nE       #4 0x55903f46e885 <unknown>\nE       #5 0x55903f46da48 <unknown>\nE       #6 0x55903f4611f5 <unknown>\nE       #7 0x55903f490582 <unknown>\nE       #8 0x55903f460b38 <unknown>\nE       #9 0x55903f49074e <unknown>\nE       #10 0x55903f4af007 <unknown>\nE       #11 0x55903f490323 <unknown>\nE       #12 0x55903f45ede0 <unknown>\nE       #13 0x55903f45fdbe <unknown>\nE       #14 0x55903f8d912b <unknown>\nE       #15 0x55903f8dd0c7 <unknown>\nE       #16 0x55903f8c66cc <unknown>\nE       #17 0x55903f8ddc47 <unknown>\nE       #18 0x55903f8ab67f <unknown>\nE       #19 0x55903f8fc288 <unknown>\nE       #20 0x55903f8fc450 <unknown>\nE       #21 0x55903f90c076 <unknown>\nE       #22 0x7f3ccbe9ca94 <unknown>\nE       #23 0x7f3ccbf29c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1736560244014,"stop":1736560244650,"duration":636},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1736560244650,"stop":1736560244650,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1736560540741,"stop":1736560540741,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1736560540741,"stop":1736560540742,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n         Check: Menu section [Markets] > \n                Menu item [Markets analysis] > \n                article \"The graph (GRT) price prediction..\" > \n                Click on the [collapse] link\n         Language: EN\n         License: ASIC\n         Author: Aleksei Kurochkin\n         ","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <b class=\"\">...</b> is not clickable at point (750, 10). Other element would receive the click: <span class=\"text-accord\">...</span>\n  (Session info: chrome=131.0.6778.204)\nStacktrace:\n#0 0x55903f90d1fa <unknown>\n#1 0x55903f41d810 <unknown>\n#2 0x55903f473206 <unknown>\n#3 0x55903f47116d <unknown>\n#4 0x55903f46e885 <unknown>\n#5 0x55903f46da48 <unknown>\n#6 0x55903f4611f5 <unknown>\n#7 0x55903f490582 <unknown>\n#8 0x55903f460b38 <unknown>\n#9 0x55903f49074e <unknown>\n#10 0x55903f4af007 <unknown>\n#11 0x55903f490323 <unknown>\n#12 0x55903f45ede0 <unknown>\n#13 0x55903f45fdbe <unknown>\n#14 0x55903f8d912b <unknown>\n#15 0x55903f8dd0c7 <unknown>\n#16 0x55903f8c66cc <unknown>\n#17 0x55903f8ddc47 <unknown>\n#18 0x55903f8ab67f <unknown>\n#19 0x55903f8fc288 <unknown>\n#20 0x55903f8fc450 <unknown>\n#21 0x55903f90c076 <unknown>\n#22 0x7f3ccbe9ca94 <unknown>\n#23 0x7f3ccbf29c3c <unknown>","statusTrace":"self = <US_55_K_Alex_N_ReTestsManual_test.TestManualDetectedBugs object at 0x7fe70e122de0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"20bbb60ae970800c22f39b2dfae0c5b3\")>\ncur_language = '', cur_country = 'au', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @pytest.mark.parametrize('cur_language', [''])\n    @pytest.mark.parametrize('cur_country', ['au'])\n    @pytest.mark.parametrize('cur_role', random.sample(['Auth', 'NoAuth', 'NoReg'], 1))\n    def test_516(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n         Check: Menu section [Markets] >\n                Menu item [Markets analysis] >\n                article \"The graph (GRT) price prediction..\" >\n                Click on the [collapse] link\n         Language: EN\n         License: ASIC\n         Author: Aleksei Kurochkin\n         \"\"\"\n        test = self\n        self.cur_language = cur_language\n        self.cur_country = cur_country\n        self.driver = d\n    \n        self.bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"516\",\n            'Menu section [Markets] > Menu item [Markets analysis] > '\n            'article \"The graph (GRT) price prediction..\" > Click on the [collapse] link',\n            False,\n            False\n        )\n    \n        # Arrange\n        self.link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n        self.bug = Bug516(test)\n        self.bug.open_market_analysis_page(test)\n    \n        # Act\n>       MyCommon.search_and_open_an_article_in_market_analysis_page(d, \"The graph (GRT) price prediction\")\n\ntests/US_55_ReTestsManual/K_Alex_N/US_55_K_Alex_N_ReTestsManual_test.py:422: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/US_55_ReTestsManual/K_Alex_N/MyCommon.py:50: in search_and_open_an_article_in_market_analysis_page\n    open_the_article()\ntests/US_55_ReTestsManual/K_Alex_N/MyCommon.py:41: in open_the_article\n    driver.find_element(*ARTICLE_LOCATOR).click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fe70e154d40>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55903f90c076 \\\\u003Cunknown>\\\\n#22 0x7f3ccbe9ca94 \\\\u003Cunknown>\\\\n#23 0x7f3ccbf29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <b class=\"\">...</b> is not clickable at point (750, 10). Other element would receive the click: <span class=\"text-accord\">...</span>\nE         (Session info: chrome=131.0.6778.204)\nE       Stacktrace:\nE       #0 0x55903f90d1fa <unknown>\nE       #1 0x55903f41d810 <unknown>\nE       #2 0x55903f473206 <unknown>\nE       #3 0x55903f47116d <unknown>\nE       #4 0x55903f46e885 <unknown>\nE       #5 0x55903f46da48 <unknown>\nE       #6 0x55903f4611f5 <unknown>\nE       #7 0x55903f490582 <unknown>\nE       #8 0x55903f460b38 <unknown>\nE       #9 0x55903f49074e <unknown>\nE       #10 0x55903f4af007 <unknown>\nE       #11 0x55903f490323 <unknown>\nE       #12 0x55903f45ede0 <unknown>\nE       #13 0x55903f45fdbe <unknown>\nE       #14 0x55903f8d912b <unknown>\nE       #15 0x55903f8dd0c7 <unknown>\nE       #16 0x55903f8c66cc <unknown>\nE       #17 0x55903f8ddc47 <unknown>\nE       #18 0x55903f8ab67f <unknown>\nE       #19 0x55903f8fc288 <unknown>\nE       #20 0x55903f8fc450 <unknown>\nE       #21 0x55903f90c076 <unknown>\nE       #22 0x7f3ccbe9ca94 <unknown>\nE       #23 0x7f3ccbf29c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1736560813668,"stop":1736560813672,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"20bbb60ae970800c22f39b2dfae0c5b3\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'516'"},{"name":"desc_tc","value":"'Menu section [Markets] > Menu item [Markets analysis] > article \"The graph (GRT) price prediction..\" > Click on the [collapse] link'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1736560813673,"stop":1736560827155,"duration":13482},"status":"passed","steps":[{"name":"2025-01-11 01:50:43.996159   Start Authorization","time":{"start":1736560820910,"stop":1736560823576,"duration":2666},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"20bbb60ae970800c22f39b2dfae0c5b3\")>"},{"name":"link","value":"'https://capital.com/en-gb'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2025-01-11 01:50:43.996174   Start Deauthorization","time":{"start":1736560823576,"stop":1736560824288,"duration":712},"status":"passed","steps":[{"name":"Start Logout from account info menu in top bar","time":{"start":1736560823576,"stop":1736560824288,"duration":712},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"20bbb60ae970800c22f39b2dfae0c5b3\")>"},{"name":"link","value":"'https://capital.com/en-gb'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2025-01-11 01:50:43.996184   Set language and country","time":{"start":1736560824288,"stop":1736560827148,"duration":2860},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"20bbb60ae970800c22f39b2dfae0c5b3\")>"},{"name":"cur_language","value":"'en'"},{"name":"cur_country","value":"'au'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"20bbb60ae970800c22f39b2dfae0c5b3\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Markets\" menu, \"Market analysis\" submenu","time":{"start":1736560827155,"stop":1736560835491,"duration":8336},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"20bbb60ae970800c22f39b2dfae0c5b3\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'au'"},{"name":"link","value":"'https://capital.com/en-au'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"ea792169be4b4cf6","name":"Screenshot","source":"ea792169be4b4cf6.png","type":"image/png","size":349061},{"uid":"79c718b3479f95db","name":"stdout","source":"79c718b3479f95db.txt","type":"text/plain","size":5506}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":7,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1736560872851,"stop":1736560873041,"duration":190},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!516 | Menu section [Markets] > Menu item [Markets analysis] > article \"The graph (GRT) price prediction..\" > Click on the [collapse] link"},{"name":"feature","value":"Role: NoAuth"},{"name":"story","value":"Country: au"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.K_Alex_N"},{"name":"suite","value":"US_55_K_Alex_N_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az1705-565"},{"name":"thread","value":"43572-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.K_Alex_N.US_55_K_Alex_N_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'au'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":9,"skipped":0,"passed":0,"unknown":0,"total":14},"items":[{"uid":"21f404fc4ba9d682","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/284//#testresult/21f404fc4ba9d682","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <b class=\"\">...</b> is not clickable at point (750, 10). Other element would receive the click: <span class=\"text-accord\">...</span>\n  (Session info: chrome=131.0.6778.204)\nStacktrace:\n#0 0x5617b156d1fa <unknown>\n#1 0x5617b107d810 <unknown>\n#2 0x5617b10d3206 <unknown>\n#3 0x5617b10d116d <unknown>\n#4 0x5617b10ce885 <unknown>\n#5 0x5617b10cda48 <unknown>\n#6 0x5617b10c11f5 <unknown>\n#7 0x5617b10f0582 <unknown>\n#8 0x5617b10c0b38 <unknown>\n#9 0x5617b10f074e <unknown>\n#10 0x5617b110f007 <unknown>\n#11 0x5617b10f0323 <unknown>\n#12 0x5617b10bede0 <unknown>\n#13 0x5617b10bfdbe <unknown>\n#14 0x5617b153912b <unknown>\n#15 0x5617b153d0c7 <unknown>\n#16 0x5617b15266cc <unknown>\n#17 0x5617b153dc47 <unknown>\n#18 0x5617b150b67f <unknown>\n#19 0x5617b155c288 <unknown>\n#20 0x5617b155c450 <unknown>\n#21 0x5617b156c076 <unknown>\n#22 0x7fee62a9ca94 <unknown>\n#23 0x7fee62b29c3c <unknown>","time":{"start":1736474338807,"stop":1736474397457,"duration":58650}},{"uid":"84b29c58ebfc0f87","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/283//#testresult/84b29c58ebfc0f87","status":"broken","statusDetails":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//a[@aria-label=\"Go to the next page\"]\"}\n  (Session info: chrome=131.0.6778.204); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55f3804e41fa <unknown>\n#1 0x55f37fff4810 <unknown>\n#2 0x55f380043506 <unknown>\n#3 0x55f3800437a1 <unknown>\n#4 0x55f380088c24 <unknown>\n#5 0x55f3800675ad <unknown>\n#6 0x55f380086007 <unknown>\n#7 0x55f380067323 <unknown>\n#8 0x55f380035de0 <unknown>\n#9 0x55f380036dbe <unknown>\n#10 0x55f3804b012b <unknown>\n#11 0x55f3804b40c7 <unknown>\n#12 0x55f38049d6cc <unknown>\n#13 0x55f3804b4c47 <unknown>\n#14 0x55f38048267f <unknown>\n#15 0x55f3804d3288 <unknown>\n#16 0x55f3804d3450 <unknown>\n#17 0x55f3804e3076 <unknown>\n#18 0x7fc6fc09ca94 <unknown>\n#19 0x7fc6fc129c3c <unknown>","time":{"start":1736388420847,"stop":1736388585294,"duration":164447}},{"uid":"47564ab20acf095f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/281//#testresult/47564ab20acf095f","status":"failed","statusDetails":"Failed: Bug # 55!516 not possible to open page \"collapse\"","time":{"start":1736215308801,"stop":1736215361527,"duration":52726}},{"uid":"17f5c67554fa1897","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/279//#testresult/17f5c67554fa1897","status":"failed","statusDetails":"Failed: Bug # 55!516 not possible to open page \"collapse\"","time":{"start":1736042836436,"stop":1736042885479,"duration":49043}},{"uid":"c82c49596b981555","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/278//#testresult/c82c49596b981555","status":"failed","statusDetails":"Failed: Bug # 55!516 not possible to open page \"collapse\"","time":{"start":1735955888037,"stop":1735955940537,"duration":52500}},{"uid":"1deaf6ddb9f4060","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/276//#testresult/1deaf6ddb9f4060","status":"failed","statusDetails":"Failed: Bug # 55!516 not possible to open page \"collapse\"","time":{"start":1735783431508,"stop":1735783484409,"duration":52901}},{"uid":"e58118b2d175550","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/274//#testresult/e58118b2d175550","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <b class=\"\">...</b> is not clickable at point (750, 17). Other element would receive the click: <span class=\"text-accord\">...</span>\n  (Session info: chrome=131.0.6778.139)\nStacktrace:\n#0 0x5588b12f68fa <unknown>\n#1 0x5588b0e07d20 <unknown>\n#2 0x5588b0e5d766 <unknown>\n#3 0x5588b0e5b6cd <unknown>\n#4 0x5588b0e58de5 <unknown>\n#5 0x5588b0e57fa8 <unknown>\n#6 0x5588b0e4b765 <unknown>\n#7 0x5588b0e7aaf2 <unknown>\n#8 0x5588b0e4b0a8 <unknown>\n#9 0x5588b0e7acbe <unknown>\n#10 0x5588b0e99560 <unknown>\n#11 0x5588b0e7a893 <unknown>\n#12 0x5588b0e4930d <unknown>\n#13 0x5588b0e4a32e <unknown>\n#14 0x5588b12c300b <unknown>\n#15 0x5588b12c6f97 <unknown>\n#16 0x5588b12af71c <unknown>\n#17 0x5588b12c7b17 <unknown>\n#18 0x5588b12946cf <unknown>\n#19 0x5588b12e56b8 <unknown>\n#20 0x5588b12e5880 <unknown>\n#21 0x5588b12f5776 <unknown>\n#22 0x7efe0629ca94 <unknown>\n#23 0x7efe06329c3c <unknown>","time":{"start":1735611083001,"stop":1735611137475,"duration":54474}},{"uid":"2003ab6fd8915ba1","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/273//#testresult/2003ab6fd8915ba1","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <b class=\"\">...</b> is not clickable at point (750, 44). Other element would receive the click: <div class=\"grid_grid__2D3md topPanel_directions__2gpsL grid_gMdLg__9Xp_H grid_startToCenter__rpi6Z grid_flex__Nv3nG\">...</div>\n  (Session info: chrome=131.0.6778.139)\nStacktrace:\n#0 0x5619739b58fa <unknown>\n#1 0x5619734c6d20 <unknown>\n#2 0x56197351c766 <unknown>\n#3 0x56197351a6cd <unknown>\n#4 0x561973517de5 <unknown>\n#5 0x561973516fa8 <unknown>\n#6 0x56197350a765 <unknown>\n#7 0x561973539af2 <unknown>\n#8 0x56197350a0a8 <unknown>\n#9 0x561973539cbe <unknown>\n#10 0x561973558560 <unknown>\n#11 0x561973539893 <unknown>\n#12 0x56197350830d <unknown>\n#13 0x56197350932e <unknown>\n#14 0x56197398200b <unknown>\n#15 0x561973985f97 <unknown>\n#16 0x56197396e71c <unknown>\n#17 0x561973986b17 <unknown>\n#18 0x5619739536cf <unknown>\n#19 0x5619739a46b8 <unknown>\n#20 0x5619739a4880 <unknown>\n#21 0x5619739b4776 <unknown>\n#22 0x7f8bdb29ca94 <unknown>\n#23 0x7f8bdb329c3c <unknown>","time":{"start":1735523239200,"stop":1735523293667,"duration":54467}},{"uid":"268b78199575e8c7","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/272//#testresult/268b78199575e8c7","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <b class=\"\">...</b> is not clickable at point (750, 11). Other element would receive the click: <span class=\"text-accord\">...</span>\n  (Session info: chrome=131.0.6778.139)\nStacktrace:\n#0 0x5627947b28fa <unknown>\n#1 0x5627942c3d20 <unknown>\n#2 0x562794319766 <unknown>\n#3 0x5627943176cd <unknown>\n#4 0x562794314de5 <unknown>\n#5 0x562794313fa8 <unknown>\n#6 0x562794307765 <unknown>\n#7 0x562794336af2 <unknown>\n#8 0x5627943070a8 <unknown>\n#9 0x562794336cbe <unknown>\n#10 0x562794355560 <unknown>\n#11 0x562794336893 <unknown>\n#12 0x56279430530d <unknown>\n#13 0x56279430632e <unknown>\n#14 0x56279477f00b <unknown>\n#15 0x562794782f97 <unknown>\n#16 0x56279476b71c <unknown>\n#17 0x562794783b17 <unknown>\n#18 0x5627947506cf <unknown>\n#19 0x5627947a16b8 <unknown>\n#20 0x5627947a1880 <unknown>\n#21 0x5627947b1776 <unknown>\n#22 0x7fc533a9ca94 <unknown>\n#23 0x7fc533b29c3c <unknown>","time":{"start":1735437302376,"stop":1735437357775,"duration":55399}},{"uid":"42827988bc6d58e0","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/270//#testresult/42827988bc6d58e0","status":"failed","statusDetails":"Failed: Bug # 55!516 not possible to open page \"collapse\"","time":{"start":1735265308752,"stop":1735265357813,"duration":49061}},{"uid":"ab06bf78bc4b8c67","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/265//#testresult/ab06bf78bc4b8c67","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <b class=\"\">...</b> is not clickable at point (750, 30). Other element would receive the click: <div class=\"disclaimer_wrap__dTWqz\">...</div>\n  (Session info: chrome=131.0.6778.139)\nStacktrace:\n#0 0x55c75d19d8fa <unknown>\n#1 0x55c75ccaed20 <unknown>\n#2 0x55c75cd04766 <unknown>\n#3 0x55c75cd026cd <unknown>\n#4 0x55c75ccffde5 <unknown>\n#5 0x55c75ccfefa8 <unknown>\n#6 0x55c75ccf2765 <unknown>\n#7 0x55c75cd21af2 <unknown>\n#8 0x55c75ccf20a8 <unknown>\n#9 0x55c75cd21cbe <unknown>\n#10 0x55c75cd40560 <unknown>\n#11 0x55c75cd21893 <unknown>\n#12 0x55c75ccf030d <unknown>\n#13 0x55c75ccf132e <unknown>\n#14 0x55c75d16a00b <unknown>\n#15 0x55c75d16df97 <unknown>\n#16 0x55c75d15671c <unknown>\n#17 0x55c75d16eb17 <unknown>\n#18 0x55c75d13b6cf <unknown>\n#19 0x55c75d18c6b8 <unknown>\n#20 0x55c75d18c880 <unknown>\n#21 0x55c75d19c776 <unknown>\n#22 0x7f9cdfc9ca94 <unknown>\n#23 0x7f9cdfd29c3c <unknown>","time":{"start":1734833593004,"stop":1734833647611,"duration":54607}},{"uid":"371b77e9d88656ad","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/264//#testresult/371b77e9d88656ad","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <b class=\"\">...</b> is not clickable at point (750, 34). Other element would receive the click: <div class=\"grid_grid__2D3md topPanel_directions__2gpsL grid_gMdLg__9Xp_H grid_startToCenter__rpi6Z grid_flex__Nv3nG\">...</div>\n  (Session info: chrome=131.0.6778.139)\nStacktrace:\n#0 0x55e2bdd8c8fa <unknown>\n#1 0x55e2bd89dd20 <unknown>\n#2 0x55e2bd8f3766 <unknown>\n#3 0x55e2bd8f16cd <unknown>\n#4 0x55e2bd8eede5 <unknown>\n#5 0x55e2bd8edfa8 <unknown>\n#6 0x55e2bd8e1765 <unknown>\n#7 0x55e2bd910af2 <unknown>\n#8 0x55e2bd8e10a8 <unknown>\n#9 0x55e2bd910cbe <unknown>\n#10 0x55e2bd92f560 <unknown>\n#11 0x55e2bd910893 <unknown>\n#12 0x55e2bd8df30d <unknown>\n#13 0x55e2bd8e032e <unknown>\n#14 0x55e2bdd5900b <unknown>\n#15 0x55e2bdd5cf97 <unknown>\n#16 0x55e2bdd4571c <unknown>\n#17 0x55e2bdd5db17 <unknown>\n#18 0x55e2bdd2a6cf <unknown>\n#19 0x55e2bdd7b6b8 <unknown>\n#20 0x55e2bdd7b880 <unknown>\n#21 0x55e2bdd8b776 <unknown>\n#22 0x7fb45869ca94 <unknown>\n#23 0x7fb458729c3c <unknown>","time":{"start":1734747732136,"stop":1734747777255,"duration":45119}},{"uid":"64f54daf83fd4052","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/262//#testresult/64f54daf83fd4052","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <b class=\"\">...</b> is not clickable at point (750, 56). Other element would receive the click: <div class=\"grid_grid__2D3md topPanel_directions__2gpsL grid_gMdLg__9Xp_H grid_startToCenter__rpi6Z grid_flex__Nv3nG\">...</div>\n  (Session info: chrome=131.0.6778.139)\nStacktrace:\n#0 0x560c302c58fa <unknown>\n#1 0x560c2fdd6d20 <unknown>\n#2 0x560c2fe2c766 <unknown>\n#3 0x560c2fe2a6cd <unknown>\n#4 0x560c2fe27de5 <unknown>\n#5 0x560c2fe26fa8 <unknown>\n#6 0x560c2fe1a765 <unknown>\n#7 0x560c2fe49af2 <unknown>\n#8 0x560c2fe1a0a8 <unknown>\n#9 0x560c2fe49cbe <unknown>\n#10 0x560c2fe68560 <unknown>\n#11 0x560c2fe49893 <unknown>\n#12 0x560c2fe1830d <unknown>\n#13 0x560c2fe1932e <unknown>\n#14 0x560c3029200b <unknown>\n#15 0x560c30295f97 <unknown>\n#16 0x560c3027e71c <unknown>\n#17 0x560c30296b17 <unknown>\n#18 0x560c302636cf <unknown>\n#19 0x560c302b46b8 <unknown>\n#20 0x560c302b4880 <unknown>\n#21 0x560c302c4776 <unknown>\n#22 0x7f60c249ca94 <unknown>\n#23 0x7f60c2529c3c <unknown>","time":{"start":1734572930491,"stop":1734572986027,"duration":55536}}]},"tags":["us_55"]},"source":"3b77f69b457ff7c5.json","parameterValues":["'au'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoAuth'","'Chrome'"]}