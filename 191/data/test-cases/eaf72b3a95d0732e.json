{"uid":"eaf72b3a95d0732e","name":"TC_11.01.05.01_04 | Testing button [1. Create your account] in block [Steps trading]. Bid:11.01.05.01_04-fr.au.Auth","fullName":"tests.US_11_Education.US_11-01-05_Trading_courses.US_11-01-05-01_Trading_courses_test.TestTradingCoursesItem#test_04_create_your_account","historyId":"8b9ef5212bf91c2587a82038d28cd913","time":{"start":1706050856178,"stop":1706050896439,"duration":40261},"description":"\n        Check: Steps trading -> button [1. Create your account]\n        Language: All. License: All. Role: All.\n        ","descriptionHtml":"<pre><code>    Check: Steps trading -&gt; button [1. Create your account]\n    Language: All. License: All. Role: All.\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 34.809\n  (Session info: chrome=120.0.6099.216)\nStacktrace:\n#0 0x55a15da2ff83 <unknown>\n#1 0x55a15d6e8cf7 <unknown>\n#2 0x55a15d6ce7a1 <unknown>\n#3 0x55a15d6ce44a <unknown>\n#4 0x55a15d6cc7e1 <unknown>\n#5 0x55a15d6cd18a <unknown>\n#6 0x55a15d6de07c <unknown>\n#7 0x55a15d6f67c1 <unknown>\n#8 0x55a15d6fc6bb <unknown>\n#9 0x55a15d6cd92d <unknown>\n#10 0x55a15d6f65c2 <unknown>\n#11 0x55a15d781204 <unknown>\n#12 0x55a15d761e53 <unknown>\n#13 0x55a15d729dd4 <unknown>\n#14 0x55a15d72b1de <unknown>\n#15 0x55a15d9f4531 <unknown>\n#16 0x55a15d9f8455 <unknown>\n#17 0x55a15d9e0f55 <unknown>\n#18 0x55a15d9f90ef <unknown>\n#19 0x55a15d9c499f <unknown>\n#20 0x55a15da1d008 <unknown>\n#21 0x55a15da1d1d7 <unknown>\n#22 0x55a15da2f124 <unknown>\n#23 0x7f3b3e694ac3 <unknown>","statusTrace":"self = <US_11-01-05-01_Trading_courses_test.TestTradingCoursesItem object at 0x7effcbb96750>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"931b79b210ced2c63947eb3966c5c255\")>\ncur_language = 'fr', cur_country = 'au', cur_role = 'Auth'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\ncur_item_link = 'https://capital.com/fr/finance-questionnaire-marches'\n\n    @allure.step(\"Start test_11.01.05.01_04 button [1. Create your account] in block 'Steps trading'.\")\n    @pytest.mark.test_04\n    def test_04_create_your_account(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link):\n        \"\"\"\n        Check: Steps trading -> button [1. Create your account]\n        Language: All. License: All. Role: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"11.01.05\", \"Education > Menu Item [Trading courses]\",\n            \".01_04\", \"Testing button [1. Create your account] in block [Steps trading]\")\n    \n        if cur_language in [\"ar\"]:\n            Common().skip_test_for_language(cur_language)\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = BlockStepTrading(d, cur_item_link, bid)\n>       test_element.full_test(d, cur_language, cur_country, cur_role, cur_item_link)\n\ntests/US_11_Education/US_11-01-05_Trading_courses/US_11-01-05-01_Trading_courses_test.py:117: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/BlockStepTrading.py:33: in full_test\n    self.arrange_(d, cur_item_link)\npages/Elements/BlockStepTrading.py:48: in arrange_\n    self.open_page()\npages/base_page.py:142: in open_page\n    self.browser.get(self.link)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:357: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7effcbe1bc10>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x55a15da1d1d7 \\\\u003Cunknown>\\\\n#22 0x55a15da2f124 \\\\u003Cunknown>\\\\n#23 0x7f3b3e694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 34.809\nE         (Session info: chrome=120.0.6099.216)\nE       Stacktrace:\nE       #0 0x55a15da2ff83 <unknown>\nE       #1 0x55a15d6e8cf7 <unknown>\nE       #2 0x55a15d6ce7a1 <unknown>\nE       #3 0x55a15d6ce44a <unknown>\nE       #4 0x55a15d6cc7e1 <unknown>\nE       #5 0x55a15d6cd18a <unknown>\nE       #6 0x55a15d6de07c <unknown>\nE       #7 0x55a15d6f67c1 <unknown>\nE       #8 0x55a15d6fc6bb <unknown>\nE       #9 0x55a15d6cd92d <unknown>\nE       #10 0x55a15d6f65c2 <unknown>\nE       #11 0x55a15d781204 <unknown>\nE       #12 0x55a15d761e53 <unknown>\nE       #13 0x55a15d729dd4 <unknown>\nE       #14 0x55a15d72b1de <unknown>\nE       #15 0x55a15d9f4531 <unknown>\nE       #16 0x55a15d9f8455 <unknown>\nE       #17 0x55a15d9e0f55 <unknown>\nE       #18 0x55a15d9f90ef <unknown>\nE       #19 0x55a15d9c499f <unknown>\nE       #20 0x55a15da1d008 <unknown>\nE       #21 0x55a15da1d1d7 <unknown>\nE       #22 0x55a15da2f124 <unknown>\nE       #23 0x7f3b3e694ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1706050826165,"stop":1706050827047,"duration":882},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1706050827047,"stop":1706050827047,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1706050827047,"stop":1706050827047,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1706050827047,"stop":1706050827047,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1706050827048,"stop":1706050827048,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1706050827048,"stop":1706050827048,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1706050827048,"stop":1706050827048,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Steps trading -> button [1. Create your account]\n        Language: All. License: All. Role: All.\n        ","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 34.809\n  (Session info: chrome=120.0.6099.216)\nStacktrace:\n#0 0x55a15da2ff83 <unknown>\n#1 0x55a15d6e8cf7 <unknown>\n#2 0x55a15d6ce7a1 <unknown>\n#3 0x55a15d6ce44a <unknown>\n#4 0x55a15d6cc7e1 <unknown>\n#5 0x55a15d6cd18a <unknown>\n#6 0x55a15d6de07c <unknown>\n#7 0x55a15d6f67c1 <unknown>\n#8 0x55a15d6fc6bb <unknown>\n#9 0x55a15d6cd92d <unknown>\n#10 0x55a15d6f65c2 <unknown>\n#11 0x55a15d781204 <unknown>\n#12 0x55a15d761e53 <unknown>\n#13 0x55a15d729dd4 <unknown>\n#14 0x55a15d72b1de <unknown>\n#15 0x55a15d9f4531 <unknown>\n#16 0x55a15d9f8455 <unknown>\n#17 0x55a15d9e0f55 <unknown>\n#18 0x55a15d9f90ef <unknown>\n#19 0x55a15d9c499f <unknown>\n#20 0x55a15da1d008 <unknown>\n#21 0x55a15da1d1d7 <unknown>\n#22 0x55a15da2f124 <unknown>\n#23 0x7f3b3e694ac3 <unknown>","statusTrace":"self = <US_11-01-05-01_Trading_courses_test.TestTradingCoursesItem object at 0x7effcbb96750>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"931b79b210ced2c63947eb3966c5c255\")>\ncur_language = 'fr', cur_country = 'au', cur_role = 'Auth'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\ncur_item_link = 'https://capital.com/fr/finance-questionnaire-marches'\n\n    @allure.step(\"Start test_11.01.05.01_04 button [1. Create your account] in block 'Steps trading'.\")\n    @pytest.mark.test_04\n    def test_04_create_your_account(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link):\n        \"\"\"\n        Check: Steps trading -> button [1. Create your account]\n        Language: All. License: All. Role: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"11.01.05\", \"Education > Menu Item [Trading courses]\",\n            \".01_04\", \"Testing button [1. Create your account] in block [Steps trading]\")\n    \n        if cur_language in [\"ar\"]:\n            Common().skip_test_for_language(cur_language)\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = BlockStepTrading(d, cur_item_link, bid)\n>       test_element.full_test(d, cur_language, cur_country, cur_role, cur_item_link)\n\ntests/US_11_Education/US_11-01-05_Trading_courses/US_11-01-05-01_Trading_courses_test.py:117: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/BlockStepTrading.py:33: in full_test\n    self.arrange_(d, cur_item_link)\npages/Elements/BlockStepTrading.py:48: in arrange_\n    self.open_page()\npages/base_page.py:142: in open_page\n    self.browser.get(self.link)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:357: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7effcbe1bc10>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x55a15da1d1d7 \\\\u003Cunknown>\\\\n#22 0x55a15da2f124 \\\\u003Cunknown>\\\\n#23 0x7f3b3e694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 34.809\nE         (Session info: chrome=120.0.6099.216)\nE       Stacktrace:\nE       #0 0x55a15da2ff83 <unknown>\nE       #1 0x55a15d6e8cf7 <unknown>\nE       #2 0x55a15d6ce7a1 <unknown>\nE       #3 0x55a15d6ce44a <unknown>\nE       #4 0x55a15d6cc7e1 <unknown>\nE       #5 0x55a15d6cd18a <unknown>\nE       #6 0x55a15d6de07c <unknown>\nE       #7 0x55a15d6f67c1 <unknown>\nE       #8 0x55a15d6fc6bb <unknown>\nE       #9 0x55a15d6cd92d <unknown>\nE       #10 0x55a15d6f65c2 <unknown>\nE       #11 0x55a15d781204 <unknown>\nE       #12 0x55a15d761e53 <unknown>\nE       #13 0x55a15d729dd4 <unknown>\nE       #14 0x55a15d72b1de <unknown>\nE       #15 0x55a15d9f4531 <unknown>\nE       #16 0x55a15d9f8455 <unknown>\nE       #17 0x55a15d9e0f55 <unknown>\nE       #18 0x55a15d9f90ef <unknown>\nE       #19 0x55a15d9c499f <unknown>\nE       #20 0x55a15da1d008 <unknown>\nE       #21 0x55a15da1d1d7 <unknown>\nE       #22 0x55a15da2f124 <unknown>\nE       #23 0x7f3b3e694ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","steps":[{"name":"Start test_11.01.05.01_04 button [1. Create your account] in block 'Steps trading'.","time":{"start":1706050856178,"stop":1706050896438,"duration":40260},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 34.809\n  (Session info: chrome=120.0.6099.216)\nStacktrace:\n#0 0x55a15da2ff83 <unknown>\n#1 0x55a15d6e8cf7 <unknown>\n#2 0x55a15d6ce7a1 <unknown>\n#3 0x55a15d6ce44a <unknown>\n#4 0x55a15d6cc7e1 <unknown>\n#5 0x55a15d6cd18a <unknown>\n#6 0x55a15d6de07c <unknown>\n#7 0x55a15d6f67c1 <unknown>\n#8 0x55a15d6fc6bb <unknown>\n#9 0x55a15d6cd92d <unknown>\n#10 0x55a15d6f65c2 <unknown>\n#11 0x55a15d781204 <unknown>\n#12 0x55a15d761e53 <unknown>\n#13 0x55a15d729dd4 <unknown>\n#14 0x55a15d72b1de <unknown>\n#15 0x55a15d9f4531 <unknown>\n#16 0x55a15d9f8455 <unknown>\n#17 0x55a15d9e0f55 <unknown>\n#18 0x55a15d9f90ef <unknown>\n#19 0x55a15d9c499f <unknown>\n#20 0x55a15da1d008 <unknown>\n#21 0x55a15da1d1d7 <unknown>\n#22 0x55a15da2f124 <unknown>\n#23 0x7f3b3e694ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_11_Education/US_11-01-05_Trading_courses/US_11-01-05-01_Trading_courses_test.py\", line 117, in test_04_create_your_account\n    test_element.full_test(d, cur_language, cur_country, cur_role, cur_item_link)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/BlockStepTrading.py\", line 33, in full_test\n    self.arrange_(d, cur_item_link)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/BlockStepTrading.py\", line 48, in arrange_\n    self.open_page()\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/base_page.py\", line 142, in open_page\n    self.browser.get(self.link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 357, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Start Building dynamic arguments for allure report generation","time":{"start":1706050856178,"stop":1706050856179,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"931b79b210ced2c63947eb3966c5c255\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'fr'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'Auth'"},{"name":"us","value":"'11.01.05'"},{"name":"desc_us","value":"'Education > Menu Item [Trading courses]'"},{"name":"num_tc","value":"'.01_04'"},{"name":"desc_tc","value":"'Testing button [1. Create your account] in block [Steps trading]'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Set preconditions","time":{"start":1706050856180,"stop":1706050861424,"duration":5244},"status":"passed","steps":[{"name":"Start Checking Captcha","time":{"start":1706050856387,"stop":1706050861424,"duration":5037},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"driver","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"931b79b210ced2c63947eb3966c5c255\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"931b79b210ced2c63947eb3966c5c255\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'fr'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"931b79b210ced2c63947eb3966c5c255\")>"},{"name":"cur_language","value":"'fr'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_item_link","value":"'https://capital.com/fr/finance-questionnaire-marches'"}],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"fcbf32d0ba7cc00e","name":"Screenshot","source":"fcbf32d0ba7cc00e.png","type":"image/png","size":127357},{"uid":"adffde9fc7a5368b","name":"stdout","source":"adffde9fc7a5368b.txt","type":"text/plain","size":924}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1706051023223,"stop":1706051023366,"duration":143},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_11.01.05 | Education > Menu Item [Trading courses]"},{"name":"feature","value":"Language: fr"},{"name":"story","value":"Country: au / Role: Auth"},{"name":"tag","value":"test_04"},{"name":"tag","value":"us_11_01_05"},{"name":"parentSuite","value":"tests.US_11_Education.US_11-01-05_Trading_courses"},{"name":"suite","value":"US_11-01-05-01_Trading_courses_test"},{"name":"subSuite","value":"TestTradingCoursesItem"},{"name":"host","value":"fv-az569-193"},{"name":"thread","value":"9361-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_11_Education.US_11-01-05_Trading_courses.US_11-01-05-01_Trading_courses_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'au'"},{"name":"cur_item_link","value":"'https://capital.com/fr/finance-questionnaire-marches'"},{"name":"cur_language","value":"'fr'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_role","value":"'Auth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"8ddf998a453f59e3","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/175//#testresult/8ddf998a453f59e3","status":"passed","time":{"start":1705566436044,"stop":1705566463200,"duration":27156}}]},"tags":["test_04","us_11_01_05"]},"source":"eaf72b3a95d0732e.json","parameterValues":["'au'","'https://capital.com/fr/finance-questionnaire-marches'","'fr'","'aqa.tomelo.an@gmail.com'","'iT9Vgqi6d$fiZ*Z'","'Auth'","'Chrome'"]}