{"uid":"f35cee9043f544d1","name":"TC_01.01.00_001 | Testing button [Sell]. Bid:01.01.00_001-cn.au.NoAuth","fullName":"tests.US_01_Markets.US_01-01_All_markets.US_01-01-00_All_Markets_test.TestAllMarkets#test_001_sell_trading_instrument","historyId":"05a307569f475c015114df0f4012da01","time":{"start":1713413216756,"stop":1713413223305,"duration":6549},"description":"\n        Check: button [Sell] in Widget 'Trading instrument'\n        Language: All License: All (except FCA) Role: All.\n        ","descriptionHtml":"<pre><code>    Check: button [Sell] in Widget 'Trading instrument'\n    Language: All License: All (except FCA) Role: All.\n</code></pre>\n","status":"broken","statusMessage":"TypeError: selenium.webdriver.remote.webdriver.WebDriver.find_element() argument after * must be an iterable, not NoneType","statusTrace":"self = <US_01-01-00_All_Markets_test.TestAllMarkets object at 0x7f0ebcb524b0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3537ec6410f26ed9feeaffe462477163\")>\ncur_language = 'cn', cur_country = 'au', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_market = 'Cryptocurrencies', cur_sort = 'Top risers'\n\n    @allure.step(\"Start test of button [Sell] in Widget 'Trading instrument'\")\n    @pytest.mark.test_001\n    def test_001_sell_trading_instrument(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_market, cur_sort):\n        \"\"\"\n        Check: button [Sell] in Widget 'Trading instrument'\n        Language: All License: All (except FCA) Role: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"01.01\", \"Markets > Menu item [All markets]\",\n            \".00_001\", \"Testing button [Sell]\")\n    \n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n    \n        page_conditions = Conditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        page_menu = MenuSection(d, link)\n        cur_page_url = page_menu.open_market_menu_all_markets_submenu(d, cur_language, cur_country, link)\n    \n        test_element = TableTradingInstrumentsSellButtonAllMarkets(d, cur_page_url, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_page_url, cur_market, cur_sort)\n\ntests/US_01_Markets/US_01-01_All_markets/US_01-01-00_All_Markets_test.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/TableTradingInstrumentsSellButtonAllMarkets.py:56: in full_test_with_tpi\n    item_list = self.arrange_(d, cur_item_link, cur_market, cur_sort)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Elements.TableTradingInstrumentsSellButtonAllMarkets.TableTradingInstrumentsSellButtonAllMarkets object at 0x7f0ebc508d10>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3537ec6410f26ed9feeaffe462477163\")>\ncur_item_link = 'https://capital.com/cn/derivative-financial-instruments'\ncur_market = 'Cryptocurrencies', cur_sort = 'Top risers'\n\n    def arrange_(self, d, cur_item_link, cur_market, cur_sort):\n        global COUNT_OF_RUNS\n        print(\n            f\"\\n{datetime.now()}   1. Arrange for TABLE_TRADING_INSTRUMENTS and '{cur_sort}' cur_sort\"\n        )\n    \n        if not self.current_page_is(cur_item_link):\n            self.link = cur_item_link\n            self.open_page()\n    \n        print(f\"{datetime.now()}   TABLE_TRADING_INSTRUMENTS present on this page? =>\")\n        table_list = self.driver.find_elements(\n            *MarketSortAllMarketsLocators.TABLE_TRADING_INSTRUMENTS\n        )\n        if len(table_list) == 0:\n            print(\n                f\"{datetime.now()}   => TABLE_TRADING_INSTRUMENTS is NOT present on this page\\n\"\n            )\n            Common().pytest_fail(\"Bug # ??? Testing element is not on this page\")\n    \n        print(\n            f\"{datetime.now()}   => TABLE_TRADING_INSTRUMENTS is present on the page!\"\n        )\n    \n        print(f\"{datetime.now()}   IS MARKETS_LIST present on this page? =>\")\n        markets_list = self.driver.find_elements(*MarketSortAllMarketsLocators.ALL_TABS)\n        if len(markets_list) == 0:\n            print(f\"{datetime.now()}   => MARKETS_LIST is NOT present on this page\\n\")\n            Common().pytest_fail(\"Bug # ??? Testing element is not on this page\")\n        print(f\"{datetime.now()}   => MARKETS_LIST is present on the page!\")\n    \n        match cur_market:\n            case \"All\":\n                self.market_name = MarketSortAllMarketsLocators.ALL_MARKETS_TAB\n            case \"Commodities\":\n                self.market_name = MarketSortAllMarketsLocators.COMMODITIES_MARKET_TAB\n            case \"Indices\":\n                self.market_name = MarketSortAllMarketsLocators.INDICES_MARKET_TAB\n            case \"Crypto\":\n                self.market_name = MarketSortAllMarketsLocators.CRYPTO_MARKET_TAB\n            case \"Shares\":\n                self.market_name = MarketSortAllMarketsLocators.SHARES_MARKET_TAB\n            case \"Forex\":\n                self.market_name = MarketSortAllMarketsLocators.FOREX_MARKET_TAB\n    \n        print(f\"{datetime.now()}   Start scroll and click cur_market '{cur_market}' =>\")\n        self.driver.execute_script(\n            'return arguments[0].scrollIntoView({block: \"center\", inline: \"nearest\"});',\n            markets_list[0],\n        )\n>       self.current_market = self.driver.find_element(*self.market_name)\nE       TypeError: selenium.webdriver.remote.webdriver.WebDriver.find_element() argument after * must be an iterable, not NoneType\n\npages/Elements/TableTradingInstrumentsSellButtonAllMarkets.py:123: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1713412533240,"stop":1713412533652,"duration":412},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1713412533653,"stop":1713412533653,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1713412533653,"stop":1713412533653,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1713412533653,"stop":1713412533653,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1713412533653,"stop":1713412533653,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1713412533653,"stop":1713412533653,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1713412894384,"stop":1713412894384,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_sort","time":{"start":1713413216755,"stop":1713413216755,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_market","time":{"start":1713413216755,"stop":1713413216755,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: button [Sell] in Widget 'Trading instrument'\n        Language: All License: All (except FCA) Role: All.\n        ","status":"broken","statusMessage":"TypeError: selenium.webdriver.remote.webdriver.WebDriver.find_element() argument after * must be an iterable, not NoneType","statusTrace":"self = <US_01-01-00_All_Markets_test.TestAllMarkets object at 0x7f0ebcb524b0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3537ec6410f26ed9feeaffe462477163\")>\ncur_language = 'cn', cur_country = 'au', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_market = 'Cryptocurrencies', cur_sort = 'Top risers'\n\n    @allure.step(\"Start test of button [Sell] in Widget 'Trading instrument'\")\n    @pytest.mark.test_001\n    def test_001_sell_trading_instrument(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_market, cur_sort):\n        \"\"\"\n        Check: button [Sell] in Widget 'Trading instrument'\n        Language: All License: All (except FCA) Role: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"01.01\", \"Markets > Menu item [All markets]\",\n            \".00_001\", \"Testing button [Sell]\")\n    \n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n    \n        page_conditions = Conditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        page_menu = MenuSection(d, link)\n        cur_page_url = page_menu.open_market_menu_all_markets_submenu(d, cur_language, cur_country, link)\n    \n        test_element = TableTradingInstrumentsSellButtonAllMarkets(d, cur_page_url, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_page_url, cur_market, cur_sort)\n\ntests/US_01_Markets/US_01-01_All_markets/US_01-01-00_All_Markets_test.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/TableTradingInstrumentsSellButtonAllMarkets.py:56: in full_test_with_tpi\n    item_list = self.arrange_(d, cur_item_link, cur_market, cur_sort)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Elements.TableTradingInstrumentsSellButtonAllMarkets.TableTradingInstrumentsSellButtonAllMarkets object at 0x7f0ebc508d10>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3537ec6410f26ed9feeaffe462477163\")>\ncur_item_link = 'https://capital.com/cn/derivative-financial-instruments'\ncur_market = 'Cryptocurrencies', cur_sort = 'Top risers'\n\n    def arrange_(self, d, cur_item_link, cur_market, cur_sort):\n        global COUNT_OF_RUNS\n        print(\n            f\"\\n{datetime.now()}   1. Arrange for TABLE_TRADING_INSTRUMENTS and '{cur_sort}' cur_sort\"\n        )\n    \n        if not self.current_page_is(cur_item_link):\n            self.link = cur_item_link\n            self.open_page()\n    \n        print(f\"{datetime.now()}   TABLE_TRADING_INSTRUMENTS present on this page? =>\")\n        table_list = self.driver.find_elements(\n            *MarketSortAllMarketsLocators.TABLE_TRADING_INSTRUMENTS\n        )\n        if len(table_list) == 0:\n            print(\n                f\"{datetime.now()}   => TABLE_TRADING_INSTRUMENTS is NOT present on this page\\n\"\n            )\n            Common().pytest_fail(\"Bug # ??? Testing element is not on this page\")\n    \n        print(\n            f\"{datetime.now()}   => TABLE_TRADING_INSTRUMENTS is present on the page!\"\n        )\n    \n        print(f\"{datetime.now()}   IS MARKETS_LIST present on this page? =>\")\n        markets_list = self.driver.find_elements(*MarketSortAllMarketsLocators.ALL_TABS)\n        if len(markets_list) == 0:\n            print(f\"{datetime.now()}   => MARKETS_LIST is NOT present on this page\\n\")\n            Common().pytest_fail(\"Bug # ??? Testing element is not on this page\")\n        print(f\"{datetime.now()}   => MARKETS_LIST is present on the page!\")\n    \n        match cur_market:\n            case \"All\":\n                self.market_name = MarketSortAllMarketsLocators.ALL_MARKETS_TAB\n            case \"Commodities\":\n                self.market_name = MarketSortAllMarketsLocators.COMMODITIES_MARKET_TAB\n            case \"Indices\":\n                self.market_name = MarketSortAllMarketsLocators.INDICES_MARKET_TAB\n            case \"Crypto\":\n                self.market_name = MarketSortAllMarketsLocators.CRYPTO_MARKET_TAB\n            case \"Shares\":\n                self.market_name = MarketSortAllMarketsLocators.SHARES_MARKET_TAB\n            case \"Forex\":\n                self.market_name = MarketSortAllMarketsLocators.FOREX_MARKET_TAB\n    \n        print(f\"{datetime.now()}   Start scroll and click cur_market '{cur_market}' =>\")\n        self.driver.execute_script(\n            'return arguments[0].scrollIntoView({block: \"center\", inline: \"nearest\"});',\n            markets_list[0],\n        )\n>       self.current_market = self.driver.find_element(*self.market_name)\nE       TypeError: selenium.webdriver.remote.webdriver.WebDriver.find_element() argument after * must be an iterable, not NoneType\n\npages/Elements/TableTradingInstrumentsSellButtonAllMarkets.py:123: TypeError","steps":[{"name":"Start test of button [Sell] in Widget 'Trading instrument'","time":{"start":1713413216756,"stop":1713413223304,"duration":6548},"status":"broken","statusMessage":"TypeError: selenium.webdriver.remote.webdriver.WebDriver.find_element() argument after * must be an iterable, not NoneType\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_01_Markets/US_01-01_All_markets/US_01-01-00_All_Markets_test.py\", line 45, in test_001_sell_trading_instrument\n    test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_page_url, cur_market, cur_sort)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/TableTradingInstrumentsSellButtonAllMarkets.py\", line 56, in full_test_with_tpi\n    item_list = self.arrange_(d, cur_item_link, cur_market, cur_sort)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/TableTradingInstrumentsSellButtonAllMarkets.py\", line 123, in arrange_\n    self.current_market = self.driver.find_element(*self.market_name)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[{"name":"Preconditions","time":{"start":1713413216758,"stop":1713413219731,"duration":2973},"status":"passed","steps":[{"name":"2024-04-18 03:55:33.188482   Start Checking Captcha","time":{"start":1713413218697,"stop":1713413219726,"duration":1029},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3537ec6410f26ed9feeaffe462477163\")>"},{"name":"host","value":"'https://capital.com/'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'cn'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Markets\" menu, \"All Markets\" submenu","time":{"start":1713413219731,"stop":1713413223285,"duration":3554},"status":"passed","steps":[{"name":"Focus moved to 'Markets' menu","time":{"start":1713413219739,"stop":1713413221530,"duration":1791},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3537ec6410f26ed9feeaffe462477163\")>"},{"name":"test_language","value":"'cn'"},{"name":"test_country","value":"'au'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Focus move to 'All Markets' submenu and click.","time":{"start":1713413221530,"stop":1713413222987,"duration":1457},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3537ec6410f26ed9feeaffe462477163\")>"},{"name":"test_language","value":"'cn'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3537ec6410f26ed9feeaffe462477163\")>"},{"name":"cur_language","value":"'cn'"},{"name":"cur_country","value":"'au'"},{"name":"link","value":"'https://capital.com/cn'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Start Full test [Sell] button on Table Widget Trading Instruments","time":{"start":1713413223285,"stop":1713413223304,"duration":19},"status":"broken","statusMessage":"TypeError: selenium.webdriver.remote.webdriver.WebDriver.find_element() argument after * must be an iterable, not NoneType\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/TableTradingInstrumentsSellButtonAllMarkets.py\", line 56, in full_test_with_tpi\n    item_list = self.arrange_(d, cur_item_link, cur_market, cur_sort)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/TableTradingInstrumentsSellButtonAllMarkets.py\", line 123, in arrange_\n    self.current_market = self.driver.find_element(*self.market_name)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3537ec6410f26ed9feeaffe462477163\")>"},{"name":"cur_language","value":"'cn'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_item_link","value":"'https://capital.com/cn/derivative-financial-instruments'"},{"name":"cur_market","value":"'Cryptocurrencies'"},{"name":"cur_sort","value":"'Top risers'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3537ec6410f26ed9feeaffe462477163\")>"},{"name":"cur_language","value":"'cn'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_market","value":"'Cryptocurrencies'"},{"name":"cur_sort","value":"'Top risers'"}],"shouldDisplayMessage":false,"stepsCount":6,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"f3b0b12ae04a58fc","name":"Screenshot","source":"f3b0b12ae04a58fc.png","type":"image/png","size":87107},{"uid":"9dedb50b50cf4536","name":"stdout","source":"9dedb50b50cf4536.txt","type":"text/plain","size":3294}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":7,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1713413752904,"stop":1713413753066,"duration":162},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_01.01 | Markets > Menu item [All markets]"},{"name":"feature","value":"Language: cn"},{"name":"story","value":"Country: au / Role: NoAuth"},{"name":"tag","value":"test_001"},{"name":"tag","value":"us_01_01_00"},{"name":"parentSuite","value":"tests.US_01_Markets.US_01-01_All_markets"},{"name":"suite","value":"US_01-01-00_All_Markets_test"},{"name":"subSuite","value":"TestAllMarkets"},{"name":"host","value":"fv-az1016-487"},{"name":"thread","value":"4755-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_01_Markets.US_01-01_All_markets.US_01-01-00_All_Markets_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'au'"},{"name":"cur_language","value":"'cn'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_market","value":"'Cryptocurrencies'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_sort","value":"'Top risers'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["us_01_01_00","test_001"]},"source":"f35cee9043f544d1.json","parameterValues":["'au'","'cn'","'test001.miketar+1@gmail.com'","'Cryptocurrencies'","'Qwer1234-!@#$'","'NoAuth'","'Top risers'","'Chrome'"]}