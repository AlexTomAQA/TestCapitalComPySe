{"uid":"9d61de4a18bc827","name":"TC_11.01.03.01_03 | Testing button [Trade] in Most traded block. Bid:11.01.03.01_03-fr.ae.NoReg","fullName":"tests.US_11_Education.US_11-01-03_cfd_trading_guide.us_11-01-03-01_cfd_trading_guide_test.TestCFDTradingGuide#test_03_most_traded_trade_button","historyId":"66e99233d92885cc98708e9384a12489","time":{"start":1706673670418,"stop":1706673675554,"duration":5136},"description":"\n        Check: Button [Trade] in Most traded block\n        Language: All. License: All.\n        ","descriptionHtml":"<pre><code>    Check: Button [Trade] in Most traded block\n    Language: All. License: All.\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.JavascriptException: Message: javascript error: Cannot read properties of undefined (reading 'classList')\n  (Session info: chrome=120.0.6099.224)\nStacktrace:\n#0 0x55ed8b201f83 <unknown>\n#1 0x55ed8aebacf7 <unknown>\n#2 0x55ed8aec12a3 <unknown>\n#3 0x55ed8aec3bb4 <unknown>\n#4 0x55ed8af53ba3 <unknown>\n#5 0x55ed8af340b2 <unknown>\n#6 0x55ed8af53006 <unknown>\n#7 0x55ed8af33e53 <unknown>\n#8 0x55ed8aefbdd4 <unknown>\n#9 0x55ed8aefd1de <unknown>\n#10 0x55ed8b1c6531 <unknown>\n#11 0x55ed8b1ca455 <unknown>\n#12 0x55ed8b1b2f55 <unknown>\n#13 0x55ed8b1cb0ef <unknown>\n#14 0x55ed8b19699f <unknown>\n#15 0x55ed8b1ef008 <unknown>\n#16 0x55ed8b1ef1d7 <unknown>\n#17 0x55ed8b201124 <unknown>\n#18 0x7fcfebe94ac3 <unknown>","statusTrace":"self = <us_11-01-03-01_cfd_trading_guide_test.TestCFDTradingGuide object at 0x7f57714eff50>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ae7c57549405a5bb23e8fe7fc6ffef50\")>\ncur_language = 'fr', cur_country = 'ae', cur_role = 'NoReg'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\ncur_item_link = 'https://capital.com/fr/explication-cfd-trading'\n\n    @allure.step(\"Start test of buttons [Trade] in Most traded block\")\n    @pytest.mark.test_03\n    def test_03_most_traded_trade_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link):\n        \"\"\"\n        Check: Button [Trade] in Most traded block\n        Language: All. License: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"11.01.03\", \"Education > Menu item [CFD trading guide]\",\n            \".01_03\", \"Testing button [Trade] in Most traded block\")\n    \n        Common().check_language_in_list_and_skip_if_not_present(\n            cur_language, [\"\", \"de\", \"es\", \"fr\", \"nl\", \"pl\", \"ro\", \"ru\", \"zh\"])\n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = ButtonTradeOnWidgetMostTraded(d, cur_item_link, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link)\n\ntests/US_11_Education/US_11-01-03_cfd_trading_guide/us_11-01-03-01_cfd_trading_guide_test.py:118: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/ButtonTradeOnWidgetMostTraded.py:33: in full_test_with_tpi\n    trade_instrument = self.element_click_v4(index)\npages/Elements/ButtonTradeOnWidgetMostTraded.py:117: in element_click_v4\n    self.driver.execute_script('document.getElementsByClassName(\"js-mostTraded\")[0].'\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:407: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f5771579ed0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"javascript error\",\"message\":\"javascript error: Cannot read properties of ...\\\\n#16 0x55ed8b1ef1d7 \\\\u003Cunknown>\\\\n#17 0x55ed8b201124 \\\\u003Cunknown>\\\\n#18 0x7fcfebe94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.JavascriptException: Message: javascript error: Cannot read properties of undefined (reading 'classList')\nE         (Session info: chrome=120.0.6099.224)\nE       Stacktrace:\nE       #0 0x55ed8b201f83 <unknown>\nE       #1 0x55ed8aebacf7 <unknown>\nE       #2 0x55ed8aec12a3 <unknown>\nE       #3 0x55ed8aec3bb4 <unknown>\nE       #4 0x55ed8af53ba3 <unknown>\nE       #5 0x55ed8af340b2 <unknown>\nE       #6 0x55ed8af53006 <unknown>\nE       #7 0x55ed8af33e53 <unknown>\nE       #8 0x55ed8aefbdd4 <unknown>\nE       #9 0x55ed8aefd1de <unknown>\nE       #10 0x55ed8b1c6531 <unknown>\nE       #11 0x55ed8b1ca455 <unknown>\nE       #12 0x55ed8b1b2f55 <unknown>\nE       #13 0x55ed8b1cb0ef <unknown>\nE       #14 0x55ed8b19699f <unknown>\nE       #15 0x55ed8b1ef008 <unknown>\nE       #16 0x55ed8b1ef1d7 <unknown>\nE       #17 0x55ed8b201124 <unknown>\nE       #18 0x7fcfebe94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: JavascriptException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1706673457702,"stop":1706673458088,"duration":386},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1706673458088,"stop":1706673458088,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1706673458088,"stop":1706673458088,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1706673458088,"stop":1706673458088,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1706673458089,"stop":1706673458089,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1706673458089,"stop":1706673458089,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1706673647115,"stop":1706673647115,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [Trade] in Most traded block\n        Language: All. License: All.\n        ","status":"broken","statusMessage":"selenium.common.exceptions.JavascriptException: Message: javascript error: Cannot read properties of undefined (reading 'classList')\n  (Session info: chrome=120.0.6099.224)\nStacktrace:\n#0 0x55ed8b201f83 <unknown>\n#1 0x55ed8aebacf7 <unknown>\n#2 0x55ed8aec12a3 <unknown>\n#3 0x55ed8aec3bb4 <unknown>\n#4 0x55ed8af53ba3 <unknown>\n#5 0x55ed8af340b2 <unknown>\n#6 0x55ed8af53006 <unknown>\n#7 0x55ed8af33e53 <unknown>\n#8 0x55ed8aefbdd4 <unknown>\n#9 0x55ed8aefd1de <unknown>\n#10 0x55ed8b1c6531 <unknown>\n#11 0x55ed8b1ca455 <unknown>\n#12 0x55ed8b1b2f55 <unknown>\n#13 0x55ed8b1cb0ef <unknown>\n#14 0x55ed8b19699f <unknown>\n#15 0x55ed8b1ef008 <unknown>\n#16 0x55ed8b1ef1d7 <unknown>\n#17 0x55ed8b201124 <unknown>\n#18 0x7fcfebe94ac3 <unknown>","statusTrace":"self = <us_11-01-03-01_cfd_trading_guide_test.TestCFDTradingGuide object at 0x7f57714eff50>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ae7c57549405a5bb23e8fe7fc6ffef50\")>\ncur_language = 'fr', cur_country = 'ae', cur_role = 'NoReg'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\ncur_item_link = 'https://capital.com/fr/explication-cfd-trading'\n\n    @allure.step(\"Start test of buttons [Trade] in Most traded block\")\n    @pytest.mark.test_03\n    def test_03_most_traded_trade_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link):\n        \"\"\"\n        Check: Button [Trade] in Most traded block\n        Language: All. License: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"11.01.03\", \"Education > Menu item [CFD trading guide]\",\n            \".01_03\", \"Testing button [Trade] in Most traded block\")\n    \n        Common().check_language_in_list_and_skip_if_not_present(\n            cur_language, [\"\", \"de\", \"es\", \"fr\", \"nl\", \"pl\", \"ro\", \"ru\", \"zh\"])\n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = ButtonTradeOnWidgetMostTraded(d, cur_item_link, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link)\n\ntests/US_11_Education/US_11-01-03_cfd_trading_guide/us_11-01-03-01_cfd_trading_guide_test.py:118: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/ButtonTradeOnWidgetMostTraded.py:33: in full_test_with_tpi\n    trade_instrument = self.element_click_v4(index)\npages/Elements/ButtonTradeOnWidgetMostTraded.py:117: in element_click_v4\n    self.driver.execute_script('document.getElementsByClassName(\"js-mostTraded\")[0].'\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:407: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f5771579ed0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"javascript error\",\"message\":\"javascript error: Cannot read properties of ...\\\\n#16 0x55ed8b1ef1d7 \\\\u003Cunknown>\\\\n#17 0x55ed8b201124 \\\\u003Cunknown>\\\\n#18 0x7fcfebe94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.JavascriptException: Message: javascript error: Cannot read properties of undefined (reading 'classList')\nE         (Session info: chrome=120.0.6099.224)\nE       Stacktrace:\nE       #0 0x55ed8b201f83 <unknown>\nE       #1 0x55ed8aebacf7 <unknown>\nE       #2 0x55ed8aec12a3 <unknown>\nE       #3 0x55ed8aec3bb4 <unknown>\nE       #4 0x55ed8af53ba3 <unknown>\nE       #5 0x55ed8af340b2 <unknown>\nE       #6 0x55ed8af53006 <unknown>\nE       #7 0x55ed8af33e53 <unknown>\nE       #8 0x55ed8aefbdd4 <unknown>\nE       #9 0x55ed8aefd1de <unknown>\nE       #10 0x55ed8b1c6531 <unknown>\nE       #11 0x55ed8b1ca455 <unknown>\nE       #12 0x55ed8b1b2f55 <unknown>\nE       #13 0x55ed8b1cb0ef <unknown>\nE       #14 0x55ed8b19699f <unknown>\nE       #15 0x55ed8b1ef008 <unknown>\nE       #16 0x55ed8b1ef1d7 <unknown>\nE       #17 0x55ed8b201124 <unknown>\nE       #18 0x7fcfebe94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: JavascriptException","steps":[{"name":"Start test of buttons [Trade] in Most traded block","time":{"start":1706673670418,"stop":1706673675553,"duration":5135},"status":"broken","statusMessage":"selenium.common.exceptions.JavascriptException: Message: javascript error: Cannot read properties of undefined (reading 'classList')\n  (Session info: chrome=120.0.6099.224)\nStacktrace:\n#0 0x55ed8b201f83 <unknown>\n#1 0x55ed8aebacf7 <unknown>\n#2 0x55ed8aec12a3 <unknown>\n#3 0x55ed8aec3bb4 <unknown>\n#4 0x55ed8af53ba3 <unknown>\n#5 0x55ed8af340b2 <unknown>\n#6 0x55ed8af53006 <unknown>\n#7 0x55ed8af33e53 <unknown>\n#8 0x55ed8aefbdd4 <unknown>\n#9 0x55ed8aefd1de <unknown>\n#10 0x55ed8b1c6531 <unknown>\n#11 0x55ed8b1ca455 <unknown>\n#12 0x55ed8b1b2f55 <unknown>\n#13 0x55ed8b1cb0ef <unknown>\n#14 0x55ed8b19699f <unknown>\n#15 0x55ed8b1ef008 <unknown>\n#16 0x55ed8b1ef1d7 <unknown>\n#17 0x55ed8b201124 <unknown>\n#18 0x7fcfebe94ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_11_Education/US_11-01-03_cfd_trading_guide/us_11-01-03-01_cfd_trading_guide_test.py\", line 118, in test_03_most_traded_trade_button\n    test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/ButtonTradeOnWidgetMostTraded.py\", line 33, in full_test_with_tpi\n    trade_instrument = self.element_click_v4(index)\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/ButtonTradeOnWidgetMostTraded.py\", line 117, in element_click_v4\n    self.driver.execute_script('document.getElementsByClassName(\"js-mostTraded\")[0].'\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 407, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Start Building dynamic arguments for allure report generation","time":{"start":1706673670418,"stop":1706673670421,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ae7c57549405a5bb23e8fe7fc6ffef50\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'fr'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoReg'"},{"name":"us","value":"'11.01.03'"},{"name":"desc_us","value":"'Education > Menu item [CFD trading guide]'"},{"name":"num_tc","value":"'.01_03'"},{"name":"desc_tc","value":"'Testing button [Trade] in Most traded block'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Set preconditions","time":{"start":1706673670421,"stop":1706673673744,"duration":3323},"status":"passed","steps":[{"name":"Start Checking Captcha","time":{"start":1706673670628,"stop":1706673671666,"duration":1038},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Start Checking Captcha","time":{"start":1706673671666,"stop":1706673672708,"duration":1042},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Start Checking Captcha","time":{"start":1706673672708,"stop":1706673673744,"duration":1036},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ae7c57549405a5bb23e8fe7fc6ffef50\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'fr'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Click button MOST_TRADED","time":{"start":1706673673756,"stop":1706673675419,"duration":1663},"status":"passed","steps":[{"name":"Check that form [Sign up] opened","time":{"start":1706673673777,"stop":1706673675319,"duration":1542},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"timeout","value":"1"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"random_index","value":"1"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Checking that \"Signup\" opened","time":{"start":1706673675419,"stop":1706673675532,"duration":113},"status":"passed","steps":[{"name":"Check that \"Sign up\" form opened","time":{"start":1706673675419,"stop":1706673675472,"duration":53},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_language","value":"'fr'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Close form [Sign up]","time":{"start":1706673675472,"stop":1706673675532,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ae7c57549405a5bb23e8fe7fc6ffef50\")>"},{"name":"cur_language","value":"'fr'"},{"name":"cur_link","value":"'https://capital.com/fr/explication-cfd-trading'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Click button MOST_TRADED","time":{"start":1706673675545,"stop":1706673675553,"duration":8},"status":"broken","statusMessage":"selenium.common.exceptions.JavascriptException: Message: javascript error: Cannot read properties of undefined (reading 'classList')\n  (Session info: chrome=120.0.6099.224)\nStacktrace:\n#0 0x55ed8b201f83 <unknown>\n#1 0x55ed8aebacf7 <unknown>\n#2 0x55ed8aec12a3 <unknown>\n#3 0x55ed8aec3bb4 <unknown>\n#4 0x55ed8af53ba3 <unknown>\n#5 0x55ed8af340b2 <unknown>\n#6 0x55ed8af53006 <unknown>\n#7 0x55ed8af33e53 <unknown>\n#8 0x55ed8aefbdd4 <unknown>\n#9 0x55ed8aefd1de <unknown>\n#10 0x55ed8b1c6531 <unknown>\n#11 0x55ed8b1ca455 <unknown>\n#12 0x55ed8b1b2f55 <unknown>\n#13 0x55ed8b1cb0ef <unknown>\n#14 0x55ed8b19699f <unknown>\n#15 0x55ed8b1ef008 <unknown>\n#16 0x55ed8b1ef1d7 <unknown>\n#17 0x55ed8b201124 <unknown>\n#18 0x7fcfebe94ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/ButtonTradeOnWidgetMostTraded.py\", line 117, in element_click_v4\n    self.driver.execute_script('document.getElementsByClassName(\"js-mostTraded\")[0].'\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 407, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"random_index","value":"0"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ae7c57549405a5bb23e8fe7fc6ffef50\")>"},{"name":"cur_language","value":"'fr'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_item_link","value":"'https://capital.com/fr/explication-cfd-trading'"}],"shouldDisplayMessage":false,"stepsCount":11,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"fdc5feb0bb17baab","name":"Screenshot","source":"fdc5feb0bb17baab.png","type":"image/png","size":140291},{"uid":"fbfafbe7847dbd7","name":"log","source":"fbfafbe7847dbd7.txt","type":"text/plain","size":1400},{"uid":"d1c1e26c500f6888","name":"stdout","source":"d1c1e26c500f6888.txt","type":"text/plain","size":2796}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":12,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1706673814158,"stop":1706673814310,"duration":152},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_11.01.03 | Education > Menu item [CFD trading guide]"},{"name":"feature","value":"Language: fr"},{"name":"story","value":"Country: ae / Role: NoReg"},{"name":"tag","value":"test_03"},{"name":"tag","value":"us_11_01_03_01"},{"name":"parentSuite","value":"tests.US_11_Education.US_11-01-03_cfd_trading_guide"},{"name":"suite","value":"us_11-01-03-01_cfd_trading_guide_test"},{"name":"subSuite","value":"TestCFDTradingGuide"},{"name":"host","value":"fv-az695-17"},{"name":"thread","value":"6391-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_11_Education.US_11-01-03_cfd_trading_guide.us_11-01-03-01_cfd_trading_guide_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_item_link","value":"'https://capital.com/fr/explication-cfd-trading'"},{"name":"cur_language","value":"'fr'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_role","value":"'NoReg'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["test_03","us_11_01_03_01"]},"source":"9d61de4a18bc827.json","parameterValues":["'ae'","'https://capital.com/fr/explication-cfd-trading'","'fr'","'aqa.tomelo.an@gmail.com'","'iT9Vgqi6d$fiZ*Z'","'NoReg'","'Chrome'"]}