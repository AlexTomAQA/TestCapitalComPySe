{"uid":"d9c8fb82c554cf6f","name":"TC_55!322a (Lang: en) | Bid:55!322a-en.ae.NoAuth","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_322a","historyId":"da2997451bd2242aaa18a49ea305b544","time":{"start":1729558304555,"stop":1729558327948,"duration":23393},"description":"\n        Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        ","descriptionHtml":"<pre><code>    Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n            Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n            English or Arabic language.\n    Language: EN, AR\n    License: SCA\n    Author: Kasila\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","statusTrace":"self = <pages.BugsManual.bug_322.AssertTPI object at 0x7ff561955460>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b47744a2bc4dd472b130949de8b96897\")>\n\n    def assert_login(self, d):\n        print(f\"\\n{datetime.now()}   3. Assert\")\n    \n        try:\n>           login_form = self.driver.find_element(By.XPATH, '//strong/span[contains(text(), \"Login\")]')\n\npages/BugsManual/bug_322.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff561aa7830>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x557b426126c0 \\\\u003Cunknown>\\\\n#17 0x557b42622f26 \\\\u003Cunknown>\\\\n#18 0x7f3b96894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//strong/span[contains(text(), \"Login\")]\"}\nE         (Session info: chrome=130.0.6723.58); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x557b426240aa <unknown>\nE       #1 0x557b4213b1a0 <unknown>\nE       #2 0x557b42187d06 <unknown>\nE       #3 0x557b42187fa1 <unknown>\nE       #4 0x557b421cd344 <unknown>\nE       #5 0x557b421abdad <unknown>\nE       #6 0x557b421ca866 <unknown>\nE       #7 0x557b421abb23 <unknown>\nE       #8 0x557b4217a990 <unknown>\nE       #9 0x557b4217b96e <unknown>\nE       #10 0x557b425f016b <unknown>\nE       #11 0x557b425f3f68 <unknown>\nE       #12 0x557b425dd64c <unknown>\nE       #13 0x557b425f4ae7 <unknown>\nE       #14 0x557b425c24af <unknown>\nE       #15 0x557b426124f8 <unknown>\nE       #16 0x557b426126c0 <unknown>\nE       #17 0x557b42622f26 <unknown>\nE       #18 0x7f3b96894ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7ff562417ef0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b47744a2bc4dd472b130949de8b96897\")>\ncur_language = '', cur_country = 'ae', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ntitle_instrument = ''\n\n    @allure.step(\n        'Start retest manual AT_55!322a that the Sign Up/Login/page of the corresponding trading instrument on '\n        'the trading platform is opened after clicking [numeric values] in the Sell column.')\n    @pytest.mark.parametrize('cur_language', ['', 'ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('title_instrument', [''])\n    @pytest.mark.bug_322a\n    def test_322a(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, title_instrument):\n        \"\"\"\n        Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"322a\", 'The Sign Up/Login/page of the corresponding trading instrument on the trading platform'\n                   ' is not opened after clicking [numeric values] in the Sell column'\n        )\n    \n        match cur_language:\n            case '':\n                link = conditions_switch(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_sell(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n                        test_element.assert_signup(d)\n                    case 'NoAuth':\n>                       test_element.assert_login(d)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:251: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_322.py:129: in assert_login\n    Common.pytest_fail(\"Bug # 55!322 \"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 55!322 \\nExpected result: Login form is opened\\nActual result: Login form is not opened'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 55!322 \nE    Expected result: Login form is opened\nE    Actual result: Login form is not opened\n\npages/common.py:235: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1729557332373,"stop":1729557333265,"duration":892},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1729557333265,"stop":1729557333266,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1729557333266,"stop":1729557333266,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1729557333266,"stop":1729557333266,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        ","status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","statusTrace":"self = <pages.BugsManual.bug_322.AssertTPI object at 0x7ff561955460>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b47744a2bc4dd472b130949de8b96897\")>\n\n    def assert_login(self, d):\n        print(f\"\\n{datetime.now()}   3. Assert\")\n    \n        try:\n>           login_form = self.driver.find_element(By.XPATH, '//strong/span[contains(text(), \"Login\")]')\n\npages/BugsManual/bug_322.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff561aa7830>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x557b426126c0 \\\\u003Cunknown>\\\\n#17 0x557b42622f26 \\\\u003Cunknown>\\\\n#18 0x7f3b96894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//strong/span[contains(text(), \"Login\")]\"}\nE         (Session info: chrome=130.0.6723.58); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x557b426240aa <unknown>\nE       #1 0x557b4213b1a0 <unknown>\nE       #2 0x557b42187d06 <unknown>\nE       #3 0x557b42187fa1 <unknown>\nE       #4 0x557b421cd344 <unknown>\nE       #5 0x557b421abdad <unknown>\nE       #6 0x557b421ca866 <unknown>\nE       #7 0x557b421abb23 <unknown>\nE       #8 0x557b4217a990 <unknown>\nE       #9 0x557b4217b96e <unknown>\nE       #10 0x557b425f016b <unknown>\nE       #11 0x557b425f3f68 <unknown>\nE       #12 0x557b425dd64c <unknown>\nE       #13 0x557b425f4ae7 <unknown>\nE       #14 0x557b425c24af <unknown>\nE       #15 0x557b426124f8 <unknown>\nE       #16 0x557b426126c0 <unknown>\nE       #17 0x557b42622f26 <unknown>\nE       #18 0x7f3b96894ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7ff562417ef0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b47744a2bc4dd472b130949de8b96897\")>\ncur_language = '', cur_country = 'ae', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ntitle_instrument = ''\n\n    @allure.step(\n        'Start retest manual AT_55!322a that the Sign Up/Login/page of the corresponding trading instrument on '\n        'the trading platform is opened after clicking [numeric values] in the Sell column.')\n    @pytest.mark.parametrize('cur_language', ['', 'ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('title_instrument', [''])\n    @pytest.mark.bug_322a\n    def test_322a(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, title_instrument):\n        \"\"\"\n        Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"322a\", 'The Sign Up/Login/page of the corresponding trading instrument on the trading platform'\n                   ' is not opened after clicking [numeric values] in the Sell column'\n        )\n    \n        match cur_language:\n            case '':\n                link = conditions_switch(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_sell(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n                        test_element.assert_signup(d)\n                    case 'NoAuth':\n>                       test_element.assert_login(d)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:251: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_322.py:129: in assert_login\n    Common.pytest_fail(\"Bug # 55!322 \"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 55!322 \\nExpected result: Login form is opened\\nActual result: Login form is not opened'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 55!322 \nE    Expected result: Login form is opened\nE    Actual result: Login form is not opened\n\npages/common.py:235: Failed","steps":[{"name":"Start retest manual AT_55!322a that the Sign Up/Login/page of the corresponding trading instrument on the trading platform is opened after clicking [numeric values] in the Sell column.","time":{"start":1729558304556,"stop":1729558327947,"duration":23391},"status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py\", line 251, in test_322a\n    test_element.assert_login(d)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_322.py\", line 129, in assert_login\n    Common.pytest_fail(\"Bug # 55!322 \"\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/common.py\", line 235, in pytest_fail\n    pytest.fail(msg)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1729558304556,"stop":1729558304557,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"b47744a2bc4dd472b130949de8b96897\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'322a'"},{"name":"desc_tc","value":"'The Sign Up/Login/page of the corresponding trading instrument on the trading platform is not opened after clicking [numeric values] in the Sell column'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1729558304558,"stop":1729558314758,"duration":10200},"status":"passed","steps":[{"name":"2024-10-22 00:35:32.351832   Start Authorisation","time":{"start":1729558309976,"stop":1729558312959,"duration":2983},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"b47744a2bc4dd472b130949de8b96897\")>"},{"name":"link","value":"'https://capital.com/en-gb'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-10-22 00:35:32.351846   Start DeAuthorisation","time":{"start":1729558312960,"stop":1729558313263,"duration":303},"status":"passed","steps":[{"name":"Start Logout from account info menu in top bar","time":{"start":1729558312960,"stop":1729558313263,"duration":303},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"b47744a2bc4dd472b130949de8b96897\")>"},{"name":"link","value":"'https://capital.com/en-gb'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-10-22 00:35:32.351860   Set language and country","time":{"start":1729558313263,"stop":1729558314748,"duration":1485},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"b47744a2bc4dd472b130949de8b96897\")>"},{"name":"cur_language","value":"'en'"},{"name":"cur_country","value":"'ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"b47744a2bc4dd472b130949de8b96897\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Trading\" menu, \"Trading\" submenu","time":{"start":1729558314758,"stop":1729558322791,"duration":8033},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"b47744a2bc4dd472b130949de8b96897\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"link","value":"'https://capital.com/en-ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-10-22 00:35:32.184591   1. Start test that the Clicking [numeric values] in the Sell column in Menu tittle Markets opens the Sign-Up /Login form or page of the corresponding trading instrument on the trading platform.","time":{"start":1729558322791,"stop":1729558322810,"duration":19},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"b47744a2bc4dd472b130949de8b96897\")>"},{"name":"cur_item_link","value":"'https://capital.com/en-ae/markets'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"b47744a2bc4dd472b130949de8b96897\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"title_instrument","value":"''"}],"shouldDisplayMessage":true,"stepsCount":8,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"95080b4e69c390ff","name":"Screenshot","source":"95080b4e69c390ff.png","type":"image/png","size":139601},{"uid":"a4cd5c8764c40b81","name":"stdout","source":"a4cd5c8764c40b81.txt","type":"text/plain","size":6432}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":9,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1729558792861,"stop":1729558793099,"duration":238},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!322a | The Sign Up/Login/page of the corresponding trading instrument on the trading platform is not opened after clicking [numeric values] in the Sell column"},{"name":"feature","value":"Role: NoAuth"},{"name":"story","value":"Country: ae"},{"name":"tag","value":"bug_322a"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az1198-739"},{"name":"thread","value":"39086-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"d","value":"'Chrome'"},{"name":"title_instrument","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":18,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":18},"items":[{"uid":"5c4706fbaa8107b4","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/191//#testresult/5c4706fbaa8107b4","status":"failed","statusDetails":"Failed: Bug № ??? 'Markets' menu not present in DOM for 'ae' country '' language","time":{"start":1729471498116,"stop":1729471514845,"duration":16729}},{"uid":"4a57893487af56a9","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/190//#testresult/4a57893487af56a9","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1729385546273,"stop":1729385570927,"duration":24654}},{"uid":"9e16f43b43126bb2","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/189//#testresult/9e16f43b43126bb2","status":"failed","statusDetails":"Failed: Bug № ??? 'Markets' menu not present in DOM for 'ae' country '' language","time":{"start":1729299216648,"stop":1729299232693,"duration":16045}},{"uid":"ea98d34890ff7736","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/188//#testresult/ea98d34890ff7736","status":"failed","statusDetails":"Failed: Bug № ??? 'Markets' menu not present in DOM for 'ae' country '' language","time":{"start":1729212388137,"stop":1729212404145,"duration":16008}},{"uid":"dd2f0c3cd2da4231","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/187//#testresult/dd2f0c3cd2da4231","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1729125718948,"stop":1729125741729,"duration":22781}},{"uid":"ef96aec6c9fe5ad","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/186//#testresult/ef96aec6c9fe5ad","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1729059817706,"stop":1729059840807,"duration":23101}},{"uid":"2e4c5d954e4ca560","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/185//#testresult/2e4c5d954e4ca560","status":"failed","statusDetails":"Failed: Bug № ??? 'Markets' menu not present in DOM for 'ae' country '' language","time":{"start":1729042530674,"stop":1729042550003,"duration":19329}},{"uid":"91f72ae0a779e706","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/184//#testresult/91f72ae0a779e706","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1728955483389,"stop":1728955506064,"duration":22675}},{"uid":"53c2e8c8b063a459","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/183//#testresult/53c2e8c8b063a459","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1728866346264,"stop":1728866371093,"duration":24829}},{"uid":"cc6cc93e724c02b1","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/182//#testresult/cc6cc93e724c02b1","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1728791495896,"stop":1728791518288,"duration":22392}},{"uid":"9f235364883ff2ef","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/181//#testresult/9f235364883ff2ef","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1728780157257,"stop":1728780182517,"duration":25260}},{"uid":"c8a25e7b7b239c57","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/180//#testresult/c8a25e7b7b239c57","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1728693705294,"stop":1728693728921,"duration":23627}},{"uid":"e8959ad9907d0023","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/179//#testresult/e8959ad9907d0023","status":"failed","statusDetails":"Failed: Bug № ??? 'Markets' menu not present in DOM for 'ae' country '' language","time":{"start":1728607313052,"stop":1728607330253,"duration":17201}},{"uid":"db18752bc98d7a9c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/178//#testresult/db18752bc98d7a9c","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1728540453838,"stop":1728540477780,"duration":23942}},{"uid":"68d1c2a7c38eecb1","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/177//#testresult/68d1c2a7c38eecb1","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1728520911857,"stop":1728520938429,"duration":26572}},{"uid":"b084ee13210d65d1","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/176//#testresult/b084ee13210d65d1","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1728434612261,"stop":1728434638597,"duration":26336}},{"uid":"1f260f0ba78d2f60","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/175//#testresult/1f260f0ba78d2f60","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1728351307523,"stop":1728351335372,"duration":27849}}]},"tags":["us_55","bug_322a"]},"source":"d9c8fb82c554cf6f.json","parameterValues":["'ae'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoAuth'","'Chrome'","''"]}