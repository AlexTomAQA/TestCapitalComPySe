{"uid":"fc988ea55ccf5bd1","name":"TC_01.01.01_009 | Testing button [Start Trading] in the 'Trading calculator' widget on trading instrument page. Bid:01.01.01_009-ru.ae.Auth","fullName":"tests.US_01_Markets.US_01-01_All_markets.US_01-01-01_All_Markets_test.TestAllMarkets#test_009_page_trading_instrument_widget_trading_calculator_start_trading_button","historyId":"706f39f053300c29476181c1e6322ad8","time":{"start":1718294815646,"stop":1718294875665,"duration":60019},"description":"\n        Check: Button [Start Trading] in the 'Trading calculator' widget on trading instrument page\n        Language: All. License: All,except FCA.\n        ","descriptionHtml":"<pre><code>    Check: Button [Start Trading] in the 'Trading calculator' widget on trading instrument page\n    Language: All. License: All,except FCA.\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: -0.000\n  (Session info: chrome=125.0.6422.142)\nStacktrace:\n\tGetHandleVerifier [0x00AAB8E3+45827]\n\t(No symbol) [0x00A3DCC4]\n\t(No symbol) [0x0093150F]\n\t(No symbol) [0x0091D496]\n\t(No symbol) [0x0091D311]\n\t(No symbol) [0x0091B739]\n\t(No symbol) [0x0091BD1D]\n\t(No symbol) [0x0092802A]\n\t(No symbol) [0x0093BF01]\n\t(No symbol) [0x009403A6]\n\t(No symbol) [0x0091C38C]\n\t(No symbol) [0x0093BCE3]\n\t(No symbol) [0x009ABF53]\n\t(No symbol) [0x00992B96]\n\t(No symbol) [0x00966998]\n\t(No symbol) [0x0096751D]\n\tGetHandleVerifier [0x00D64513+2899763]\n\tGetHandleVerifier [0x00DB793D+3240797]\n\tGetHandleVerifier [0x00B313B4+593364]\n\tGetHandleVerifier [0x00B382DC+621820]\n\t(No symbol) [0x00A470A4]\n\t(No symbol) [0x00A437A8]\n\t(No symbol) [0x00A43947]\n\t(No symbol) [0x00A359FE]\n\tBaseThreadInitThunk [0x760667F9+25]\n\tRtlGetFullPathName_UEx [0x77507F4D+173]\n\tRtlGetFullPathName_UEx [0x77507F1B+123]","statusTrace":"self = <US_01-01-01_All_Markets_test.TestAllMarkets object at 0x00000226063AB050>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f7b98958d38bdea9672247f985727cf6\")>\ncur_language = 'ru', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_item_link = 'https://capital.com/ru/brent-crude-oil-spot-tovar'\n\n    @allure.step(\"Start test of button [Start Trading] in the 'Trading calculator' widget on trading instrument page \")\n    @pytest.mark.test_009\n    def test_009_page_trading_instrument_widget_trading_calculator_start_trading_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link):\n        \"\"\"\n        Check: Button [Start Trading] in the 'Trading calculator' widget on trading instrument page\n        Language: All. License: All,except FCA.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"01.01\", \"Markets > Menu item [All markets]\",\n            \".01_009\", \"Testing button [Start Trading] in the 'Trading calculator' \"\n                       \"widget on trading instrument page\")\n    \n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n    \n        page_conditions = Conditions(d, \"\")\n>       page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests\\US_01_Markets\\US_01-01_All_markets\\US_01-01-01_All_Markets_test.py:215: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\conditions.py:77: in preconditions\n    self.open_page()\npages\\base_page.py:150: in open_page\n    self.driver.get(link)\nC:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\nC:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000226063AAA80>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: -...Thunk [0x760667F9+25]\\\\n\\\\tRtlGetFullPathName_UEx [0x77507F4D+173]\\\\n\\\\tRtlGetFullPathName_UEx [0x77507F1B+123]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: -0.000\nE         (Session info: chrome=125.0.6422.142)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00AAB8E3+45827]\nE       \t(No symbol) [0x00A3DCC4]\nE       \t(No symbol) [0x0093150F]\nE       \t(No symbol) [0x0091D496]\nE       \t(No symbol) [0x0091D311]\nE       \t(No symbol) [0x0091B739]\nE       \t(No symbol) [0x0091BD1D]\nE       \t(No symbol) [0x0092802A]\nE       \t(No symbol) [0x0093BF01]\nE       \t(No symbol) [0x009403A6]\nE       \t(No symbol) [0x0091C38C]\nE       \t(No symbol) [0x0093BCE3]\nE       \t(No symbol) [0x009ABF53]\nE       \t(No symbol) [0x00992B96]\nE       \t(No symbol) [0x00966998]\nE       \t(No symbol) [0x0096751D]\nE       \tGetHandleVerifier [0x00D64513+2899763]\nE       \tGetHandleVerifier [0x00DB793D+3240797]\nE       \tGetHandleVerifier [0x00B313B4+593364]\nE       \tGetHandleVerifier [0x00B382DC+621820]\nE       \t(No symbol) [0x00A470A4]\nE       \t(No symbol) [0x00A437A8]\nE       \t(No symbol) [0x00A43947]\nE       \t(No symbol) [0x00A359FE]\nE       \tBaseThreadInitThunk [0x760667F9+25]\nE       \tRtlGetFullPathName_UEx [0x77507F4D+173]\nE       \tRtlGetFullPathName_UEx [0x77507F1B+123]\n\nC:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1718294495903,"stop":1718294497538,"duration":1635},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1718294497538,"stop":1718294497538,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1718294497538,"stop":1718294497538,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1718294497538,"stop":1718294497538,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1718294497538,"stop":1718294497538,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1718294497538,"stop":1718294497538,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1718294670004,"stop":1718294670004,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [Start Trading] in the 'Trading calculator' widget on trading instrument page\n        Language: All. License: All,except FCA.\n        ","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: -0.000\n  (Session info: chrome=125.0.6422.142)\nStacktrace:\n\tGetHandleVerifier [0x00AAB8E3+45827]\n\t(No symbol) [0x00A3DCC4]\n\t(No symbol) [0x0093150F]\n\t(No symbol) [0x0091D496]\n\t(No symbol) [0x0091D311]\n\t(No symbol) [0x0091B739]\n\t(No symbol) [0x0091BD1D]\n\t(No symbol) [0x0092802A]\n\t(No symbol) [0x0093BF01]\n\t(No symbol) [0x009403A6]\n\t(No symbol) [0x0091C38C]\n\t(No symbol) [0x0093BCE3]\n\t(No symbol) [0x009ABF53]\n\t(No symbol) [0x00992B96]\n\t(No symbol) [0x00966998]\n\t(No symbol) [0x0096751D]\n\tGetHandleVerifier [0x00D64513+2899763]\n\tGetHandleVerifier [0x00DB793D+3240797]\n\tGetHandleVerifier [0x00B313B4+593364]\n\tGetHandleVerifier [0x00B382DC+621820]\n\t(No symbol) [0x00A470A4]\n\t(No symbol) [0x00A437A8]\n\t(No symbol) [0x00A43947]\n\t(No symbol) [0x00A359FE]\n\tBaseThreadInitThunk [0x760667F9+25]\n\tRtlGetFullPathName_UEx [0x77507F4D+173]\n\tRtlGetFullPathName_UEx [0x77507F1B+123]","statusTrace":"self = <US_01-01-01_All_Markets_test.TestAllMarkets object at 0x00000226063AB050>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f7b98958d38bdea9672247f985727cf6\")>\ncur_language = 'ru', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_item_link = 'https://capital.com/ru/brent-crude-oil-spot-tovar'\n\n    @allure.step(\"Start test of button [Start Trading] in the 'Trading calculator' widget on trading instrument page \")\n    @pytest.mark.test_009\n    def test_009_page_trading_instrument_widget_trading_calculator_start_trading_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link):\n        \"\"\"\n        Check: Button [Start Trading] in the 'Trading calculator' widget on trading instrument page\n        Language: All. License: All,except FCA.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"01.01\", \"Markets > Menu item [All markets]\",\n            \".01_009\", \"Testing button [Start Trading] in the 'Trading calculator' \"\n                       \"widget on trading instrument page\")\n    \n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n    \n        page_conditions = Conditions(d, \"\")\n>       page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests\\US_01_Markets\\US_01-01_All_markets\\US_01-01-01_All_Markets_test.py:215: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\conditions.py:77: in preconditions\n    self.open_page()\npages\\base_page.py:150: in open_page\n    self.driver.get(link)\nC:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\nC:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000226063AAA80>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: -...Thunk [0x760667F9+25]\\\\n\\\\tRtlGetFullPathName_UEx [0x77507F4D+173]\\\\n\\\\tRtlGetFullPathName_UEx [0x77507F1B+123]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: -0.000\nE         (Session info: chrome=125.0.6422.142)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00AAB8E3+45827]\nE       \t(No symbol) [0x00A3DCC4]\nE       \t(No symbol) [0x0093150F]\nE       \t(No symbol) [0x0091D496]\nE       \t(No symbol) [0x0091D311]\nE       \t(No symbol) [0x0091B739]\nE       \t(No symbol) [0x0091BD1D]\nE       \t(No symbol) [0x0092802A]\nE       \t(No symbol) [0x0093BF01]\nE       \t(No symbol) [0x009403A6]\nE       \t(No symbol) [0x0091C38C]\nE       \t(No symbol) [0x0093BCE3]\nE       \t(No symbol) [0x009ABF53]\nE       \t(No symbol) [0x00992B96]\nE       \t(No symbol) [0x00966998]\nE       \t(No symbol) [0x0096751D]\nE       \tGetHandleVerifier [0x00D64513+2899763]\nE       \tGetHandleVerifier [0x00DB793D+3240797]\nE       \tGetHandleVerifier [0x00B313B4+593364]\nE       \tGetHandleVerifier [0x00B382DC+621820]\nE       \t(No symbol) [0x00A470A4]\nE       \t(No symbol) [0x00A437A8]\nE       \t(No symbol) [0x00A43947]\nE       \t(No symbol) [0x00A359FE]\nE       \tBaseThreadInitThunk [0x760667F9+25]\nE       \tRtlGetFullPathName_UEx [0x77507F4D+173]\nE       \tRtlGetFullPathName_UEx [0x77507F1B+123]\n\nC:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: TimeoutException","steps":[{"name":"Start test of button [Start Trading] in the 'Trading calculator' widget on trading instrument page ","time":{"start":1718294815646,"stop":1718294875664,"duration":60018},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: -0.000\n  (Session info: chrome=125.0.6422.142)\nStacktrace:\n\tGetHandleVerifier [0x00AAB8E3+45827]\n\t(No symbol) [0x00A3DCC4]\n\t(No symbol) [0x0093150F]\n\t(No symbol) [0x0091D496]\n\t(No symbol) [0x0091D311]\n\t(No symbol) [0x0091B739]\n\t(No symbol) [0x0091BD1D]\n\t(No symbol) [0x0092802A]\n\t(No symbol) [0x0093BF01]\n\t(No symbol) [0x009403A6]\n\t(No symbol) [0x0091C38C]\n\t(No symbol) [0x0093BCE3]\n\t(No symbol) [0x009ABF53]\n\t(No symbol) [0x00992B96]\n\t(No symbol) [0x00966998]\n\t(No symbol) [0x0096751D]\n\tGetHandleVerifier [0x00D64513+2899763]\n\tGetHandleVerifier [0x00DB793D+3240797]\n\tGetHandleVerifier [0x00B313B4+593364]\n\tGetHandleVerifier [0x00B382DC+621820]\n\t(No symbol) [0x00A470A4]\n\t(No symbol) [0x00A437A8]\n\t(No symbol) [0x00A43947]\n\t(No symbol) [0x00A359FE]\n\tBaseThreadInitThunk [0x760667F9+25]\n\tRtlGetFullPathName_UEx [0x77507F4D+173]\n\tRtlGetFullPathName_UEx [0x77507F1B+123]\n\n","statusTrace":"  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\a\\TestCapitalComPySe\\TestCapitalComPySe\\tests\\US_01_Markets\\US_01-01_All_markets\\US_01-01-01_All_Markets_test.py\", line 215, in test_009_page_trading_instrument_widget_trading_calculator_start_trading_button\n    page_conditions.preconditions(\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\a\\TestCapitalComPySe\\TestCapitalComPySe\\pages\\conditions.py\", line 77, in preconditions\n    self.open_page()\n  File \"D:\\a\\TestCapitalComPySe\\TestCapitalComPySe\\pages\\base_page.py\", line 150, in open_page\n    self.driver.get(link)\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 356, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Preconditions","time":{"start":1718294815648,"stop":1718294875663,"duration":60015},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: -0.000\n  (Session info: chrome=125.0.6422.142)\nStacktrace:\n\tGetHandleVerifier [0x00AAB8E3+45827]\n\t(No symbol) [0x00A3DCC4]\n\t(No symbol) [0x0093150F]\n\t(No symbol) [0x0091D496]\n\t(No symbol) [0x0091D311]\n\t(No symbol) [0x0091B739]\n\t(No symbol) [0x0091BD1D]\n\t(No symbol) [0x0092802A]\n\t(No symbol) [0x0093BF01]\n\t(No symbol) [0x009403A6]\n\t(No symbol) [0x0091C38C]\n\t(No symbol) [0x0093BCE3]\n\t(No symbol) [0x009ABF53]\n\t(No symbol) [0x00992B96]\n\t(No symbol) [0x00966998]\n\t(No symbol) [0x0096751D]\n\tGetHandleVerifier [0x00D64513+2899763]\n\tGetHandleVerifier [0x00DB793D+3240797]\n\tGetHandleVerifier [0x00B313B4+593364]\n\tGetHandleVerifier [0x00B382DC+621820]\n\t(No symbol) [0x00A470A4]\n\t(No symbol) [0x00A437A8]\n\t(No symbol) [0x00A43947]\n\t(No symbol) [0x00A359FE]\n\tBaseThreadInitThunk [0x760667F9+25]\n\tRtlGetFullPathName_UEx [0x77507F4D+173]\n\tRtlGetFullPathName_UEx [0x77507F1B+123]\n\n","statusTrace":"  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\a\\TestCapitalComPySe\\TestCapitalComPySe\\pages\\conditions.py\", line 77, in preconditions\n    self.open_page()\n  File \"D:\\a\\TestCapitalComPySe\\TestCapitalComPySe\\pages\\base_page.py\", line 150, in open_page\n    self.driver.get(link)\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 356, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f7b98958d38bdea9672247f985727cf6\")>"},{"name":"host","value":"'https://capital.com/'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'ru'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f7b98958d38bdea9672247f985727cf6\")>"},{"name":"cur_language","value":"'ru'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_item_link","value":"'https://capital.com/ru/brent-crude-oil-spot-tovar'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"e54fe3549e9a2080","name":"Screenshot","source":"e54fe3549e9a2080.png","type":"image/png","size":99928},{"uid":"607aab16a56873b2","name":"stdout","source":"607aab16a56873b2.txt","type":"text/plain","size":4159}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1718295026879,"stop":1718295029242,"duration":2363},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_01.01 | Markets > Menu item [All markets]"},{"name":"feature","value":"Language: ru"},{"name":"story","value":"Country: ae / Role: Auth"},{"name":"tag","value":"test_009"},{"name":"tag","value":"us_01_01_01"},{"name":"parentSuite","value":"tests.US_01_Markets.US_01-01_All_markets"},{"name":"suite","value":"US_01-01-01_All_Markets_test"},{"name":"subSuite","value":"TestAllMarkets"},{"name":"host","value":"fv-az1390-154"},{"name":"thread","value":"2088-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_01_Markets.US_01-01_All_markets.US_01-01-01_All_Markets_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_item_link","value":"'https://capital.com/ru/brent-crude-oil-spot-tovar'"},{"name":"cur_language","value":"'ru'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["test_009","us_01_01_01"]},"source":"fc988ea55ccf5bd1.json","parameterValues":["'ae'","'https://capital.com/ru/brent-crude-oil-spot-tovar'","'ru'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'Auth'","'Chrome'"]}