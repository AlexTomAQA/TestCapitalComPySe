{"uid":"42c2e341ef7cf92f","name":"TC_55!322a (Lang: ar) | Bid:55!322a-ar.ae.NoReg","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_322a","historyId":"b3038b21fc9bc6337c5ef01e2bfca542","time":{"start":1735347827927,"stop":1735347846333,"duration":18406},"description":"\n        Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        ","descriptionHtml":"<pre><code>    Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n            Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n            English or Arabic language.\n    Language: EN, AR\n    License: SCA\n    Author: Kasila\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","statusTrace":"self = <pages.BugsManual.bug_322.AssertTPI object at 0x7fc450acb980>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e862623726c971924a58dc9ea6f1177b\")>\n\n    def assert_signup(self, d):\n        print(f\"\\n{datetime.now()}   3. Assert\")\n    \n        try:\n>           signup_form = self.driver.find_element(By.XPATH, '//strong/span[contains(text(), \"Sign up\")]')\n\npages/BugsManual/bug_322.py:107: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fc45097f1a0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#17 0x55ccfd591776 \\\\u003Cunknown>\\\\n#18 0x7f41c049ca94 \\\\u003Cunknown>\\\\n#19 0x7f41c0529c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//strong/span[contains(text(), \"Sign up\")]\"}\nE         (Session info: chrome=131.0.6778.139); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55ccfd5928fa <unknown>\nE       #1 0x55ccfd0a3d20 <unknown>\nE       #2 0x55ccfd0f2a66 <unknown>\nE       #3 0x55ccfd0f2d01 <unknown>\nE       #4 0x55ccfd138184 <unknown>\nE       #5 0x55ccfd116b1d <unknown>\nE       #6 0x55ccfd135560 <unknown>\nE       #7 0x55ccfd116893 <unknown>\nE       #8 0x55ccfd0e530d <unknown>\nE       #9 0x55ccfd0e632e <unknown>\nE       #10 0x55ccfd55f00b <unknown>\nE       #11 0x55ccfd562f97 <unknown>\nE       #12 0x55ccfd54b71c <unknown>\nE       #13 0x55ccfd563b17 <unknown>\nE       #14 0x55ccfd5306cf <unknown>\nE       #15 0x55ccfd5816b8 <unknown>\nE       #16 0x55ccfd581880 <unknown>\nE       #17 0x55ccfd591776 <unknown>\nE       #18 0x7f41c049ca94 <unknown>\nE       #19 0x7f41c0529c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7fc451581190>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e862623726c971924a58dc9ea6f1177b\")>\ncur_language = 'ar', cur_country = 'ae', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ntitle_instrument = ''\n\n    @allure.step(\n        'Start retest manual AT_55!322a that the Sign Up/Login/page of the corresponding trading instrument on '\n        'the trading platform is opened after clicking [numeric values] in the Sell column.')\n    @pytest.mark.parametrize('cur_language', ['', 'ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('title_instrument', [''])\n    @pytest.mark.bug_322a\n    def test_322a(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, title_instrument):\n        \"\"\"\n        Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"322a\", 'The Sign Up/Login/page of the corresponding trading instrument on the trading platform'\n                   ' is not opened after clicking [numeric values] in the Sell column'\n        )\n    \n        match cur_language:\n            case '':\n                link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_sell(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n                        test_element.assert_signup(d)\n                    case 'NoAuth':\n                        test_element.assert_login(d)\n                    case 'Auth':\n                        test_element.assert_tpi(d, title_instrument)\n            case 'ar':\n                link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_sell(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n>                       test_element.assert_signup(d)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:277: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_322.py:113: in assert_signup\n    Common.pytest_fail(\"Bug # 55!322 \"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 55!322 \\nExpected result: Sign Up form is opened\\nActual result: Sign Up form is not opened'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 55!322 \nE    Expected result: Sign Up form is opened\nE    Actual result: Sign Up form is not opened\n\npages/common.py:235: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1735346872965,"stop":1735346873947,"duration":982},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1735346873947,"stop":1735346873947,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1735346873948,"stop":1735346873948,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1735346873948,"stop":1735346873948,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        ","status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","statusTrace":"self = <pages.BugsManual.bug_322.AssertTPI object at 0x7fc450acb980>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e862623726c971924a58dc9ea6f1177b\")>\n\n    def assert_signup(self, d):\n        print(f\"\\n{datetime.now()}   3. Assert\")\n    \n        try:\n>           signup_form = self.driver.find_element(By.XPATH, '//strong/span[contains(text(), \"Sign up\")]')\n\npages/BugsManual/bug_322.py:107: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fc45097f1a0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#17 0x55ccfd591776 \\\\u003Cunknown>\\\\n#18 0x7f41c049ca94 \\\\u003Cunknown>\\\\n#19 0x7f41c0529c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//strong/span[contains(text(), \"Sign up\")]\"}\nE         (Session info: chrome=131.0.6778.139); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55ccfd5928fa <unknown>\nE       #1 0x55ccfd0a3d20 <unknown>\nE       #2 0x55ccfd0f2a66 <unknown>\nE       #3 0x55ccfd0f2d01 <unknown>\nE       #4 0x55ccfd138184 <unknown>\nE       #5 0x55ccfd116b1d <unknown>\nE       #6 0x55ccfd135560 <unknown>\nE       #7 0x55ccfd116893 <unknown>\nE       #8 0x55ccfd0e530d <unknown>\nE       #9 0x55ccfd0e632e <unknown>\nE       #10 0x55ccfd55f00b <unknown>\nE       #11 0x55ccfd562f97 <unknown>\nE       #12 0x55ccfd54b71c <unknown>\nE       #13 0x55ccfd563b17 <unknown>\nE       #14 0x55ccfd5306cf <unknown>\nE       #15 0x55ccfd5816b8 <unknown>\nE       #16 0x55ccfd581880 <unknown>\nE       #17 0x55ccfd591776 <unknown>\nE       #18 0x7f41c049ca94 <unknown>\nE       #19 0x7f41c0529c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7fc451581190>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e862623726c971924a58dc9ea6f1177b\")>\ncur_language = 'ar', cur_country = 'ae', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ntitle_instrument = ''\n\n    @allure.step(\n        'Start retest manual AT_55!322a that the Sign Up/Login/page of the corresponding trading instrument on '\n        'the trading platform is opened after clicking [numeric values] in the Sell column.')\n    @pytest.mark.parametrize('cur_language', ['', 'ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('title_instrument', [''])\n    @pytest.mark.bug_322a\n    def test_322a(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, title_instrument):\n        \"\"\"\n        Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"322a\", 'The Sign Up/Login/page of the corresponding trading instrument on the trading platform'\n                   ' is not opened after clicking [numeric values] in the Sell column'\n        )\n    \n        match cur_language:\n            case '':\n                link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_sell(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n                        test_element.assert_signup(d)\n                    case 'NoAuth':\n                        test_element.assert_login(d)\n                    case 'Auth':\n                        test_element.assert_tpi(d, title_instrument)\n            case 'ar':\n                link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_sell(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n>                       test_element.assert_signup(d)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:277: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_322.py:113: in assert_signup\n    Common.pytest_fail(\"Bug # 55!322 \"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 55!322 \\nExpected result: Sign Up form is opened\\nActual result: Sign Up form is not opened'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 55!322 \nE    Expected result: Sign Up form is opened\nE    Actual result: Sign Up form is not opened\n\npages/common.py:235: Failed","steps":[{"name":"Start retest manual AT_55!322a that the Sign Up/Login/page of the corresponding trading instrument on the trading platform is opened after clicking [numeric values] in the Sell column.","time":{"start":1735347827927,"stop":1735347846332,"duration":18405},"status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py\", line 277, in test_322a\n    test_element.assert_signup(d)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_322.py\", line 113, in assert_signup\n    Common.pytest_fail(\"Bug # 55!322 \"\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/common.py\", line 235, in pytest_fail\n    pytest.fail(msg)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1735347827927,"stop":1735347827929,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e862623726c971924a58dc9ea6f1177b\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoReg'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'322a'"},{"name":"desc_tc","value":"'The Sign Up/Login/page of the corresponding trading instrument on the trading platform is not opened after clicking [numeric values] in the Sell column'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1735347827929,"stop":1735347832783,"duration":4854},"status":"passed","steps":[{"name":"2024-12-28 00:47:52.930768   Set language and country","time":{"start":1735347830247,"stop":1735347832771,"duration":2524},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e862623726c971924a58dc9ea6f1177b\")>"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e862623726c971924a58dc9ea6f1177b\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Trading\" menu, \"Trading\" submenu","time":{"start":1735347832783,"stop":1735347841129,"duration":8346},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e862623726c971924a58dc9ea6f1177b\")>"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"link","value":"'https://capital.com/ar-ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-12-28 00:47:52.765548   1. Start test that the Clicking [numeric values] in the Sell column in Menu tittle Markets opens the Sign-Up /Login form or page of the corresponding trading instrument on the trading platform.","time":{"start":1735347841129,"stop":1735347841150,"duration":21},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e862623726c971924a58dc9ea6f1177b\")>"},{"name":"cur_item_link","value":"'https://capital.com/ar-ae/markets'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e862623726c971924a58dc9ea6f1177b\")>"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"title_instrument","value":"''"}],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"5b4ce16d6b8794f3","name":"Screenshot","source":"5b4ce16d6b8794f3.png","type":"image/png","size":129139},{"uid":"9ccc0e464dc27385","name":"stdout","source":"9ccc0e464dc27385.txt","type":"text/plain","size":3974}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1735349775620,"stop":1735349775967,"duration":347},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!322a | The Sign Up/Login/page of the corresponding trading instrument on the trading platform is not opened after clicking [numeric values] in the Sell column"},{"name":"feature","value":"Role: NoReg"},{"name":"story","value":"Country: ae"},{"name":"tag","value":"bug_322a"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az1719-363"},{"name":"thread","value":"25415-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"'ar'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoReg'"},{"name":"d","value":"'Chrome'"},{"name":"title_instrument","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":63,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":63},"items":[{"uid":"ed498fc07925c9df","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/270//#testresult/ed498fc07925c9df","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1735262069471,"stop":1735262087139,"duration":17668}},{"uid":"f2edb6f7f0acc0ae","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/269//#testresult/f2edb6f7f0acc0ae","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1735174986910,"stop":1735175005601,"duration":18691}},{"uid":"805db0143ce48910","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/268//#testresult/805db0143ce48910","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1735088312110,"stop":1735088330221,"duration":18111}},{"uid":"3a51a91281445ea0","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/267//#testresult/3a51a91281445ea0","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1735002674735,"stop":1735002693003,"duration":18268}},{"uid":"fc252eadc619b282","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/266//#testresult/fc252eadc619b282","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1734915590065,"stop":1734915608173,"duration":18108}},{"uid":"76032b1f7647ddd4","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/265//#testresult/76032b1f7647ddd4","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1734830300976,"stop":1734830319514,"duration":18538}},{"uid":"8f5f4e327c96df75","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/264//#testresult/8f5f4e327c96df75","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1734744523557,"stop":1734744542110,"duration":18553}},{"uid":"582a6b58dfb91660","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/263//#testresult/582a6b58dfb91660","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1734655914076,"stop":1734655932481,"duration":18405}},{"uid":"5fc7484a48080912","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/262//#testresult/5fc7484a48080912","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1734569740850,"stop":1734569759477,"duration":18627}},{"uid":"7c11333e2c46a433","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/261//#testresult/7c11333e2c46a433","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1734483850214,"stop":1734483868792,"duration":18578}},{"uid":"c099451687e45dcf","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/260//#testresult/c099451687e45dcf","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1734397271910,"stop":1734397290193,"duration":18283}},{"uid":"6d4741b9525741a0","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/259//#testresult/6d4741b9525741a0","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1734311527144,"stop":1734311544904,"duration":17760}},{"uid":"eae9686bb8e4458a","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/258//#testresult/eae9686bb8e4458a","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1734224774476,"stop":1734224793221,"duration":18745}},{"uid":"f5c084db962dda71","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/257//#testresult/f5c084db962dda71","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1734162599871,"stop":1734162618272,"duration":18401}},{"uid":"df711045d80b1c02","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/256//#testresult/df711045d80b1c02","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1734139793017,"stop":1734139811524,"duration":18507}},{"uid":"a860c1cb2b3ad369","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/255//#testresult/a860c1cb2b3ad369","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1734051444738,"stop":1734051463106,"duration":18368}},{"uid":"1b0f219e96eb57f6","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/254//#testresult/1b0f219e96eb57f6","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1733964900352,"stop":1733964918902,"duration":18550}},{"uid":"6ce88456520cce11","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/253//#testresult/6ce88456520cce11","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1733879028012,"stop":1733879046337,"duration":18325}},{"uid":"914eecbc45b09e18","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/252//#testresult/914eecbc45b09e18","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1733796543951,"stop":1733796562580,"duration":18629}},{"uid":"459356875f697c95","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/251//#testresult/459356875f697c95","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1733707019232,"stop":1733707037698,"duration":18466}}]},"tags":["us_55","bug_322a"]},"source":"42c2e341ef7cf92f.json","parameterValues":["'ae'","'ar'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoReg'","'Chrome'","''"]}