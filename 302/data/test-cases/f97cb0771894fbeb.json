{"uid":"f97cb0771894fbeb","name":"TC_11.03.07.00_06 | Testing button [Try Free Demo] in Block 'Want a test drive?'. Bid:11.03.07.00_06-de.de.NoReg","fullName":"tests.US_11_Education.US_11-03-07_What_is_a_margin.US_11-03-07_What_is_a_margin_test.TestWhatIsMargin#test_06_try_free_demo_in_block_want_test_drive","historyId":"19efbc77720f974fba6dd2c2931a02f0","time":{"start":1708340594747,"stop":1708340661083,"duration":66336},"description":"\n        Check: Button [Try Free Demo] in Block 'Want a test drive?'\n        Language: All. License: All.\n        ","descriptionHtml":"<pre><code>    Check: Button [Try Free Demo] in Block 'Want a test drive?'\n    Language: All. License: All.\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 60.000\n  (Session info: chrome=121.0.6167.160)\nStacktrace:\n#0 0x55bae583d303 <unknown>\n#1 0x55bae55222b7 <unknown>\n#2 0x55bae550945c <unknown>\n#3 0x55bae55094a0 <unknown>\n#4 0x55bae5507b6a <unknown>\n#5 0x55bae550828f <unknown>\n#6 0x55bae5518321 <unknown>\n#7 0x55bae552e451 <unknown>\n#8 0x55bae5532fab <unknown>\n#9 0x55bae550893a <unknown>\n#10 0x55bae552e1a1 <unknown>\n#11 0x55bae55af409 <unknown>\n#12 0x55bae5590123 <unknown>\n#13 0x55bae5560095 <unknown>\n#14 0x55bae556109e <unknown>\n#15 0x55bae58016ab <unknown>\n#16 0x55bae58054ba <unknown>\n#17 0x55bae57edf85 <unknown>\n#18 0x55bae580612f <unknown>\n#19 0x55bae57d1e6f <unknown>\n#20 0x55bae582a5f8 <unknown>\n#21 0x55bae582a7c2 <unknown>\n#22 0x55bae583c4a4 <unknown>\n#23 0x7f7cdde94ac3 <unknown>","statusTrace":"self = <US_11-03-07_What_is_a_margin_test.TestWhatIsMargin object at 0x7f1fa2441dc0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"acfbe109c02fc62f7b99bc17df24e716\")>\ncur_language = 'de', cur_country = 'de', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test of button [Try Free Demo] in Block 'Want a test drive?'\")\n    @pytest.mark.test_06\n    def test_06_try_free_demo_in_block_want_test_drive(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Button [Try Free Demo] in Block 'Want a test drive?'\n        Language: All. License: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"11.03.07\", \"Education > Menu item [What is a margin?]\",\n            \".00_06\", \"Testing button [Try Free Demo] in Block 'Want a test drive?'\")\n    \n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n        if cur_language in [\"\", \"cn\"]:\n            pytest.skip(f\"This test is not for {'en' if cur_language == '' else cur_language} language\")\n    \n        link = self.us_link.get_us_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = ButtonFreeDemoOnHorizontalBanner(d, link)\n        test_element.arrange_(d, link)\n    \n>       if not test_element.element_click():\n\ntests/US_11_Education/US_11-03-07_What_is_a_margin/US_11-03-07_What_is_a_margin_test.py:229: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/ButtonFreeDemoOnHorizontalBanner.py:49: in element_click\n    button_list[0].click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1fa3ac9a60>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 6...\\\\n#21 0x55bae582a7c2 \\\\u003Cunknown>\\\\n#22 0x55bae583c4a4 \\\\u003Cunknown>\\\\n#23 0x7f7cdde94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 60.000\nE         (Session info: chrome=121.0.6167.160)\nE       Stacktrace:\nE       #0 0x55bae583d303 <unknown>\nE       #1 0x55bae55222b7 <unknown>\nE       #2 0x55bae550945c <unknown>\nE       #3 0x55bae55094a0 <unknown>\nE       #4 0x55bae5507b6a <unknown>\nE       #5 0x55bae550828f <unknown>\nE       #6 0x55bae5518321 <unknown>\nE       #7 0x55bae552e451 <unknown>\nE       #8 0x55bae5532fab <unknown>\nE       #9 0x55bae550893a <unknown>\nE       #10 0x55bae552e1a1 <unknown>\nE       #11 0x55bae55af409 <unknown>\nE       #12 0x55bae5590123 <unknown>\nE       #13 0x55bae5560095 <unknown>\nE       #14 0x55bae556109e <unknown>\nE       #15 0x55bae58016ab <unknown>\nE       #16 0x55bae58054ba <unknown>\nE       #17 0x55bae57edf85 <unknown>\nE       #18 0x55bae580612f <unknown>\nE       #19 0x55bae57d1e6f <unknown>\nE       #20 0x55bae582a5f8 <unknown>\nE       #21 0x55bae582a7c2 <unknown>\nE       #22 0x55bae583c4a4 <unknown>\nE       #23 0x7f7cdde94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1708339937565,"stop":1708339937937,"duration":372},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1708339937937,"stop":1708339937937,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1708339937938,"stop":1708339937938,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1708339937938,"stop":1708339937938,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1708339937938,"stop":1708339937938,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1708339937938,"stop":1708339937938,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1708340428940,"stop":1708340428940,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [Try Free Demo] in Block 'Want a test drive?'\n        Language: All. License: All.\n        ","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 60.000\n  (Session info: chrome=121.0.6167.160)\nStacktrace:\n#0 0x55bae583d303 <unknown>\n#1 0x55bae55222b7 <unknown>\n#2 0x55bae550945c <unknown>\n#3 0x55bae55094a0 <unknown>\n#4 0x55bae5507b6a <unknown>\n#5 0x55bae550828f <unknown>\n#6 0x55bae5518321 <unknown>\n#7 0x55bae552e451 <unknown>\n#8 0x55bae5532fab <unknown>\n#9 0x55bae550893a <unknown>\n#10 0x55bae552e1a1 <unknown>\n#11 0x55bae55af409 <unknown>\n#12 0x55bae5590123 <unknown>\n#13 0x55bae5560095 <unknown>\n#14 0x55bae556109e <unknown>\n#15 0x55bae58016ab <unknown>\n#16 0x55bae58054ba <unknown>\n#17 0x55bae57edf85 <unknown>\n#18 0x55bae580612f <unknown>\n#19 0x55bae57d1e6f <unknown>\n#20 0x55bae582a5f8 <unknown>\n#21 0x55bae582a7c2 <unknown>\n#22 0x55bae583c4a4 <unknown>\n#23 0x7f7cdde94ac3 <unknown>","statusTrace":"self = <US_11-03-07_What_is_a_margin_test.TestWhatIsMargin object at 0x7f1fa2441dc0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"acfbe109c02fc62f7b99bc17df24e716\")>\ncur_language = 'de', cur_country = 'de', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test of button [Try Free Demo] in Block 'Want a test drive?'\")\n    @pytest.mark.test_06\n    def test_06_try_free_demo_in_block_want_test_drive(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Button [Try Free Demo] in Block 'Want a test drive?'\n        Language: All. License: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"11.03.07\", \"Education > Menu item [What is a margin?]\",\n            \".00_06\", \"Testing button [Try Free Demo] in Block 'Want a test drive?'\")\n    \n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n        if cur_language in [\"\", \"cn\"]:\n            pytest.skip(f\"This test is not for {'en' if cur_language == '' else cur_language} language\")\n    \n        link = self.us_link.get_us_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = ButtonFreeDemoOnHorizontalBanner(d, link)\n        test_element.arrange_(d, link)\n    \n>       if not test_element.element_click():\n\ntests/US_11_Education/US_11-03-07_What_is_a_margin/US_11-03-07_What_is_a_margin_test.py:229: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/ButtonFreeDemoOnHorizontalBanner.py:49: in element_click\n    button_list[0].click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1fa3ac9a60>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 6...\\\\n#21 0x55bae582a7c2 \\\\u003Cunknown>\\\\n#22 0x55bae583c4a4 \\\\u003Cunknown>\\\\n#23 0x7f7cdde94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 60.000\nE         (Session info: chrome=121.0.6167.160)\nE       Stacktrace:\nE       #0 0x55bae583d303 <unknown>\nE       #1 0x55bae55222b7 <unknown>\nE       #2 0x55bae550945c <unknown>\nE       #3 0x55bae55094a0 <unknown>\nE       #4 0x55bae5507b6a <unknown>\nE       #5 0x55bae550828f <unknown>\nE       #6 0x55bae5518321 <unknown>\nE       #7 0x55bae552e451 <unknown>\nE       #8 0x55bae5532fab <unknown>\nE       #9 0x55bae550893a <unknown>\nE       #10 0x55bae552e1a1 <unknown>\nE       #11 0x55bae55af409 <unknown>\nE       #12 0x55bae5590123 <unknown>\nE       #13 0x55bae5560095 <unknown>\nE       #14 0x55bae556109e <unknown>\nE       #15 0x55bae58016ab <unknown>\nE       #16 0x55bae58054ba <unknown>\nE       #17 0x55bae57edf85 <unknown>\nE       #18 0x55bae580612f <unknown>\nE       #19 0x55bae57d1e6f <unknown>\nE       #20 0x55bae582a5f8 <unknown>\nE       #21 0x55bae582a7c2 <unknown>\nE       #22 0x55bae583c4a4 <unknown>\nE       #23 0x7f7cdde94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","steps":[{"name":"Start test of button [Try Free Demo] in Block 'Want a test drive?'","time":{"start":1708340594748,"stop":1708340661082,"duration":66334},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 60.000\n  (Session info: chrome=121.0.6167.160)\nStacktrace:\n#0 0x55bae583d303 <unknown>\n#1 0x55bae55222b7 <unknown>\n#2 0x55bae550945c <unknown>\n#3 0x55bae55094a0 <unknown>\n#4 0x55bae5507b6a <unknown>\n#5 0x55bae550828f <unknown>\n#6 0x55bae5518321 <unknown>\n#7 0x55bae552e451 <unknown>\n#8 0x55bae5532fab <unknown>\n#9 0x55bae550893a <unknown>\n#10 0x55bae552e1a1 <unknown>\n#11 0x55bae55af409 <unknown>\n#12 0x55bae5590123 <unknown>\n#13 0x55bae5560095 <unknown>\n#14 0x55bae556109e <unknown>\n#15 0x55bae58016ab <unknown>\n#16 0x55bae58054ba <unknown>\n#17 0x55bae57edf85 <unknown>\n#18 0x55bae580612f <unknown>\n#19 0x55bae57d1e6f <unknown>\n#20 0x55bae582a5f8 <unknown>\n#21 0x55bae582a7c2 <unknown>\n#22 0x55bae583c4a4 <unknown>\n#23 0x7f7cdde94ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_11_Education/US_11-03-07_What_is_a_margin/US_11-03-07_What_is_a_margin_test.py\", line 229, in test_06_try_free_demo_in_block_want_test_drive\n    if not test_element.element_click():\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/ButtonFreeDemoOnHorizontalBanner.py\", line 49, in element_click\n    button_list[0].click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"2024-02-19 10:52:17.549205   Start Building dynamic arguments for allure report generation","time":{"start":1708340594748,"stop":1708340594752,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"acfbe109c02fc62f7b99bc17df24e716\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'de'"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'NoReg'"},{"name":"us","value":"'11.03.07'"},{"name":"desc_us","value":"'Education > Menu item [What is a margin?]'"},{"name":"num_tc","value":"'.00_06'"},{"name":"desc_tc","value":"'Testing button [Try Free Demo] in Block 'Want a test drive?''"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-02-19 10:52:17.548950   Set preconditions","time":{"start":1708340594752,"stop":1708340599583,"duration":4831},"status":"passed","steps":[{"name":"2024-02-19 10:52:17.547890   Start Checking Captcha","time":{"start":1708340594989,"stop":1708340596431,"duration":1442},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"2024-02-19 10:52:17.547890   Start Checking Captcha","time":{"start":1708340596431,"stop":1708340597568,"duration":1137},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"2024-02-19 10:52:17.547890   Start Checking Captcha","time":{"start":1708340597569,"stop":1708340599583,"duration":2014},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"acfbe109c02fc62f7b99bc17df24e716\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'de'"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Click button on horizontal banner","time":{"start":1708340599738,"stop":1708340661081,"duration":61343},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 60.000\n  (Session info: chrome=121.0.6167.160)\nStacktrace:\n#0 0x55bae583d303 <unknown>\n#1 0x55bae55222b7 <unknown>\n#2 0x55bae550945c <unknown>\n#3 0x55bae55094a0 <unknown>\n#4 0x55bae5507b6a <unknown>\n#5 0x55bae550828f <unknown>\n#6 0x55bae5518321 <unknown>\n#7 0x55bae552e451 <unknown>\n#8 0x55bae5532fab <unknown>\n#9 0x55bae550893a <unknown>\n#10 0x55bae552e1a1 <unknown>\n#11 0x55bae55af409 <unknown>\n#12 0x55bae5590123 <unknown>\n#13 0x55bae5560095 <unknown>\n#14 0x55bae556109e <unknown>\n#15 0x55bae58016ab <unknown>\n#16 0x55bae58054ba <unknown>\n#17 0x55bae57edf85 <unknown>\n#18 0x55bae580612f <unknown>\n#19 0x55bae57d1e6f <unknown>\n#20 0x55bae582a5f8 <unknown>\n#21 0x55bae582a7c2 <unknown>\n#22 0x55bae583c4a4 <unknown>\n#23 0x7f7cdde94ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/ButtonFreeDemoOnHorizontalBanner.py\", line 49, in element_click\n    button_list[0].click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"acfbe109c02fc62f7b99bc17df24e716\")>"},{"name":"cur_language","value":"'de'"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":6,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"e7eef7034a575223","name":"Screenshot","source":"e7eef7034a575223.png","type":"image/png","size":595960},{"uid":"24e3cb89bba7cd76","name":"stdout","source":"24e3cb89bba7cd76.txt","type":"text/plain","size":1310}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":7,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1708340662708,"stop":1708340662849,"duration":141},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_11.03.07 | Education > Menu item [What is a margin?]"},{"name":"feature","value":"Language: de"},{"name":"story","value":"Country: de / Role: NoReg"},{"name":"tag","value":"test_06"},{"name":"tag","value":"us_11_03_07"},{"name":"parentSuite","value":"tests.US_11_Education.US_11-03-07_What_is_a_margin"},{"name":"suite","value":"US_11-03-07_What_is_a_margin_test"},{"name":"subSuite","value":"TestWhatIsMargin"},{"name":"host","value":"fv-az1385-999"},{"name":"thread","value":"37908-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_11_Education.US_11-03-07_What_is_a_margin.US_11-03-07_What_is_a_margin_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'de'"},{"name":"cur_language","value":"'de'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoReg'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["test_06","us_11_03_07"]},"source":"f97cb0771894fbeb.json","parameterValues":["'de'","'de'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoReg'","'Chrome'"]}