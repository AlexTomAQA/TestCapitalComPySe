{"uid":"8c7d157fa7906719","name":"TC_55!322b (Lang: en) | Bid:55!322b-en.ae.NoAuth","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_322b","historyId":"6bb21093e5e602e29a1ec75a23f40565","time":{"start":1726980800576,"stop":1726980824316,"duration":23740},"description":"\n        Check: Clicking [numeric values] in the Buy column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        ","descriptionHtml":"<pre><code>    Check: Clicking [numeric values] in the Buy column in Menu tittle Markets does not open the\n            Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n            English or Arabic language.\n    Language: EN, AR\n    License: SCA\n    Author: Kasila\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","statusTrace":"self = <pages.BugsManual.bug_322.AssertTPI object at 0x7f2de5dfa990>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8deaa6c5b009dc1ec6da163a0cbeee45\")>\n\n    def assert_login(self, d):\n        print(f\"\\n{datetime.now()}   3. Assert\")\n    \n        try:\n>           login_form = self.driver.find_element(By.XPATH, '//strong/span[contains(text(), \"Login\")]')\n\npages/BugsManual/bug_322.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2de617e180>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x5645188f5417 \\\\u003Cunknown>\\\\n#17 0x5645189050cc \\\\u003Cunknown>\\\\n#18 0x7fdf3e894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//strong/span[contains(text(), \"Login\")]\"}\nE         (Session info: chrome=128.0.6613.137); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x5645189062da <unknown>\nE       #1 0x5645185d4200 <unknown>\nE       #2 0x564518623aa2 <unknown>\nE       #3 0x564518623d41 <unknown>\nE       #4 0x564518669964 <unknown>\nE       #5 0x5645186488fd <unknown>\nE       #6 0x564518666dfd <unknown>\nE       #7 0x564518648673 <unknown>\nE       #8 0x564518616473 <unknown>\nE       #9 0x56451861747e <unknown>\nE       #10 0x5645188cd0db <unknown>\nE       #11 0x5645188d1071 <unknown>\nE       #12 0x5645188b99d5 <unknown>\nE       #13 0x5645188d1bf2 <unknown>\nE       #14 0x56451889eb6f <unknown>\nE       #15 0x5645188f5248 <unknown>\nE       #16 0x5645188f5417 <unknown>\nE       #17 0x5645189050cc <unknown>\nE       #18 0x7fdf3e894ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7f2de5f0b710>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8deaa6c5b009dc1ec6da163a0cbeee45\")>\ncur_language = '', cur_country = 'ae', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ntitle_instrument = ''\n\n    @allure.step(\n        'Start retest manual AT_55!322b that the Sign Up/Login/page of the corresponding trading instrument on '\n        'the trading platform is opened after clicking [numeric values] in the Buy column.')\n    @pytest.mark.parametrize('cur_language', ['', 'ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('title_instrument', [''])\n    @pytest.mark.bug_322b\n    def test_322b(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, title_instrument):\n        \"\"\"\n        Check: Clicking [numeric values] in the Buy column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"322b\", 'The Sign Up/Login/page of the corresponding trading instrument on the trading platform'\n                   ' is not opened after clicking [numeric values] in the Buy column'\n        )\n    \n        page_conditions = NewConditions(d, \"\")\n    \n        match cur_language:\n            case '':\n                link = page_conditions.preconditions(\n                    d, CapitalComPageSrc.URL_NEW_EN_AE, \"\", cur_language, cur_country, cur_role, cur_login,\n                    cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_buy(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n                        test_element.assert_signup(d)\n                    case 'NoAuth':\n>                       test_element.assert_login(d)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:336: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_322.py:129: in assert_login\n    Common.pytest_fail(\"Bug # 55!322 \"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 55!322 \\nExpected result: Login form is opened\\nActual result: Login form is not opened'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 55!322 \nE    Expected result: Login form is opened\nE    Actual result: Login form is not opened\n\npages/common.py:235: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1726979723562,"stop":1726979723926,"duration":364},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1726979723926,"stop":1726979723926,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1726979723926,"stop":1726979723926,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1726979723926,"stop":1726979723926,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Clicking [numeric values] in the Buy column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        ","status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","statusTrace":"self = <pages.BugsManual.bug_322.AssertTPI object at 0x7f2de5dfa990>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8deaa6c5b009dc1ec6da163a0cbeee45\")>\n\n    def assert_login(self, d):\n        print(f\"\\n{datetime.now()}   3. Assert\")\n    \n        try:\n>           login_form = self.driver.find_element(By.XPATH, '//strong/span[contains(text(), \"Login\")]')\n\npages/BugsManual/bug_322.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2de617e180>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x5645188f5417 \\\\u003Cunknown>\\\\n#17 0x5645189050cc \\\\u003Cunknown>\\\\n#18 0x7fdf3e894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//strong/span[contains(text(), \"Login\")]\"}\nE         (Session info: chrome=128.0.6613.137); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x5645189062da <unknown>\nE       #1 0x5645185d4200 <unknown>\nE       #2 0x564518623aa2 <unknown>\nE       #3 0x564518623d41 <unknown>\nE       #4 0x564518669964 <unknown>\nE       #5 0x5645186488fd <unknown>\nE       #6 0x564518666dfd <unknown>\nE       #7 0x564518648673 <unknown>\nE       #8 0x564518616473 <unknown>\nE       #9 0x56451861747e <unknown>\nE       #10 0x5645188cd0db <unknown>\nE       #11 0x5645188d1071 <unknown>\nE       #12 0x5645188b99d5 <unknown>\nE       #13 0x5645188d1bf2 <unknown>\nE       #14 0x56451889eb6f <unknown>\nE       #15 0x5645188f5248 <unknown>\nE       #16 0x5645188f5417 <unknown>\nE       #17 0x5645189050cc <unknown>\nE       #18 0x7fdf3e894ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7f2de5f0b710>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8deaa6c5b009dc1ec6da163a0cbeee45\")>\ncur_language = '', cur_country = 'ae', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ntitle_instrument = ''\n\n    @allure.step(\n        'Start retest manual AT_55!322b that the Sign Up/Login/page of the corresponding trading instrument on '\n        'the trading platform is opened after clicking [numeric values] in the Buy column.')\n    @pytest.mark.parametrize('cur_language', ['', 'ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('title_instrument', [''])\n    @pytest.mark.bug_322b\n    def test_322b(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, title_instrument):\n        \"\"\"\n        Check: Clicking [numeric values] in the Buy column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"322b\", 'The Sign Up/Login/page of the corresponding trading instrument on the trading platform'\n                   ' is not opened after clicking [numeric values] in the Buy column'\n        )\n    \n        page_conditions = NewConditions(d, \"\")\n    \n        match cur_language:\n            case '':\n                link = page_conditions.preconditions(\n                    d, CapitalComPageSrc.URL_NEW_EN_AE, \"\", cur_language, cur_country, cur_role, cur_login,\n                    cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_buy(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n                        test_element.assert_signup(d)\n                    case 'NoAuth':\n>                       test_element.assert_login(d)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:336: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_322.py:129: in assert_login\n    Common.pytest_fail(\"Bug # 55!322 \"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 55!322 \\nExpected result: Login form is opened\\nActual result: Login form is not opened'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 55!322 \nE    Expected result: Login form is opened\nE    Actual result: Login form is not opened\n\npages/common.py:235: Failed","steps":[{"name":"Start retest manual AT_55!322b that the Sign Up/Login/page of the corresponding trading instrument on the trading platform is opened after clicking [numeric values] in the Buy column.","time":{"start":1726980800576,"stop":1726980824315,"duration":23739},"status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py\", line 336, in test_322b\n    test_element.assert_login(d)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_322.py\", line 129, in assert_login\n    Common.pytest_fail(\"Bug # 55!322 \"\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/common.py\", line 235, in pytest_fail\n    pytest.fail(msg)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1726980800576,"stop":1726980800578,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"8deaa6c5b009dc1ec6da163a0cbeee45\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'322b'"},{"name":"desc_tc","value":"'The Sign Up/Login/page of the corresponding trading instrument on the trading platform is not opened after clicking [numeric values] in the Buy column'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1726980800578,"stop":1726980811087,"duration":10509},"status":"passed","steps":[{"name":"2024-09-22 04:35:23.545673   Start Authorisation","time":{"start":1726980805883,"stop":1726980809102,"duration":3219},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"8deaa6c5b009dc1ec6da163a0cbeee45\")>"},{"name":"link","value":"'https://capital.com/en-ae'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-09-22 04:35:23.545687   Start DeAuthorisation","time":{"start":1726980809103,"stop":1726980809719,"duration":616},"status":"passed","steps":[{"name":"Start Logout from account info menu in top bar","time":{"start":1726980809103,"stop":1726980809719,"duration":616},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"8deaa6c5b009dc1ec6da163a0cbeee45\")>"},{"name":"link","value":"'https://capital.com/en-ae'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-09-22 04:35:23.545698   Set language and country","time":{"start":1726980809719,"stop":1726980811081,"duration":1362},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"8deaa6c5b009dc1ec6da163a0cbeee45\")>"},{"name":"cur_language","value":"'en'"},{"name":"cur_country","value":"'ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"8deaa6c5b009dc1ec6da163a0cbeee45\")>"},{"name":"host","value":"'https://capital.com/en-ae'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Trading\" menu, \"Trading\" submenu","time":{"start":1726980811087,"stop":1726980819198,"duration":8111},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"8deaa6c5b009dc1ec6da163a0cbeee45\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"link","value":"'https://capital.com/en-ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-09-22 04:35:23.389081   1. Start test that the Clicking [numeric values] in the Sell column in Menu tittle Markets opens the Sign-Up /Login form or page of the corresponding trading instrument on the trading platform.","time":{"start":1726980819198,"stop":1726980819217,"duration":19},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"8deaa6c5b009dc1ec6da163a0cbeee45\")>"},{"name":"cur_item_link","value":"'https://capital.com/en-ae/markets'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"8deaa6c5b009dc1ec6da163a0cbeee45\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"title_instrument","value":"''"}],"shouldDisplayMessage":true,"stepsCount":8,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"68c81b01f2572b52","name":"Screenshot","source":"68c81b01f2572b52.png","type":"image/png","size":135691},{"uid":"af3e47e6bd32f3f5","name":"stdout","source":"af3e47e6bd32f3f5.txt","type":"text/plain","size":6477}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":9,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1726980905806,"stop":1726980906037,"duration":231},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!322b | The Sign Up/Login/page of the corresponding trading instrument on the trading platform is not opened after clicking [numeric values] in the Buy column"},{"name":"feature","value":"Role: NoAuth"},{"name":"story","value":"Country: ae"},{"name":"tag","value":"bug_322b"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az768-676"},{"name":"thread","value":"29451-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"d","value":"'Chrome'"},{"name":"title_instrument","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":30,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":30},"items":[{"uid":"54234edc2aac9e20","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/154//#testresult/54234edc2aac9e20","status":"failed","statusDetails":"Failed: Bug № ??? 'Markets' menu not present in DOM for 'ae' country '' language","time":{"start":1726964827030,"stop":1726964842890,"duration":15860}},{"uid":"3d294f45d994b8e1","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/153//#testresult/3d294f45d994b8e1","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1726879072208,"stop":1726879095285,"duration":23077}},{"uid":"2d88933813bb1cc8","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/152//#testresult/2d88933813bb1cc8","status":"failed","statusDetails":"Failed: Bug № ??? 'Markets' menu not present in DOM for 'ae' country '' language","time":{"start":1726792374713,"stop":1726792391264,"duration":16551}},{"uid":"fb98b8ca721a29ff","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/151//#testresult/fb98b8ca721a29ff","status":"failed","statusDetails":"Failed: Bug # 55!322 f\nExpected result: Login form is openedf\nActual result: Login form is not opened","time":{"start":1726725472551,"stop":1726725495463,"duration":22912}},{"uid":"670607c9d790d555","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/150//#testresult/670607c9d790d555","status":"failed","statusDetails":"Failed: Bug # 55!322 f\nExpected result: Login form is openedf\nActual result: Login form is not opened","time":{"start":1726706177497,"stop":1726706199943,"duration":22446}},{"uid":"6227875b2bdb57b8","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/149//#testresult/6227875b2bdb57b8","status":"failed","statusDetails":"Failed: Bug # 55!322 f\nExpected result: Login form is openedf\nActual result: Login form is not opened","time":{"start":1726619773773,"stop":1726619796874,"duration":23101}},{"uid":"4a7bb7eab67b4411","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/148//#testresult/4a7bb7eab67b4411","status":"failed","statusDetails":"Failed: Bug # 55!322 f\nExpected result: Login form is openedf\nActual result: Login form is not opened","time":{"start":1726575708098,"stop":1726575730993,"duration":22895}},{"uid":"f7e14d48d55750c1","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/147//#testresult/f7e14d48d55750c1","status":"failed","statusDetails":"Failed: Bug # 55!322 f\nExpected result: Login form is openedf\nActual result: Login form is not opened","time":{"start":1726532968864,"stop":1726532991676,"duration":22812}},{"uid":"578d19bd0330c81","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/146//#testresult/578d19bd0330c81","status":"failed","statusDetails":"Failed: Bug № ??? 'Markets' menu not present in DOM for 'ae' country '' language","time":{"start":1726446747161,"stop":1726446763987,"duration":16826}},{"uid":"9940c9f27f5ed300","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/145//#testresult/9940c9f27f5ed300","status":"failed","statusDetails":"Failed: Bug # 55!322 f\nExpected result: Login form is openedf\nActual result: Login form is not opened","time":{"start":1726384626058,"stop":1726384648939,"duration":22881}},{"uid":"2a3e241d2c22ed5d","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/144//#testresult/2a3e241d2c22ed5d","status":"failed","statusDetails":"Failed: Bug № ??? 'Markets' menu not present in DOM for 'ae' country '' language","time":{"start":1726359486096,"stop":1726359502630,"duration":16534}},{"uid":"eed073f848fdcce0","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/143//#testresult/eed073f848fdcce0","status":"failed","statusDetails":"Failed: Bug # 55!322 f\nExpected result: Login form is openedf\nActual result: Login form is not opened","time":{"start":1726287451545,"stop":1726287474327,"duration":22782}},{"uid":"ab3ae74da02bf929","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/142//#testresult/ab3ae74da02bf929","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1726273349841,"stop":1726273374601,"duration":24760}},{"uid":"8b00032b2b415a8f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/141//#testresult/8b00032b2b415a8f","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1726187005339,"stop":1726187028675,"duration":23336}},{"uid":"c62cd71c35695f63","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/127//#testresult/c62cd71c35695f63","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1725409020311,"stop":1725409043600,"duration":23289}},{"uid":"adacfe88b556f639","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/126//#testresult/adacfe88b556f639","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1725322654020,"stop":1725322678750,"duration":24730}},{"uid":"b4dd15faee053d49","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/125//#testresult/b4dd15faee053d49","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1725236320501,"stop":1725236343572,"duration":23071}},{"uid":"2889c5a7fc249a9","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/124//#testresult/2889c5a7fc249a9","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1725150545396,"stop":1725150569690,"duration":24294}},{"uid":"99f5d5d7930229eb","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/123//#testresult/99f5d5d7930229eb","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1725079589229,"stop":1725079612479,"duration":23250}},{"uid":"38dec282db00f495","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/122//#testresult/38dec282db00f495","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1725064129554,"stop":1725064153969,"duration":24415}}]},"tags":["us_55","bug_322b"]},"source":"8c7d157fa7906719.json","parameterValues":["'ae'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoAuth'","'Chrome'","''"]}