{"uid":"883f60a465730d79","name":"TC_01.03.01_003 | Testing button [Go to platform] long position on trading instrument page. Bid:01.03.01_003-el.de.NoReg","fullName":"tests.US_01_Markets.US_01-03_Forex.US_01-03-01_forex_tests.TestTradingInstrumentPage#test_003_page_trading_instrument_long_position_go_to_platform_button","historyId":"e02159ae8e0246cca24669eeaca45481","time":{"start":1711646579105,"stop":1711646580387,"duration":1282},"description":"\n        Check: Button [Go to platform] long position on trading instrument page\n        Language: All. License: All,except FCA.\n        ","descriptionHtml":"<pre><code>    Check: Button [Go to platform] long position on trading instrument page\n    Language: All. License: All,except FCA.\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: 'using' must be a string\n  (Session info: chrome=123.0.6312.58)\nStacktrace:\n#0 0x5576038968a3 <unknown>\n#1 0x55760358c8c6 <unknown>\n#2 0x5576035d6de5 <unknown>\n#3 0x5576035d76d1 <unknown>\n#4 0x55760361a744 <unknown>\n#5 0x5576035f95cd <unknown>\n#6 0x557603617c19 <unknown>\n#7 0x5576035f9343 <unknown>\n#8 0x5576035ca593 <unknown>\n#9 0x5576035caf5e <unknown>\n#10 0x55760385a88b <unknown>\n#11 0x55760385e7e5 <unknown>\n#12 0x5576038485b1 <unknown>\n#13 0x55760385f372 <unknown>\n#14 0x55760382d8bf <unknown>\n#15 0x557603885768 <unknown>\n#16 0x55760388593b <unknown>\n#17 0x5576038959f4 <unknown>\n#18 0x7fab7f694ac3 <unknown>","statusTrace":"self = <US_01-03-01_forex_tests.TestTradingInstrumentPage object at 0x7f4979636ab0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8d90a0649a65835af234aae796aefd62\")>\ncur_language = 'el', cur_country = 'de', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_item_link = 'https://capital.com/el/eur-jpy-isotimia'\n\n    @allure.step(\"Start test button [Go to platform] on page instrument long position\")\n    @pytest.mark.test_003\n    def test_003_page_trading_instrument_long_position_go_to_platform_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link):\n        \"\"\"\n        Check: Button [Go to platform] long position on trading instrument page\n        Language: All. License: All,except FCA.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"01.03\", \"Markets > Menu item [Forex]\",\n            \".01_003\", \"Testing button [Go to platform] long position on trading instrument page\")\n    \n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = PageInstrumentLongPositionGoToPlatformButton(d, cur_item_link, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link)\n\ntests/US_01_Markets/US_01-03_Forex/US_01-03-01_forex_tests.py:98: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/PageInstrumentLongPositionGoToPlatformButton.py:22: in full_test_with_tpi\n    self.arrange_(d, cur_item_link)\npages/Elements/PageInstrumentLongPositionGoToPlatformButton.py:47: in arrange_\n    toolinfo = self.driver.find_element(PageTradingInstrumentMarketsLocators.TOOLINFO_LONG_POSITION_OVERNIGHT_FEE)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f49795c20f0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"invalid argument: \\'using\\' must be a string...\\\\n#16 0x55760388593b \\\\u003Cunknown>\\\\n#17 0x5576038959f4 \\\\u003Cunknown>\\\\n#18 0x7fab7f694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: 'using' must be a string\nE         (Session info: chrome=123.0.6312.58)\nE       Stacktrace:\nE       #0 0x5576038968a3 <unknown>\nE       #1 0x55760358c8c6 <unknown>\nE       #2 0x5576035d6de5 <unknown>\nE       #3 0x5576035d76d1 <unknown>\nE       #4 0x55760361a744 <unknown>\nE       #5 0x5576035f95cd <unknown>\nE       #6 0x557603617c19 <unknown>\nE       #7 0x5576035f9343 <unknown>\nE       #8 0x5576035ca593 <unknown>\nE       #9 0x5576035caf5e <unknown>\nE       #10 0x55760385a88b <unknown>\nE       #11 0x55760385e7e5 <unknown>\nE       #12 0x5576038485b1 <unknown>\nE       #13 0x55760385f372 <unknown>\nE       #14 0x55760382d8bf <unknown>\nE       #15 0x557603885768 <unknown>\nE       #16 0x55760388593b <unknown>\nE       #17 0x5576038959f4 <unknown>\nE       #18 0x7fab7f694ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidArgumentException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1711646309858,"stop":1711646310273,"duration":415},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1711646310273,"stop":1711646310274,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1711646310273,"stop":1711646310273,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1711646310274,"stop":1711646310274,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1711646310274,"stop":1711646310274,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1711646310274,"stop":1711646310274,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1711646560069,"stop":1711646560069,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [Go to platform] long position on trading instrument page\n        Language: All. License: All,except FCA.\n        ","status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: 'using' must be a string\n  (Session info: chrome=123.0.6312.58)\nStacktrace:\n#0 0x5576038968a3 <unknown>\n#1 0x55760358c8c6 <unknown>\n#2 0x5576035d6de5 <unknown>\n#3 0x5576035d76d1 <unknown>\n#4 0x55760361a744 <unknown>\n#5 0x5576035f95cd <unknown>\n#6 0x557603617c19 <unknown>\n#7 0x5576035f9343 <unknown>\n#8 0x5576035ca593 <unknown>\n#9 0x5576035caf5e <unknown>\n#10 0x55760385a88b <unknown>\n#11 0x55760385e7e5 <unknown>\n#12 0x5576038485b1 <unknown>\n#13 0x55760385f372 <unknown>\n#14 0x55760382d8bf <unknown>\n#15 0x557603885768 <unknown>\n#16 0x55760388593b <unknown>\n#17 0x5576038959f4 <unknown>\n#18 0x7fab7f694ac3 <unknown>","statusTrace":"self = <US_01-03-01_forex_tests.TestTradingInstrumentPage object at 0x7f4979636ab0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8d90a0649a65835af234aae796aefd62\")>\ncur_language = 'el', cur_country = 'de', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_item_link = 'https://capital.com/el/eur-jpy-isotimia'\n\n    @allure.step(\"Start test button [Go to platform] on page instrument long position\")\n    @pytest.mark.test_003\n    def test_003_page_trading_instrument_long_position_go_to_platform_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link):\n        \"\"\"\n        Check: Button [Go to platform] long position on trading instrument page\n        Language: All. License: All,except FCA.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"01.03\", \"Markets > Menu item [Forex]\",\n            \".01_003\", \"Testing button [Go to platform] long position on trading instrument page\")\n    \n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = PageInstrumentLongPositionGoToPlatformButton(d, cur_item_link, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link)\n\ntests/US_01_Markets/US_01-03_Forex/US_01-03-01_forex_tests.py:98: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/PageInstrumentLongPositionGoToPlatformButton.py:22: in full_test_with_tpi\n    self.arrange_(d, cur_item_link)\npages/Elements/PageInstrumentLongPositionGoToPlatformButton.py:47: in arrange_\n    toolinfo = self.driver.find_element(PageTradingInstrumentMarketsLocators.TOOLINFO_LONG_POSITION_OVERNIGHT_FEE)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f49795c20f0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"invalid argument: \\'using\\' must be a string...\\\\n#16 0x55760388593b \\\\u003Cunknown>\\\\n#17 0x5576038959f4 \\\\u003Cunknown>\\\\n#18 0x7fab7f694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: 'using' must be a string\nE         (Session info: chrome=123.0.6312.58)\nE       Stacktrace:\nE       #0 0x5576038968a3 <unknown>\nE       #1 0x55760358c8c6 <unknown>\nE       #2 0x5576035d6de5 <unknown>\nE       #3 0x5576035d76d1 <unknown>\nE       #4 0x55760361a744 <unknown>\nE       #5 0x5576035f95cd <unknown>\nE       #6 0x557603617c19 <unknown>\nE       #7 0x5576035f9343 <unknown>\nE       #8 0x5576035ca593 <unknown>\nE       #9 0x5576035caf5e <unknown>\nE       #10 0x55760385a88b <unknown>\nE       #11 0x55760385e7e5 <unknown>\nE       #12 0x5576038485b1 <unknown>\nE       #13 0x55760385f372 <unknown>\nE       #14 0x55760382d8bf <unknown>\nE       #15 0x557603885768 <unknown>\nE       #16 0x55760388593b <unknown>\nE       #17 0x5576038959f4 <unknown>\nE       #18 0x7fab7f694ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidArgumentException","steps":[{"name":"Start test button [Go to platform] on page instrument long position","time":{"start":1711646579105,"stop":1711646580386,"duration":1281},"status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: 'using' must be a string\n  (Session info: chrome=123.0.6312.58)\nStacktrace:\n#0 0x5576038968a3 <unknown>\n#1 0x55760358c8c6 <unknown>\n#2 0x5576035d6de5 <unknown>\n#3 0x5576035d76d1 <unknown>\n#4 0x55760361a744 <unknown>\n#5 0x5576035f95cd <unknown>\n#6 0x557603617c19 <unknown>\n#7 0x5576035f9343 <unknown>\n#8 0x5576035ca593 <unknown>\n#9 0x5576035caf5e <unknown>\n#10 0x55760385a88b <unknown>\n#11 0x55760385e7e5 <unknown>\n#12 0x5576038485b1 <unknown>\n#13 0x55760385f372 <unknown>\n#14 0x55760382d8bf <unknown>\n#15 0x557603885768 <unknown>\n#16 0x55760388593b <unknown>\n#17 0x5576038959f4 <unknown>\n#18 0x7fab7f694ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_01_Markets/US_01-03_Forex/US_01-03-01_forex_tests.py\", line 98, in test_003_page_trading_instrument_long_position_go_to_platform_button\n    test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/PageInstrumentLongPositionGoToPlatformButton.py\", line 22, in full_test_with_tpi\n    self.arrange_(d, cur_item_link)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/PageInstrumentLongPositionGoToPlatformButton.py\", line 47, in arrange_\n    toolinfo = self.driver.find_element(PageTradingInstrumentMarketsLocators.TOOLINFO_LONG_POSITION_OVERNIGHT_FEE)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 741, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"2024-03-28 17:18:29.799872   Start Building dynamic arguments for allure report generation","time":{"start":1711646579105,"stop":1711646579111,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"8d90a0649a65835af234aae796aefd62\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'el'"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'NoReg'"},{"name":"us","value":"'01.03'"},{"name":"desc_us","value":"'Markets > Menu item [Forex]'"},{"name":"num_tc","value":"'.01_003'"},{"name":"desc_tc","value":"'Testing button [Go to platform] long position on trading instrument page'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-03-28 17:18:29.799519   Set preconditions","time":{"start":1711646579111,"stop":1711646580376,"duration":1265},"status":"passed","steps":[{"name":"2024-03-28 17:18:29.798401   Start Checking Captcha","time":{"start":1711646579327,"stop":1711646580373,"duration":1046},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"8d90a0649a65835af234aae796aefd62\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'el'"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-03-28 17:18:29.804818   Start test for button [Go to platform] on trading instrument page","time":{"start":1711646580376,"stop":1711646580386,"duration":10},"status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: 'using' must be a string\n  (Session info: chrome=123.0.6312.58)\nStacktrace:\n#0 0x5576038968a3 <unknown>\n#1 0x55760358c8c6 <unknown>\n#2 0x5576035d6de5 <unknown>\n#3 0x5576035d76d1 <unknown>\n#4 0x55760361a744 <unknown>\n#5 0x5576035f95cd <unknown>\n#6 0x557603617c19 <unknown>\n#7 0x5576035f9343 <unknown>\n#8 0x5576035ca593 <unknown>\n#9 0x5576035caf5e <unknown>\n#10 0x55760385a88b <unknown>\n#11 0x55760385e7e5 <unknown>\n#12 0x5576038485b1 <unknown>\n#13 0x55760385f372 <unknown>\n#14 0x55760382d8bf <unknown>\n#15 0x557603885768 <unknown>\n#16 0x55760388593b <unknown>\n#17 0x5576038959f4 <unknown>\n#18 0x7fab7f694ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/PageInstrumentLongPositionGoToPlatformButton.py\", line 22, in full_test_with_tpi\n    self.arrange_(d, cur_item_link)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/PageInstrumentLongPositionGoToPlatformButton.py\", line 47, in arrange_\n    toolinfo = self.driver.find_element(PageTradingInstrumentMarketsLocators.TOOLINFO_LONG_POSITION_OVERNIGHT_FEE)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 741, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"8d90a0649a65835af234aae796aefd62\")>"},{"name":"cur_language","value":"'el'"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_item_link","value":"'https://capital.com/el/eur-jpy-isotimia'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"8d90a0649a65835af234aae796aefd62\")>"},{"name":"cur_language","value":"'el'"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_item_link","value":"'https://capital.com/el/eur-jpy-isotimia'"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"dc17c1613f8415f3","name":"Screenshot","source":"dc17c1613f8415f3.png","type":"image/png","size":155156},{"uid":"7f70b471e8aa1b99","name":"stdout","source":"7f70b471e8aa1b99.txt","type":"text/plain","size":1333}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1711646612529,"stop":1711646612664,"duration":135},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_01.03 | Markets > Menu item [Forex]"},{"name":"feature","value":"Language: el"},{"name":"story","value":"Country: de / Role: NoReg"},{"name":"tag","value":"test_003"},{"name":"tag","value":"us_01_03_01"},{"name":"parentSuite","value":"tests.US_01_Markets.US_01-03_Forex"},{"name":"suite","value":"US_01-03-01_forex_tests"},{"name":"subSuite","value":"TestTradingInstrumentPage"},{"name":"host","value":"fv-az841-92"},{"name":"thread","value":"10633-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_01_Markets.US_01-03_Forex.US_01-03-01_forex_tests"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'de'"},{"name":"cur_item_link","value":"'https://capital.com/el/eur-jpy-isotimia'"},{"name":"cur_language","value":"'el'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoReg'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["us_01_03_01","test_003"]},"source":"883f60a465730d79.json","parameterValues":["'de'","'https://capital.com/el/eur-jpy-isotimia'","'el'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoReg'","'Chrome'"]}