{"uid":"36d6739357022947","name":"TC_55!407 (Lang: en) | Bid:55!407-en.ae.NoReg","fullName":"tests.US_55_ReTestsManual.artemdashkov.US_55-artemdashkov_ReTestsManual_test.TestManualDetected#test_407_articles_all_authors_present_on_the_daniela_hathorn_page","historyId":"3f850112f1db3c7f1a4450401ec987b7","time":{"start":1730070973718,"stop":1730071039111,"duration":65393},"description":"\n        Check:  Menu section [Markets] > Menu item [Market analysis] >\n                Find and click article of 'Daniela Hathorn' author >\n                Click the link 'Daniela Hathorn' >\n                Click any article on the 'Daniela Hathorn' page\n        Language: EN\n        License/Country: SCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        ","descriptionHtml":"<pre><code>    Check:  Menu section [Markets] &gt; Menu item [Market analysis] &gt;\n            Find and click article of 'Daniela Hathorn' author &gt;\n            Click the link 'Daniela Hathorn' &gt;\n            Click any article on the 'Daniela Hathorn' page\n    Language: EN\n    License/Country: SCA\n    Role: NoReg, NoAuth, Auth\n    Author: Artem Dashkov\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","statusTrace":"self = <US_55-artemdashkov_ReTestsManual_test.TestManualDetected object at 0x7f35962bff50>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1c8a8d7167af425cdaa210a543e18301\")>\ncur_language = '', cur_country = 'ae', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test authors of articles on the 'Daniela Hathorn' page\")\n    @pytest.mark.parametrize('cur_language', [\"\"])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_407\n    def test_407_articles_all_authors_present_on_the_daniela_hathorn_page(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check:  Menu section [Markets] > Menu item [Market analysis] >\n                Find and click article of 'Daniela Hathorn' author >\n                Click the link 'Daniela Hathorn' >\n                Click any article on the 'Daniela Hathorn' page\n        Language: EN\n        License/Country: SCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"407\",\n            \"Menu section [Markets] > Menu item [Market analysis] > \"\n            \"Find and click article of 'Daniela Hathorn' author > \"\n            \"Click the link 'Daniela Hathorn' > \"\n            \"Click any article on the 'Daniela Hathorn' page\",\n            False, True\n        )\n        # pytest.skip(\"Промежуточная версия\")\n        # Arrange\n        cur_item_link = apply_preconditions_to_link(d, cur_language, cur_country,\n                                                    cur_role, cur_login, cur_password)\n    \n        page_menu = from_markets_menu_open_market_analysis.MenuNew(d, cur_item_link)\n        link = page_menu.from_markets_menu_open_market_analysis(\n            d, cur_language, cur_country, cur_item_link)\n    \n        test_element = BUG_407(d, link, bid)\n        test_element.arrange(d, link)\n    \n        # Act\n        test_element.act(d)\n    \n        # Assert\n>       test_element.assert_(d)\n\ntests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py:1145: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_407.py:205: in assert_\n    Common().pytest_fail(f\"Bug # {BUG_NUMBER} {msg}\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda\n\npages/common.py:235: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1730068347299,"stop":1730068347666,"duration":367},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1730068347666,"stop":1730068347666,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1730068347667,"stop":1730068347667,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1730068347667,"stop":1730068347667,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check:  Menu section [Markets] > Menu item [Market analysis] >\n                Find and click article of 'Daniela Hathorn' author >\n                Click the link 'Daniela Hathorn' >\n                Click any article on the 'Daniela Hathorn' page\n        Language: EN\n        License/Country: SCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        ","status":"failed","statusMessage":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","statusTrace":"self = <US_55-artemdashkov_ReTestsManual_test.TestManualDetected object at 0x7f35962bff50>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1c8a8d7167af425cdaa210a543e18301\")>\ncur_language = '', cur_country = 'ae', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test authors of articles on the 'Daniela Hathorn' page\")\n    @pytest.mark.parametrize('cur_language', [\"\"])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_407\n    def test_407_articles_all_authors_present_on_the_daniela_hathorn_page(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check:  Menu section [Markets] > Menu item [Market analysis] >\n                Find and click article of 'Daniela Hathorn' author >\n                Click the link 'Daniela Hathorn' >\n                Click any article on the 'Daniela Hathorn' page\n        Language: EN\n        License/Country: SCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"407\",\n            \"Menu section [Markets] > Menu item [Market analysis] > \"\n            \"Find and click article of 'Daniela Hathorn' author > \"\n            \"Click the link 'Daniela Hathorn' > \"\n            \"Click any article on the 'Daniela Hathorn' page\",\n            False, True\n        )\n        # pytest.skip(\"Промежуточная версия\")\n        # Arrange\n        cur_item_link = apply_preconditions_to_link(d, cur_language, cur_country,\n                                                    cur_role, cur_login, cur_password)\n    \n        page_menu = from_markets_menu_open_market_analysis.MenuNew(d, cur_item_link)\n        link = page_menu.from_markets_menu_open_market_analysis(\n            d, cur_language, cur_country, cur_item_link)\n    \n        test_element = BUG_407(d, link, bid)\n        test_element.arrange(d, link)\n    \n        # Act\n        test_element.act(d)\n    \n        # Assert\n>       test_element.assert_(d)\n\ntests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py:1145: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_407.py:205: in assert_\n    Common().pytest_fail(f\"Bug # {BUG_NUMBER} {msg}\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda\n\npages/common.py:235: Failed","steps":[{"name":"Start test authors of articles on the 'Daniela Hathorn' page","time":{"start":1730070973718,"stop":1730071039111,"duration":65393},"status":"failed","statusMessage":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py\", line 1145, in test_407_articles_all_authors_present_on_the_daniela_hathorn_page\n    test_element.assert_(d)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_407.py\", line 205, in assert_\n    Common().pytest_fail(f\"Bug # {BUG_NUMBER} {msg}\")\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/common.py\", line 235, in pytest_fail\n    pytest.fail(msg)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1730070973719,"stop":1730070973817,"duration":98},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"1c8a8d7167af425cdaa210a543e18301\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoReg'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'407'"},{"name":"desc_tc","value":"'Menu section [Markets] > Menu item [Market analysis] > Find and click article of 'Daniela Hathorn' author > Click the link 'Daniela Hathorn' > Click any article on the 'Daniela Hathorn' page'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"True"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1730070973817,"stop":1730070980344,"duration":6527},"status":"passed","steps":[{"name":"2024-10-27 22:32:27.258220   Set language and country","time":{"start":1730070978998,"stop":1730070980339,"duration":1341},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"1c8a8d7167af425cdaa210a543e18301\")>"},{"name":"cur_language","value":"'en'"},{"name":"cur_country","value":"'ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"1c8a8d7167af425cdaa210a543e18301\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Markets\" menu, \"Market analysis\" submenu","time":{"start":1730070980344,"stop":1730070988553,"duration":8209},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"1c8a8d7167af425cdaa210a543e18301\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"link","value":"'https://capital.com/en-ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-10-27 22:32:27.251203   1. Start Arrange: find target article,choose and click article,find and click link 'Daniela Hathorn', choose any random article","time":{"start":1730070988553,"stop":1730071036914,"duration":48361},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"1c8a8d7167af425cdaa210a543e18301\")>"},{"name":"link","value":"'https://capital.com/en-ae/analysis'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"\n2024-10-27 22:32:27.251230   2. Start Act.","time":{"start":1730071036914,"stop":1730071039110,"duration":2196},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"1c8a8d7167af425cdaa210a543e18301\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-10-27 22:32:27.251244   3. Start Assert. Check author of articles","time":{"start":1730071039110,"stop":1730071039110,"duration":0},"status":"failed","statusMessage":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_407.py\", line 205, in assert_\n    Common().pytest_fail(f\"Bug # {BUG_NUMBER} {msg}\")\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/common.py\", line 235, in pytest_fail\n    pytest.fail(msg)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"1c8a8d7167af425cdaa210a543e18301\")>"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"1c8a8d7167af425cdaa210a543e18301\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"2db2d178e5e46090","name":"Screenshot","source":"2db2d178e5e46090.png","type":"image/png","size":377579},{"uid":"4c0b42506fcf8640","name":"stdout","source":"4c0b42506fcf8640.txt","type":"text/plain","size":26709}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":8,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1730071120448,"stop":1730071120786,"duration":338},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!407 | Menu section [Markets] > Menu item [Market analysis] > Find and click article of 'Daniela Hathorn' author > Click the link 'Daniela Hathorn' > Click any article on the 'Daniela Hathorn' page"},{"name":"feature","value":"Role: NoReg"},{"name":"story","value":"Country: ae"},{"name":"tag","value":"bug_407"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.artemdashkov"},{"name":"suite","value":"US_55-artemdashkov_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetected"},{"name":"host","value":"fv-az700-749"},{"name":"thread","value":"4577-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.artemdashkov.US_55-artemdashkov_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoReg'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"54737c76f39bae4b","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/199//#testresult/54737c76f39bae4b","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team","time":{"start":1729984232405,"stop":1729984300010,"duration":67605}},{"uid":"ada7889ac0a23d1b","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/198//#testresult/ada7889ac0a23d1b","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team","time":{"start":1729898002748,"stop":1729898070368,"duration":67620}},{"uid":"8458fe27ee1b4ca4","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/197//#testresult/8458fe27ee1b4ca4","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1729812501727,"stop":1729812570021,"duration":68294}},{"uid":"66e21db014c01bea","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/196//#testresult/66e21db014c01bea","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1729725828873,"stop":1729725897462,"duration":68589}},{"uid":"2ad6749a5c5f26df","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/194//#testresult/2ad6749a5c5f26df","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1729656352724,"stop":1729656416973,"duration":64249}}]},"tags":["bug_407","us_55"]},"source":"36d6739357022947.json","parameterValues":["'ae'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoReg'","'Chrome'"]}