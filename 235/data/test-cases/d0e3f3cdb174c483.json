{"uid":"d0e3f3cdb174c483","name":"TC_55!322a (Lang: ar) | Bid:55!322a-ar.ae.NoAuth","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_322a","historyId":"3d4afb50abd913337e0f730980af706b","time":{"start":1732495941950,"stop":1732495960268,"duration":18318},"description":"\n        Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        ","descriptionHtml":"<pre><code>    Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n            Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n            English or Arabic language.\n    Language: EN, AR\n    License: SCA\n    Author: Kasila\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","statusTrace":"self = <pages.BugsManual.bug_322.AssertTPI object at 0x7fa1bc26e6f0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a6ce9fd37d663742bde133c3c47f64e3\")>\n\n    def assert_login(self, d):\n        print(f\"\\n{datetime.now()}   3. Assert\")\n    \n        try:\n>           login_form = self.driver.find_element(By.XPATH, '//strong/span[contains(text(), \"Login\")]')\n\npages/BugsManual/bug_322.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa1bc1a3c50>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x5638c6241740 \\\\u003Cunknown>\\\\n#17 0x5638c6251196 \\\\u003Cunknown>\\\\n#18 0x7f7801c94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//strong/span[contains(text(), \"Login\")]\"}\nE         (Session info: chrome=131.0.6778.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x5638c625231a <unknown>\nE       #1 0x5638c5d686e0 <unknown>\nE       #2 0x5638c5db73e6 <unknown>\nE       #3 0x5638c5db7681 <unknown>\nE       #4 0x5638c5dfcb04 <unknown>\nE       #5 0x5638c5ddb48d <unknown>\nE       #6 0x5638c5df9ed7 <unknown>\nE       #7 0x5638c5ddb203 <unknown>\nE       #8 0x5638c5da9cc0 <unknown>\nE       #9 0x5638c5daac9e <unknown>\nE       #10 0x5638c621fd0b <unknown>\nE       #11 0x5638c6223c92 <unknown>\nE       #12 0x5638c620cb3c <unknown>\nE       #13 0x5638c6224807 <unknown>\nE       #14 0x5638c61f20df <unknown>\nE       #15 0x5638c6241578 <unknown>\nE       #16 0x5638c6241740 <unknown>\nE       #17 0x5638c6251196 <unknown>\nE       #18 0x7f7801c94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7fa1bc34f2c0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a6ce9fd37d663742bde133c3c47f64e3\")>\ncur_language = 'ar', cur_country = 'ae', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ntitle_instrument = ''\n\n    @allure.step(\n        'Start retest manual AT_55!322a that the Sign Up/Login/page of the corresponding trading instrument on '\n        'the trading platform is opened after clicking [numeric values] in the Sell column.')\n    @pytest.mark.parametrize('cur_language', ['', 'ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('title_instrument', [''])\n    @pytest.mark.bug_322a\n    def test_322a(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, title_instrument):\n        \"\"\"\n        Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"322a\", 'The Sign Up/Login/page of the corresponding trading instrument on the trading platform'\n                   ' is not opened after clicking [numeric values] in the Sell column'\n        )\n    \n        match cur_language:\n            case '':\n                link = conditions_switch(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_sell(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n                        test_element.assert_signup(d)\n                    case 'NoAuth':\n                        test_element.assert_login(d)\n                    case 'Auth':\n                        test_element.assert_tpi(d, title_instrument)\n            case 'ar':\n                link = conditions_switch(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_sell(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n                        test_element.assert_signup(d)\n                    case 'NoAuth':\n>                       test_element.assert_login(d)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:271: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_322.py:129: in assert_login\n    Common.pytest_fail(\"Bug # 55!322 \"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 55!322 \\nExpected result: Login form is opened\\nActual result: Login form is not opened'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 55!322 \nE    Expected result: Login form is opened\nE    Actual result: Login form is not opened\n\npages/common.py:235: Failed","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1732494910311,"stop":1732494911080,"duration":769},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1732494911080,"stop":1732494911080,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1732494911080,"stop":1732494911080,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1732494911080,"stop":1732494911080,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        ","status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","statusTrace":"self = <pages.BugsManual.bug_322.AssertTPI object at 0x7fa1bc26e6f0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a6ce9fd37d663742bde133c3c47f64e3\")>\n\n    def assert_login(self, d):\n        print(f\"\\n{datetime.now()}   3. Assert\")\n    \n        try:\n>           login_form = self.driver.find_element(By.XPATH, '//strong/span[contains(text(), \"Login\")]')\n\npages/BugsManual/bug_322.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa1bc1a3c50>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x5638c6241740 \\\\u003Cunknown>\\\\n#17 0x5638c6251196 \\\\u003Cunknown>\\\\n#18 0x7f7801c94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//strong/span[contains(text(), \"Login\")]\"}\nE         (Session info: chrome=131.0.6778.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x5638c625231a <unknown>\nE       #1 0x5638c5d686e0 <unknown>\nE       #2 0x5638c5db73e6 <unknown>\nE       #3 0x5638c5db7681 <unknown>\nE       #4 0x5638c5dfcb04 <unknown>\nE       #5 0x5638c5ddb48d <unknown>\nE       #6 0x5638c5df9ed7 <unknown>\nE       #7 0x5638c5ddb203 <unknown>\nE       #8 0x5638c5da9cc0 <unknown>\nE       #9 0x5638c5daac9e <unknown>\nE       #10 0x5638c621fd0b <unknown>\nE       #11 0x5638c6223c92 <unknown>\nE       #12 0x5638c620cb3c <unknown>\nE       #13 0x5638c6224807 <unknown>\nE       #14 0x5638c61f20df <unknown>\nE       #15 0x5638c6241578 <unknown>\nE       #16 0x5638c6241740 <unknown>\nE       #17 0x5638c6251196 <unknown>\nE       #18 0x7f7801c94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7fa1bc34f2c0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a6ce9fd37d663742bde133c3c47f64e3\")>\ncur_language = 'ar', cur_country = 'ae', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ntitle_instrument = ''\n\n    @allure.step(\n        'Start retest manual AT_55!322a that the Sign Up/Login/page of the corresponding trading instrument on '\n        'the trading platform is opened after clicking [numeric values] in the Sell column.')\n    @pytest.mark.parametrize('cur_language', ['', 'ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('title_instrument', [''])\n    @pytest.mark.bug_322a\n    def test_322a(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, title_instrument):\n        \"\"\"\n        Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"322a\", 'The Sign Up/Login/page of the corresponding trading instrument on the trading platform'\n                   ' is not opened after clicking [numeric values] in the Sell column'\n        )\n    \n        match cur_language:\n            case '':\n                link = conditions_switch(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_sell(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n                        test_element.assert_signup(d)\n                    case 'NoAuth':\n                        test_element.assert_login(d)\n                    case 'Auth':\n                        test_element.assert_tpi(d, title_instrument)\n            case 'ar':\n                link = conditions_switch(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_sell(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n                        test_element.assert_signup(d)\n                    case 'NoAuth':\n>                       test_element.assert_login(d)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:271: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_322.py:129: in assert_login\n    Common.pytest_fail(\"Bug # 55!322 \"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 55!322 \\nExpected result: Login form is opened\\nActual result: Login form is not opened'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 55!322 \nE    Expected result: Login form is opened\nE    Actual result: Login form is not opened\n\npages/common.py:235: Failed","steps":[{"name":"Start retest manual AT_55!322a that the Sign Up/Login/page of the corresponding trading instrument on the trading platform is opened after clicking [numeric values] in the Sell column.","time":{"start":1732495941950,"stop":1732495960268,"duration":18318},"status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py\", line 271, in test_322a\n    test_element.assert_login(d)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_322.py\", line 129, in assert_login\n    Common.pytest_fail(\"Bug # 55!322 \"\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/common.py\", line 235, in pytest_fail\n    pytest.fail(msg)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1732495941950,"stop":1732495941952,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a6ce9fd37d663742bde133c3c47f64e3\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'322a'"},{"name":"desc_tc","value":"'The Sign Up/Login/page of the corresponding trading instrument on the trading platform is not opened after clicking [numeric values] in the Sell column'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1732495941952,"stop":1732495946890,"duration":4938},"status":"passed","steps":[{"name":"2024-11-25 00:35:10.284817   Set language and country","time":{"start":1732495944376,"stop":1732495946885,"duration":2509},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a6ce9fd37d663742bde133c3c47f64e3\")>"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a6ce9fd37d663742bde133c3c47f64e3\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Trading\" menu, \"Trading\" submenu","time":{"start":1732495946890,"stop":1732495955101,"duration":8211},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a6ce9fd37d663742bde133c3c47f64e3\")>"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"link","value":"'https://capital.com/ar-ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-11-25 00:35:10.116649   1. Start test that the Clicking [numeric values] in the Sell column in Menu tittle Markets opens the Sign-Up /Login form or page of the corresponding trading instrument on the trading platform.","time":{"start":1732495955102,"stop":1732495955120,"duration":18},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a6ce9fd37d663742bde133c3c47f64e3\")>"},{"name":"cur_item_link","value":"'https://capital.com/ar-ae/markets'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a6ce9fd37d663742bde133c3c47f64e3\")>"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"title_instrument","value":"''"}],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"dd4596bf94c671af","name":"Screenshot","source":"dd4596bf94c671af.png","type":"image/png","size":130447},{"uid":"abfc90969539dd06","name":"stdout","source":"abfc90969539dd06.txt","type":"text/plain","size":4050}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1732497057699,"stop":1732497057986,"duration":287},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!322a | The Sign Up/Login/page of the corresponding trading instrument on the trading platform is not opened after clicking [numeric values] in the Sell column"},{"name":"feature","value":"Role: NoAuth"},{"name":"story","value":"Country: ae"},{"name":"tag","value":"bug_322a"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az885-493"},{"name":"thread","value":"34944-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"'ar'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"d","value":"'Chrome'"},{"name":"title_instrument","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":28,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":30},"items":[{"uid":"a92717bee596b96","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/234//#testresult/a92717bee596b96","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <iconex _ngcontent-ng-c3701643753=\"\" name=\"iconex-arrow-down-mini\" class=\"icon-square\" _nghost-ng-c3863089522=\"\">...</iconex> is not clickable at point (1904, 24). Other element would receive the click: <div class=\"cdk-overlay-backdrop modal-overlay2 cdk-overlay-backdrop-showing\"></div>\n  (Session info: chrome=131.0.6778.69)\nStacktrace:\n#0 0x562667ccd31a <unknown>\n#1 0x5626677e36e0 <unknown>\n#2 0x5626678390f6 <unknown>\n#3 0x56266783705d <unknown>\n#4 0x562667834775 <unknown>\n#5 0x56266783392f <unknown>\n#6 0x5626678270d5 <unknown>\n#7 0x562667856462 <unknown>\n#8 0x562667826a18 <unknown>\n#9 0x56266785662e <unknown>\n#10 0x562667874ed7 <unknown>\n#11 0x562667856203 <unknown>\n#12 0x562667824cc0 <unknown>\n#13 0x562667825c9e <unknown>\n#14 0x562667c9ad0b <unknown>\n#15 0x562667c9ec92 <unknown>\n#16 0x562667c87b3c <unknown>\n#17 0x562667c9f807 <unknown>\n#18 0x562667c6d0df <unknown>\n#19 0x562667cbc578 <unknown>\n#20 0x562667cbc740 <unknown>\n#21 0x562667ccc196 <unknown>\n#22 0x7f3248e94ac3 <unknown>","time":{"start":1732408093994,"stop":1732408105228,"duration":11234}},{"uid":"15591c67a26e9994","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/233//#testresult/15591c67a26e9994","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <iconex _ngcontent-ng-c3701643753=\"\" name=\"iconex-arrow-down-mini\" class=\"icon-square\" _nghost-ng-c3863089522=\"\">...</iconex> is not clickable at point (1904, 24). Other element would receive the click: <div class=\"cdk-overlay-backdrop modal-overlay2 cdk-overlay-backdrop-showing\"></div>\n  (Session info: chrome=131.0.6778.69)\nStacktrace:\n#0 0x56193d61331a <unknown>\n#1 0x56193d1296e0 <unknown>\n#2 0x56193d17f0f6 <unknown>\n#3 0x56193d17d05d <unknown>\n#4 0x56193d17a775 <unknown>\n#5 0x56193d17992f <unknown>\n#6 0x56193d16d0d5 <unknown>\n#7 0x56193d19c462 <unknown>\n#8 0x56193d16ca18 <unknown>\n#9 0x56193d19c62e <unknown>\n#10 0x56193d1baed7 <unknown>\n#11 0x56193d19c203 <unknown>\n#12 0x56193d16acc0 <unknown>\n#13 0x56193d16bc9e <unknown>\n#14 0x56193d5e0d0b <unknown>\n#15 0x56193d5e4c92 <unknown>\n#16 0x56193d5cdb3c <unknown>\n#17 0x56193d5e5807 <unknown>\n#18 0x56193d5b30df <unknown>\n#19 0x56193d602578 <unknown>\n#20 0x56193d602740 <unknown>\n#21 0x56193d612196 <unknown>\n#22 0x7f9e7ce94ac3 <unknown>","time":{"start":1732326725148,"stop":1732326735918,"duration":10770}},{"uid":"daddee5fcdd76147","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/232//#testresult/daddee5fcdd76147","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country 'ar' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1732253086073,"stop":1732253099053,"duration":12980}},{"uid":"8ad59e55899eaee9","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/231//#testresult/8ad59e55899eaee9","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country 'ar' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1732237160318,"stop":1732237172688,"duration":12370}},{"uid":"ecd07f6d7e8eaafc","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/230//#testresult/ecd07f6d7e8eaafc","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country 'ar' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1732150733628,"stop":1732150745761,"duration":12133}},{"uid":"b98622248f5316cc","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/229//#testresult/b98622248f5316cc","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country 'ar' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1732063965568,"stop":1732063977598,"duration":12030}},{"uid":"a3cdc404f3a10587","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/228//#testresult/a3cdc404f3a10587","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country 'ar' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1731978357933,"stop":1731978370139,"duration":12206}},{"uid":"15dd3604da35519a","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/227//#testresult/15dd3604da35519a","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country 'ar' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1731890476250,"stop":1731890488107,"duration":11857}},{"uid":"63c85927958090c4","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/226//#testresult/63c85927958090c4","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country 'ar' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1731803523294,"stop":1731803535456,"duration":12162}},{"uid":"156c048329d42056","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/225//#testresult/156c048329d42056","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country 'ar' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1731737873766,"stop":1731737885637,"duration":11871}},{"uid":"830e590f550d68df","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/224//#testresult/830e590f550d68df","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country 'ar' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1731718049663,"stop":1731718061955,"duration":12292}},{"uid":"47fc616c0ffe202b","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/223//#testresult/47fc616c0ffe202b","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country 'ar' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1731652487580,"stop":1731652499602,"duration":12022}},{"uid":"e1313617b4386f32","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/222//#testresult/e1313617b4386f32","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1731630750753,"stop":1731630769028,"duration":18275}},{"uid":"cc26baa57306636c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/221//#testresult/cc26baa57306636c","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1731544779538,"stop":1731544797892,"duration":18354}},{"uid":"d9095c42fe148cb4","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/220//#testresult/d9095c42fe148cb4","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1731479244405,"stop":1731479262551,"duration":18146}},{"uid":"46346ba3b387dee0","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/219//#testresult/46346ba3b387dee0","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country 'ar' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1731459850293,"stop":1731459862459,"duration":12166}},{"uid":"5a901284e2c280ce","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/218//#testresult/5a901284e2c280ce","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country 'ar' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1731373415932,"stop":1731373427817,"duration":11885}},{"uid":"aeb927b7c5ac1a9d","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/217//#testresult/aeb927b7c5ac1a9d","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country 'ar' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1731286394884,"stop":1731286406701,"duration":11817}},{"uid":"71996481f8828db8","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/216//#testresult/71996481f8828db8","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country 'ar' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1731198980854,"stop":1731198994259,"duration":13405}},{"uid":"bd0a925ce9f99612","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/215//#testresult/bd0a925ce9f99612","status":"failed","statusDetails":"Failed: Bug # ??? For 'ae' country 'ar' language the page \"Markets\" Menu > \"Markets\" Submenu doesn't exist in DOM","time":{"start":1731113177072,"stop":1731113188990,"duration":11918}}]},"tags":["us_55","bug_322a"]},"source":"d0e3f3cdb174c483.json","parameterValues":["'ae'","'ar'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoAuth'","'Chrome'","''"]}