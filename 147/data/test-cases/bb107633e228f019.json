{"uid":"bb107633e228f019","name":"TC_55!307 (Lang: en) | Bid:55!307-en.ae.NoAuth","fullName":"tests.US_55_ReTestsManual.saii-d3v.US_55-saii-d3v_ReTestsManual_test.TestManualDetectedBugs#test_307","historyId":"68ed277cee601d07e75b7c3f4c399af6","time":{"start":1726531400900,"stop":1726531467462,"duration":66562},"description":"\n         Check: Error message “DNS_PROBE_FINISHED_NXDOMAIN” is displayed\n         after clicking any of 12 links in the text on the page “Stock Market Trading Hours”\n         when EN language is selected\n         Language: EN.\n         License: SCA.\n         Author: Sergey Aiidzhanov\n         ","descriptionHtml":"<pre><code>     Check: Error message “DNS_PROBE_FINISHED_NXDOMAIN” is displayed\n     after clicking any of 12 links in the text on the page “Stock Market Trading Hours”\n     when EN language is selected\n     Language: EN.\n     License: SCA.\n     Author: Sergey Aiidzhanov\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 60.000\n  (Session info: chrome=128.0.6613.119)\nStacktrace:\n#0 0x55a3e3d1d2da <unknown>\n#1 0x55a3e39eb200 <unknown>\n#2 0x55a3e39d31c0 <unknown>\n#3 0x55a3e39d2ead <unknown>\n#4 0x55a3e39d0eb8 <unknown>\n#5 0x55a3e39d16bf <unknown>\n#6 0x55a3e39e11eb <unknown>\n#7 0x55a3e39f75e4 <unknown>\n#8 0x55a3e39fcb1b <unknown>\n#9 0x55a3e39d1dce <unknown>\n#10 0x55a3e39f743f <unknown>\n#11 0x55a3e3a7dcc6 <unknown>\n#12 0x55a3e3a5f673 <unknown>\n#13 0x55a3e3a2d473 <unknown>\n#14 0x55a3e3a2e47e <unknown>\n#15 0x55a3e3ce40db <unknown>\n#16 0x55a3e3ce8071 <unknown>\n#17 0x55a3e3cd09d5 <unknown>\n#18 0x55a3e3ce8bf2 <unknown>\n#19 0x55a3e3cb5b6f <unknown>\n#20 0x55a3e3d0c248 <unknown>\n#21 0x55a3e3d0c417 <unknown>\n#22 0x55a3e3d1c0cc <unknown>\n#23 0x7f9267e94ac3 <unknown>","statusTrace":"self = <US_55-saii-d3v_ReTestsManual_test.TestManualDetectedBugs object at 0x7fbf74033290>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7ccc2365cb21f12b42ecdbe0a9782a87\")>\ncur_language = '', cur_country = 'ae', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\n        'Start retest manual TC_55!307 Error message “DNS_PROBE_FINISHED_NXDOMAIN” is displayed '\n        'after clicking any of 12 links in the text on the page “Stock Market Trading Hours” '\n        'when EN language is selected')\n    @pytest.mark.parametrize('cur_language', [''])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', ['Auth', 'NoAuth', 'NoReg'])\n    @pytest.mark.bug_307\n    def test_307(self, worker_id, d, cur_language, cur_country, cur_role,\n                 cur_login, cur_password):\n        \"\"\"\n         Check: Error message “DNS_PROBE_FINISHED_NXDOMAIN” is displayed\n         after clicking any of 12 links in the text on the page “Stock Market Trading Hours”\n         when EN language is selected\n         Language: EN.\n         License: SCA.\n         Author: Sergey Aiidzhanov\n         \"\"\"\n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"307\",\n            'Error message “DNS_PROBE_FINISHED_NXDOMAIN” is displayed '\n            'after clicking any of 12 links in the text on the page “Stock Market Trading Hours” '\n            'when EN language is selected',\n            False,\n            False\n        )\n        # Arrange\n        page_conditions = NewConditions(d)\n>       link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL_NEW_EN_AE, \"\",\n            cur_language, cur_country, cur_role, cur_login, cur_password\n        )\n\ntests/US_55_ReTestsManual/saii-d3v/US_55-saii-d3v_ReTestsManual_test.py:736: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_new.py:109: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\npages/conditions_new.py:221: in to_do_authorisation_new\n    wait.until(EC.title_is(\"Trading Platform | Capital.com\"))\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:56: in _predicate\n    return driver.title == title\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:374: in title\n    return self.execute(Command.GET_TITLE).get(\"value\", \"\")\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbf74053b30>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 6...\\\\n#21 0x55a3e3d0c417 \\\\u003Cunknown>\\\\n#22 0x55a3e3d1c0cc \\\\u003Cunknown>\\\\n#23 0x7f9267e94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 60.000\nE         (Session info: chrome=128.0.6613.119)\nE       Stacktrace:\nE       #0 0x55a3e3d1d2da <unknown>\nE       #1 0x55a3e39eb200 <unknown>\nE       #2 0x55a3e39d31c0 <unknown>\nE       #3 0x55a3e39d2ead <unknown>\nE       #4 0x55a3e39d0eb8 <unknown>\nE       #5 0x55a3e39d16bf <unknown>\nE       #6 0x55a3e39e11eb <unknown>\nE       #7 0x55a3e39f75e4 <unknown>\nE       #8 0x55a3e39fcb1b <unknown>\nE       #9 0x55a3e39d1dce <unknown>\nE       #10 0x55a3e39f743f <unknown>\nE       #11 0x55a3e3a7dcc6 <unknown>\nE       #12 0x55a3e3a5f673 <unknown>\nE       #13 0x55a3e3a2d473 <unknown>\nE       #14 0x55a3e3a2e47e <unknown>\nE       #15 0x55a3e3ce40db <unknown>\nE       #16 0x55a3e3ce8071 <unknown>\nE       #17 0x55a3e3cd09d5 <unknown>\nE       #18 0x55a3e3ce8bf2 <unknown>\nE       #19 0x55a3e3cb5b6f <unknown>\nE       #20 0x55a3e3d0c248 <unknown>\nE       #21 0x55a3e3d0c417 <unknown>\nE       #22 0x55a3e3d1c0cc <unknown>\nE       #23 0x7f9267e94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1726529485389,"stop":1726529485799,"duration":410},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1726529485799,"stop":1726529485799,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1726529485799,"stop":1726529485799,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1726529485799,"stop":1726529485799,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n         Check: Error message “DNS_PROBE_FINISHED_NXDOMAIN” is displayed\n         after clicking any of 12 links in the text on the page “Stock Market Trading Hours”\n         when EN language is selected\n         Language: EN.\n         License: SCA.\n         Author: Sergey Aiidzhanov\n         ","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 60.000\n  (Session info: chrome=128.0.6613.119)\nStacktrace:\n#0 0x55a3e3d1d2da <unknown>\n#1 0x55a3e39eb200 <unknown>\n#2 0x55a3e39d31c0 <unknown>\n#3 0x55a3e39d2ead <unknown>\n#4 0x55a3e39d0eb8 <unknown>\n#5 0x55a3e39d16bf <unknown>\n#6 0x55a3e39e11eb <unknown>\n#7 0x55a3e39f75e4 <unknown>\n#8 0x55a3e39fcb1b <unknown>\n#9 0x55a3e39d1dce <unknown>\n#10 0x55a3e39f743f <unknown>\n#11 0x55a3e3a7dcc6 <unknown>\n#12 0x55a3e3a5f673 <unknown>\n#13 0x55a3e3a2d473 <unknown>\n#14 0x55a3e3a2e47e <unknown>\n#15 0x55a3e3ce40db <unknown>\n#16 0x55a3e3ce8071 <unknown>\n#17 0x55a3e3cd09d5 <unknown>\n#18 0x55a3e3ce8bf2 <unknown>\n#19 0x55a3e3cb5b6f <unknown>\n#20 0x55a3e3d0c248 <unknown>\n#21 0x55a3e3d0c417 <unknown>\n#22 0x55a3e3d1c0cc <unknown>\n#23 0x7f9267e94ac3 <unknown>","statusTrace":"self = <US_55-saii-d3v_ReTestsManual_test.TestManualDetectedBugs object at 0x7fbf74033290>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7ccc2365cb21f12b42ecdbe0a9782a87\")>\ncur_language = '', cur_country = 'ae', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\n        'Start retest manual TC_55!307 Error message “DNS_PROBE_FINISHED_NXDOMAIN” is displayed '\n        'after clicking any of 12 links in the text on the page “Stock Market Trading Hours” '\n        'when EN language is selected')\n    @pytest.mark.parametrize('cur_language', [''])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', ['Auth', 'NoAuth', 'NoReg'])\n    @pytest.mark.bug_307\n    def test_307(self, worker_id, d, cur_language, cur_country, cur_role,\n                 cur_login, cur_password):\n        \"\"\"\n         Check: Error message “DNS_PROBE_FINISHED_NXDOMAIN” is displayed\n         after clicking any of 12 links in the text on the page “Stock Market Trading Hours”\n         when EN language is selected\n         Language: EN.\n         License: SCA.\n         Author: Sergey Aiidzhanov\n         \"\"\"\n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"307\",\n            'Error message “DNS_PROBE_FINISHED_NXDOMAIN” is displayed '\n            'after clicking any of 12 links in the text on the page “Stock Market Trading Hours” '\n            'when EN language is selected',\n            False,\n            False\n        )\n        # Arrange\n        page_conditions = NewConditions(d)\n>       link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL_NEW_EN_AE, \"\",\n            cur_language, cur_country, cur_role, cur_login, cur_password\n        )\n\ntests/US_55_ReTestsManual/saii-d3v/US_55-saii-d3v_ReTestsManual_test.py:736: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_new.py:109: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\npages/conditions_new.py:221: in to_do_authorisation_new\n    wait.until(EC.title_is(\"Trading Platform | Capital.com\"))\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:56: in _predicate\n    return driver.title == title\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:374: in title\n    return self.execute(Command.GET_TITLE).get(\"value\", \"\")\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbf74053b30>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 6...\\\\n#21 0x55a3e3d0c417 \\\\u003Cunknown>\\\\n#22 0x55a3e3d1c0cc \\\\u003Cunknown>\\\\n#23 0x7f9267e94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 60.000\nE         (Session info: chrome=128.0.6613.119)\nE       Stacktrace:\nE       #0 0x55a3e3d1d2da <unknown>\nE       #1 0x55a3e39eb200 <unknown>\nE       #2 0x55a3e39d31c0 <unknown>\nE       #3 0x55a3e39d2ead <unknown>\nE       #4 0x55a3e39d0eb8 <unknown>\nE       #5 0x55a3e39d16bf <unknown>\nE       #6 0x55a3e39e11eb <unknown>\nE       #7 0x55a3e39f75e4 <unknown>\nE       #8 0x55a3e39fcb1b <unknown>\nE       #9 0x55a3e39d1dce <unknown>\nE       #10 0x55a3e39f743f <unknown>\nE       #11 0x55a3e3a7dcc6 <unknown>\nE       #12 0x55a3e3a5f673 <unknown>\nE       #13 0x55a3e3a2d473 <unknown>\nE       #14 0x55a3e3a2e47e <unknown>\nE       #15 0x55a3e3ce40db <unknown>\nE       #16 0x55a3e3ce8071 <unknown>\nE       #17 0x55a3e3cd09d5 <unknown>\nE       #18 0x55a3e3ce8bf2 <unknown>\nE       #19 0x55a3e3cb5b6f <unknown>\nE       #20 0x55a3e3d0c248 <unknown>\nE       #21 0x55a3e3d0c417 <unknown>\nE       #22 0x55a3e3d1c0cc <unknown>\nE       #23 0x7f9267e94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","steps":[{"name":"Start retest manual TC_55!307 Error message “DNS_PROBE_FINISHED_NXDOMAIN” is displayed after clicking any of 12 links in the text on the page “Stock Market Trading Hours” when EN language is selected","time":{"start":1726531400900,"stop":1726531467462,"duration":66562},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 60.000\n  (Session info: chrome=128.0.6613.119)\nStacktrace:\n#0 0x55a3e3d1d2da <unknown>\n#1 0x55a3e39eb200 <unknown>\n#2 0x55a3e39d31c0 <unknown>\n#3 0x55a3e39d2ead <unknown>\n#4 0x55a3e39d0eb8 <unknown>\n#5 0x55a3e39d16bf <unknown>\n#6 0x55a3e39e11eb <unknown>\n#7 0x55a3e39f75e4 <unknown>\n#8 0x55a3e39fcb1b <unknown>\n#9 0x55a3e39d1dce <unknown>\n#10 0x55a3e39f743f <unknown>\n#11 0x55a3e3a7dcc6 <unknown>\n#12 0x55a3e3a5f673 <unknown>\n#13 0x55a3e3a2d473 <unknown>\n#14 0x55a3e3a2e47e <unknown>\n#15 0x55a3e3ce40db <unknown>\n#16 0x55a3e3ce8071 <unknown>\n#17 0x55a3e3cd09d5 <unknown>\n#18 0x55a3e3ce8bf2 <unknown>\n#19 0x55a3e3cb5b6f <unknown>\n#20 0x55a3e3d0c248 <unknown>\n#21 0x55a3e3d0c417 <unknown>\n#22 0x55a3e3d1c0cc <unknown>\n#23 0x7f9267e94ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/saii-d3v/US_55-saii-d3v_ReTestsManual_test.py\", line 736, in test_307\n    link = page_conditions.preconditions(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_new.py\", line 109, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_new.py\", line 221, in to_do_authorisation_new\n    wait.until(EC.title_is(\"Trading Platform | Capital.com\"))\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 56, in _predicate\n    return driver.title == title\n           ^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 374, in title\n    return self.execute(Command.GET_TITLE).get(\"value\", \"\")\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1726531400900,"stop":1726531400902,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"7ccc2365cb21f12b42ecdbe0a9782a87\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'307'"},{"name":"desc_tc","value":"'Error message “DNS_PROBE_FINISHED_NXDOMAIN” is displayed after clicking any of 12 links in the text on the page “Stock Market Trading Hours” when EN language is selected'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1726531400902,"stop":1726531467461,"duration":66559},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 60.000\n  (Session info: chrome=128.0.6613.119)\nStacktrace:\n#0 0x55a3e3d1d2da <unknown>\n#1 0x55a3e39eb200 <unknown>\n#2 0x55a3e39d31c0 <unknown>\n#3 0x55a3e39d2ead <unknown>\n#4 0x55a3e39d0eb8 <unknown>\n#5 0x55a3e39d16bf <unknown>\n#6 0x55a3e39e11eb <unknown>\n#7 0x55a3e39f75e4 <unknown>\n#8 0x55a3e39fcb1b <unknown>\n#9 0x55a3e39d1dce <unknown>\n#10 0x55a3e39f743f <unknown>\n#11 0x55a3e3a7dcc6 <unknown>\n#12 0x55a3e3a5f673 <unknown>\n#13 0x55a3e3a2d473 <unknown>\n#14 0x55a3e3a2e47e <unknown>\n#15 0x55a3e3ce40db <unknown>\n#16 0x55a3e3ce8071 <unknown>\n#17 0x55a3e3cd09d5 <unknown>\n#18 0x55a3e3ce8bf2 <unknown>\n#19 0x55a3e3cb5b6f <unknown>\n#20 0x55a3e3d0c248 <unknown>\n#21 0x55a3e3d0c417 <unknown>\n#22 0x55a3e3d1c0cc <unknown>\n#23 0x7f9267e94ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_new.py\", line 109, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_new.py\", line 221, in to_do_authorisation_new\n    wait.until(EC.title_is(\"Trading Platform | Capital.com\"))\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 56, in _predicate\n    return driver.title == title\n           ^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 374, in title\n    return self.execute(Command.GET_TITLE).get(\"value\", \"\")\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"2024-09-16 23:31:25.345652   Start Authorisation","time":{"start":1726531406024,"stop":1726531467460,"duration":61436},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 60.000\n  (Session info: chrome=128.0.6613.119)\nStacktrace:\n#0 0x55a3e3d1d2da <unknown>\n#1 0x55a3e39eb200 <unknown>\n#2 0x55a3e39d31c0 <unknown>\n#3 0x55a3e39d2ead <unknown>\n#4 0x55a3e39d0eb8 <unknown>\n#5 0x55a3e39d16bf <unknown>\n#6 0x55a3e39e11eb <unknown>\n#7 0x55a3e39f75e4 <unknown>\n#8 0x55a3e39fcb1b <unknown>\n#9 0x55a3e39d1dce <unknown>\n#10 0x55a3e39f743f <unknown>\n#11 0x55a3e3a7dcc6 <unknown>\n#12 0x55a3e3a5f673 <unknown>\n#13 0x55a3e3a2d473 <unknown>\n#14 0x55a3e3a2e47e <unknown>\n#15 0x55a3e3ce40db <unknown>\n#16 0x55a3e3ce8071 <unknown>\n#17 0x55a3e3cd09d5 <unknown>\n#18 0x55a3e3ce8bf2 <unknown>\n#19 0x55a3e3cb5b6f <unknown>\n#20 0x55a3e3d0c248 <unknown>\n#21 0x55a3e3d0c417 <unknown>\n#22 0x55a3e3d1c0cc <unknown>\n#23 0x7f9267e94ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_new.py\", line 221, in to_do_authorisation_new\n    wait.until(EC.title_is(\"Trading Platform | Capital.com\"))\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 56, in _predicate\n    return driver.title == title\n           ^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 374, in title\n    return self.execute(Command.GET_TITLE).get(\"value\", \"\")\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"7ccc2365cb21f12b42ecdbe0a9782a87\")>"},{"name":"link","value":"'https://capital.com/en-ae'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"7ccc2365cb21f12b42ecdbe0a9782a87\")>"},{"name":"host","value":"'https://capital.com/en-ae'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"7ccc2365cb21f12b42ecdbe0a9782a87\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"67d1fe39447fcb92","name":"Screenshot","source":"67d1fe39447fcb92.png","type":"image/png","size":164383},{"uid":"b894a65703ff9476","name":"stdout","source":"b894a65703ff9476.txt","type":"text/plain","size":2618}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1726532168131,"stop":1726532168468,"duration":337},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!307 | Error message “DNS_PROBE_FINISHED_NXDOMAIN” is displayed after clicking any of 12 links in the text on the page “Stock Market Trading Hours” when EN language is selected"},{"name":"feature","value":"Role: NoAuth"},{"name":"story","value":"Country: ae"},{"name":"tag","value":"bug_307"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.saii-d3v"},{"name":"suite","value":"US_55-saii-d3v_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az1986-153"},{"name":"thread","value":"17317-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.saii-d3v.US_55-saii-d3v_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":29,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":30},"items":[{"uid":"256606568fa3bef7","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/146//#testresult/256606568fa3bef7","status":"failed","statusDetails":"Failed: Bug № ??? 'Markets' menu not present in DOM for 'ae' country '' language","time":{"start":1726445182607,"stop":1726445199189,"duration":16582}},{"uid":"76c1d49197c8bb0","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/145//#testresult/76c1d49197c8bb0","status":"failed","statusDetails":"Failed: Bug # 55!307 The corresponding page is NOT opened","time":{"start":1726383155696,"stop":1726383179301,"duration":23605}},{"uid":"8dc3c40ed63eb3e1","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/144//#testresult/8dc3c40ed63eb3e1","status":"failed","statusDetails":"Failed: Bug # 55!307 The corresponding page is NOT opened","time":{"start":1726357992317,"stop":1726358017168,"duration":24851}},{"uid":"bf5fd29ef91f6913","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/143//#testresult/bf5fd29ef91f6913","status":"failed","statusDetails":"Failed: Bug # 55!307 The corresponding page is NOT opened","time":{"start":1726285888944,"stop":1726285912658,"duration":23714}},{"uid":"2b3080dc02d223d9","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/142//#testresult/2b3080dc02d223d9","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1726271833500,"stop":1726271858398,"duration":24898}},{"uid":"99c83c45bdb19f22","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/141//#testresult/99c83c45bdb19f22","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1726185523851,"stop":1726185547118,"duration":23267}},{"uid":"a1e45a56c29e3ece","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/140//#testresult/a1e45a56c29e3ece","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1726119987839,"stop":1726120010854,"duration":23015}},{"uid":"fe19a1373ed235e7","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/139//#testresult/fe19a1373ed235e7","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1726099094779,"stop":1726099118813,"duration":24034}},{"uid":"d5595c4236664526","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/138//#testresult/d5595c4236664526","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1726027426197,"stop":1726027449463,"duration":23266}},{"uid":"7f3979a803178886","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/137//#testresult/7f3979a803178886","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1726012956115,"stop":1726012980297,"duration":24182}},{"uid":"899cafb5cdeaea86","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/136//#testresult/899cafb5cdeaea86","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1725926599959,"stop":1725926623809,"duration":23850}},{"uid":"59d15d54e6fac76","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/135//#testresult/59d15d54e6fac76","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1725840349292,"stop":1725840373087,"duration":23795}},{"uid":"7cda20e1e6611d58","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/134//#testresult/7cda20e1e6611d58","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1725774401130,"stop":1725774425272,"duration":24142}},{"uid":"e7b98a8a1d3eadb8","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/133//#testresult/e7b98a8a1d3eadb8","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1725750379092,"stop":1725750402464,"duration":23372}},{"uid":"fc8e9ab3f6d1f291","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/132//#testresult/fc8e9ab3f6d1f291","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1725717289873,"stop":1725717314157,"duration":24284}},{"uid":"f4322770b029fa57","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/131//#testresult/f4322770b029fa57","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1725667136911,"stop":1725667160661,"duration":23750}},{"uid":"9955a7e35bca1642","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/130//#testresult/9955a7e35bca1642","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1725580794464,"stop":1725580818707,"duration":24243}},{"uid":"19659416083ea16","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/129//#testresult/19659416083ea16","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1725494649130,"stop":1725494672981,"duration":23851}},{"uid":"e386980cbdeaacc2","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/128//#testresult/e386980cbdeaacc2","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1725425741429,"stop":1725425766894,"duration":25465}},{"uid":"eeb30903bbd9caeb","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/124//#testresult/eeb30903bbd9caeb","status":"failed","statusDetails":"Failed: Bug!   De authorisation failed","time":{"start":1725149018627,"stop":1725149042576,"duration":23949}}]},"tags":["us_55","bug_307"]},"source":"bb107633e228f019.json","parameterValues":["'ae'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoAuth'","'Chrome'"]}