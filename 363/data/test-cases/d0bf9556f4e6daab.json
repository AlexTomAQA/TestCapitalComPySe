{"uid":"d0bf9556f4e6daab","name":"TC_55!380 (Lang: en) | Bid:55!380-en.ae.Auth","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_380","historyId":"7e771f3b9067c0f1379c92351aa8a850","time":{"start":1743294644670,"stop":1743294652911,"duration":8241},"description":"\n        Check: TC_55!380 | The relevant pages of \"Social networks\" aren't opened after clicking the Social Network Icons\n                when EN language and SCA license are selected.\n        Language: EN\n        License: SCA\n        Author: Kasila\n        ","descriptionHtml":"<pre><code>    Check: TC_55!380 | The relevant pages of &quot;Social networks&quot; aren't opened after clicking the Social Network Icons\n            when EN language and SCA license are selected.\n    Language: EN\n    License: SCA\n    Author: Kasila\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7fb1b0e9a030>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bbf925d4c1ca3adb186b059e598e341b\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb1b0ed7170>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x5646befc4e76 \\\\u003Cunknown>\\\\n#22 0x7fc307e9caa4 \\\\u003Cunknown>\\\\n#23 0x7fc307f29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.88)\nE       Stacktrace:\nE       #0 0x5646befc5ffa <unknown>\nE       #1 0x5646bea84970 <unknown>\nE       #2 0x5646beadd1ec <unknown>\nE       #3 0x5646beadb055 <unknown>\nE       #4 0x5646bead86f2 <unknown>\nE       #5 0x5646bead78ca <unknown>\nE       #6 0x5646beaca4cd <unknown>\nE       #7 0x5646beafc292 <unknown>\nE       #8 0x5646beac9e4a <unknown>\nE       #9 0x5646beafc45e <unknown>\nE       #10 0x5646beb2270c <unknown>\nE       #11 0x5646beafc063 <unknown>\nE       #12 0x5646beac8328 <unknown>\nE       #13 0x5646beac9491 <unknown>\nE       #14 0x5646bef8d42b <unknown>\nE       #15 0x5646bef912ec <unknown>\nE       #16 0x5646bef74a22 <unknown>\nE       #17 0x5646bef91e64 <unknown>\nE       #18 0x5646bef58bef <unknown>\nE       #19 0x5646befb4558 <unknown>\nE       #20 0x5646befb4736 <unknown>\nE       #21 0x5646befc4e76 <unknown>\nE       #22 0x7fc307e9caa4 <unknown>\nE       #23 0x7fc307f29c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7fb1b1c510d0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bbf925d4c1ca3adb186b059e598e341b\")>\ncur_language = '', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step('Start retest manual AT_55!380: The relevant pages of \"Social networks\" are opened')\n    @pytest.mark.parametrize('cur_language', [''])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_380\n    def test_380(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: TC_55!380 | The relevant pages of \"Social networks\" aren't opened after clicking the Social Network Icons\n                when EN language and SCA license are selected.\n        Language: EN\n        License: SCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"380\", 'The relevant pages of \"Social networks\" are opened”'\n        )\n    \n>       link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:457: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:152: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7fb1b0e9a030>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bbf925d4c1ca3adb186b059e598e341b\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1743293679618,"stop":1743293680865,"duration":1247},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1743293680865,"stop":1743293680865,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1743293680865,"stop":1743293680865,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1743293680865,"stop":1743293680865,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: TC_55!380 | The relevant pages of \"Social networks\" aren't opened after clicking the Social Network Icons\n                when EN language and SCA license are selected.\n        Language: EN\n        License: SCA\n        Author: Kasila\n        ","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7fb1b0e9a030>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bbf925d4c1ca3adb186b059e598e341b\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb1b0ed7170>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x5646befc4e76 \\\\u003Cunknown>\\\\n#22 0x7fc307e9caa4 \\\\u003Cunknown>\\\\n#23 0x7fc307f29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.88)\nE       Stacktrace:\nE       #0 0x5646befc5ffa <unknown>\nE       #1 0x5646bea84970 <unknown>\nE       #2 0x5646beadd1ec <unknown>\nE       #3 0x5646beadb055 <unknown>\nE       #4 0x5646bead86f2 <unknown>\nE       #5 0x5646bead78ca <unknown>\nE       #6 0x5646beaca4cd <unknown>\nE       #7 0x5646beafc292 <unknown>\nE       #8 0x5646beac9e4a <unknown>\nE       #9 0x5646beafc45e <unknown>\nE       #10 0x5646beb2270c <unknown>\nE       #11 0x5646beafc063 <unknown>\nE       #12 0x5646beac8328 <unknown>\nE       #13 0x5646beac9491 <unknown>\nE       #14 0x5646bef8d42b <unknown>\nE       #15 0x5646bef912ec <unknown>\nE       #16 0x5646bef74a22 <unknown>\nE       #17 0x5646bef91e64 <unknown>\nE       #18 0x5646bef58bef <unknown>\nE       #19 0x5646befb4558 <unknown>\nE       #20 0x5646befb4736 <unknown>\nE       #21 0x5646befc4e76 <unknown>\nE       #22 0x7fc307e9caa4 <unknown>\nE       #23 0x7fc307f29c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7fb1b1c510d0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bbf925d4c1ca3adb186b059e598e341b\")>\ncur_language = '', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step('Start retest manual AT_55!380: The relevant pages of \"Social networks\" are opened')\n    @pytest.mark.parametrize('cur_language', [''])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_380\n    def test_380(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: TC_55!380 | The relevant pages of \"Social networks\" aren't opened after clicking the Social Network Icons\n                when EN language and SCA license are selected.\n        Language: EN\n        License: SCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"380\", 'The relevant pages of \"Social networks\" are opened”'\n        )\n    \n>       link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:457: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:152: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7fb1b0e9a030>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bbf925d4c1ca3adb186b059e598e341b\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","steps":[{"name":"Start retest manual AT_55!380: The relevant pages of \"Social networks\" are opened","time":{"start":1743294644670,"stop":1743294652910,"duration":8240},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py\", line 457, in test_380\n    link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 78, in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 152, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1743294644671,"stop":1743294644672,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"bbf925d4c1ca3adb186b059e598e341b\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'380'"},{"name":"desc_tc","value":"'The relevant pages of \"Social networks\" are opened”'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1743294644673,"stop":1743294652909,"duration":8236},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 152, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"2025-03-30 00:14:39.578765   Start Authorization","time":{"start":1743294651828,"stop":1743294652909,"duration":1081},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"bbf925d4c1ca3adb186b059e598e341b\")>"},{"name":"link","value":"'https://capital.com/en-gb'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"bbf925d4c1ca3adb186b059e598e341b\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"bbf925d4c1ca3adb186b059e598e341b\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"c81aeb674193cb93","name":"Screenshot","source":"c81aeb674193cb93.png","type":"image/png","size":611008},{"uid":"ee81aefc979c576a","name":"stdout","source":"ee81aefc979c576a.txt","type":"text/plain","size":2239}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1743295438675,"stop":1743295438989,"duration":314},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!380 | The relevant pages of \"Social networks\" are opened”"},{"name":"feature","value":"Role: Auth"},{"name":"story","value":"Country: ae"},{"name":"tag","value":"bug_380"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az2221-443"},{"name":"thread","value":"32480-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":22,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":22},"items":[{"uid":"841c346f7806e126","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/362//#testresult/841c346f7806e126","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743208051868,"stop":1743208060674,"duration":8806}},{"uid":"f24c522f1b7c31ad","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/361//#testresult/f24c522f1b7c31ad","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743121748868,"stop":1743121757098,"duration":8230}},{"uid":"33979cd30142ce84","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/360//#testresult/33979cd30142ce84","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743034630044,"stop":1743034638309,"duration":8265}},{"uid":"f87a5633e03e387d","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/359//#testresult/f87a5633e03e387d","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742948144784,"stop":1742948153064,"duration":8280}},{"uid":"6567eaee9da1db9","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/358//#testresult/6567eaee9da1db9","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742861541960,"stop":1742861550471,"duration":8511}},{"uid":"d79aca6c5dcc6b18","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/357//#testresult/d79aca6c5dcc6b18","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742775225093,"stop":1742775233439,"duration":8346}},{"uid":"7ec3d3cf2d5f986c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/356//#testresult/7ec3d3cf2d5f986c","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742689547283,"stop":1742689555894,"duration":8611}},{"uid":"716af705b0b7100b","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/355//#testresult/716af705b0b7100b","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742603184117,"stop":1742603194038,"duration":9921}},{"uid":"a7302d3f2c354f8d","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/354//#testresult/a7302d3f2c354f8d","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742515762534,"stop":1742515770995,"duration":8461}},{"uid":"d916f5529ab90e63","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/353//#testresult/d916f5529ab90e63","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742429403171,"stop":1742429411376,"duration":8205}},{"uid":"6bd2fa31b2d93828","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/352//#testresult/6bd2fa31b2d93828","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742342514317,"stop":1742342522667,"duration":8350}},{"uid":"6ceedffe97234193","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/351//#testresult/6ceedffe97234193","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742257669160,"stop":1742257677638,"duration":8478}},{"uid":"6af7b7fe97256cca","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/350//#testresult/6af7b7fe97256cca","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742171051819,"stop":1742171060026,"duration":8207}},{"uid":"9107ed55c9ab1d55","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/349//#testresult/9107ed55c9ab1d55","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742084972728,"stop":1742084980960,"duration":8232}},{"uid":"8990955e49c48d","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/348//#testresult/8990955e49c48d","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1741997504935,"stop":1741997513132,"duration":8197}},{"uid":"7feb0461356d2089","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/347//#testresult/7feb0461356d2089","status":"failed","statusDetails":"Failed: Bug # 55!380\nExpected result: The relevant page of a random 'Social network' is opened\nActual result: The (https://help.capitalccmena.com/hc/en-us/categories/17841736333714-Updates) page is opened","time":{"start":1741915735217,"stop":1741915757719,"duration":22502}},{"uid":"dbd9b46d29eb795d","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/346//#testresult/dbd9b46d29eb795d","status":"failed","statusDetails":"Failed: Bug # 55!380\nExpected result: The relevant page of a random 'Social network' is opened\nActual result: The (https://help.capitalccmena.com/hc/en-us/categories/18946421905426-Platforms-charts) page is opened","time":{"start":1741828679220,"stop":1741828703561,"duration":24341}},{"uid":"72e64e0129e50dcf","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/345//#testresult/72e64e0129e50dcf","status":"failed","statusDetails":"Failed: Bug # 55!380\nExpected result: The relevant page of a random 'Social network' is opened\nActual result: The (https://help.capitalccmena.com/hc/en-us/categories/17841743420178-Trading) page is opened","time":{"start":1741748833163,"stop":1741748856794,"duration":23631}},{"uid":"21b6c83268f74e4c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/344//#testresult/21b6c83268f74e4c","status":"failed","statusDetails":"Failed: Bug # 55!380\nExpected result: The relevant page of a random 'Social network' is opened\nActual result: The (https://help.capitalccmena.com/hc/en-us/categories/17841748356242-Deposits-Withdrawals) page is opened","time":{"start":1741662738410,"stop":1741662761587,"duration":23177}},{"uid":"a775680c7404065","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/343//#testresult/a775680c7404065","status":"failed","statusDetails":"Failed: Bug # 55!380\nExpected result: The relevant page of a random 'Social network' is opened\nActual result: The (https://help.capitalccmena.com/hc/en-us/categories/17841748356242-Deposits-Withdrawals) page is opened","time":{"start":1741569577660,"stop":1741569599645,"duration":21985}}]},"tags":["bug_380","us_55"]},"source":"d0bf9556f4e6daab.json","parameterValues":["'ae'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'Auth'","'Chrome'"]}