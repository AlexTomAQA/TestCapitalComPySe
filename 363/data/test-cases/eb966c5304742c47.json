{"uid":"eb966c5304742c47","name":"TC_55!514 (Lang: en) | Bid:55!514-en.au.Auth","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_514","historyId":"576f07ae1b5d3afc9d31fa8c2548579c","time":{"start":1743294988908,"stop":1743294997127,"duration":8219},"description":"\n        Check: Menu section [Markets] > Menu item [Market analysis] > Article \"Solana price prediction: Can SOL\n                rebound?\" > Click on the [Could Solana become a Cardano side-chain?] item in the \"Table of Contents\" >\n                Click on the [announced] link in the text\n        Language: EN\n        License: ASIC\n        Author: Kasila\n        ","descriptionHtml":"<pre><code>    Check: Menu section [Markets] &gt; Menu item [Market analysis] &gt; Article &quot;Solana price prediction: Can SOL\n            rebound?&quot; &gt; Click on the [Could Solana become a Cardano side-chain?] item in the &quot;Table of Contents&quot; &gt;\n            Click on the [announced] link in the text\n    Language: EN\n    License: ASIC\n    Author: Kasila\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7fb1b1a08380>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bbf925d4c1ca3adb186b059e598e341b\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb1b0ed7170>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x5646befc4e76 \\\\u003Cunknown>\\\\n#22 0x7fc307e9caa4 \\\\u003Cunknown>\\\\n#23 0x7fc307f29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.88)\nE       Stacktrace:\nE       #0 0x5646befc5ffa <unknown>\nE       #1 0x5646bea84970 <unknown>\nE       #2 0x5646beadd1ec <unknown>\nE       #3 0x5646beadb055 <unknown>\nE       #4 0x5646bead86f2 <unknown>\nE       #5 0x5646bead78ca <unknown>\nE       #6 0x5646beaca4cd <unknown>\nE       #7 0x5646beafc292 <unknown>\nE       #8 0x5646beac9e4a <unknown>\nE       #9 0x5646beafc45e <unknown>\nE       #10 0x5646beb2270c <unknown>\nE       #11 0x5646beafc063 <unknown>\nE       #12 0x5646beac8328 <unknown>\nE       #13 0x5646beac9491 <unknown>\nE       #14 0x5646bef8d42b <unknown>\nE       #15 0x5646bef912ec <unknown>\nE       #16 0x5646bef74a22 <unknown>\nE       #17 0x5646bef91e64 <unknown>\nE       #18 0x5646bef58bef <unknown>\nE       #19 0x5646befb4558 <unknown>\nE       #20 0x5646befb4736 <unknown>\nE       #21 0x5646befc4e76 <unknown>\nE       #22 0x7fc307e9caa4 <unknown>\nE       #23 0x7fc307f29c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7fb1b1e2d9a0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bbf925d4c1ca3adb186b059e598e341b\")>\ncur_language = '', cur_country = 'au', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step('Start retest manual AT_55!514 The page with text \"Page Not Found ... doesnt exist or has been moved\" is displayed')\n    @pytest.mark.parametrize('cur_language', [''])\n    @pytest.mark.parametrize('cur_country', ['au'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_514\n    def test_514(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Menu section [Markets] > Menu item [Market analysis] > Article \"Solana price prediction: Can SOL\n                rebound?\" > Click on the [Could Solana become a Cardano side-chain?] item in the \"Table of Contents\" >\n                Click on the [announced] link in the text\n        Language: EN\n        License: ASIC\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"514\", 'The page with text \"Page Not Found ... doesnt exist or has been moved\" is opened '\n                   'after clicking on [announced] link in the article \"Solana price prediction: Can SOL rebound?\" when '\n                   'selected ASIC license'\n        )\n    \n>       link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:730: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:152: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7fb1b1a08380>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bbf925d4c1ca3adb186b059e598e341b\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1743293679618,"stop":1743293680865,"duration":1247},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1743293680865,"stop":1743293680865,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1743293680865,"stop":1743293680865,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1743293680865,"stop":1743293680865,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Menu section [Markets] > Menu item [Market analysis] > Article \"Solana price prediction: Can SOL\n                rebound?\" > Click on the [Could Solana become a Cardano side-chain?] item in the \"Table of Contents\" >\n                Click on the [announced] link in the text\n        Language: EN\n        License: ASIC\n        Author: Kasila\n        ","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7fb1b1a08380>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bbf925d4c1ca3adb186b059e598e341b\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb1b0ed7170>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x5646befc4e76 \\\\u003Cunknown>\\\\n#22 0x7fc307e9caa4 \\\\u003Cunknown>\\\\n#23 0x7fc307f29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.88)\nE       Stacktrace:\nE       #0 0x5646befc5ffa <unknown>\nE       #1 0x5646bea84970 <unknown>\nE       #2 0x5646beadd1ec <unknown>\nE       #3 0x5646beadb055 <unknown>\nE       #4 0x5646bead86f2 <unknown>\nE       #5 0x5646bead78ca <unknown>\nE       #6 0x5646beaca4cd <unknown>\nE       #7 0x5646beafc292 <unknown>\nE       #8 0x5646beac9e4a <unknown>\nE       #9 0x5646beafc45e <unknown>\nE       #10 0x5646beb2270c <unknown>\nE       #11 0x5646beafc063 <unknown>\nE       #12 0x5646beac8328 <unknown>\nE       #13 0x5646beac9491 <unknown>\nE       #14 0x5646bef8d42b <unknown>\nE       #15 0x5646bef912ec <unknown>\nE       #16 0x5646bef74a22 <unknown>\nE       #17 0x5646bef91e64 <unknown>\nE       #18 0x5646bef58bef <unknown>\nE       #19 0x5646befb4558 <unknown>\nE       #20 0x5646befb4736 <unknown>\nE       #21 0x5646befc4e76 <unknown>\nE       #22 0x7fc307e9caa4 <unknown>\nE       #23 0x7fc307f29c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7fb1b1e2d9a0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bbf925d4c1ca3adb186b059e598e341b\")>\ncur_language = '', cur_country = 'au', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step('Start retest manual AT_55!514 The page with text \"Page Not Found ... doesnt exist or has been moved\" is displayed')\n    @pytest.mark.parametrize('cur_language', [''])\n    @pytest.mark.parametrize('cur_country', ['au'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_514\n    def test_514(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Menu section [Markets] > Menu item [Market analysis] > Article \"Solana price prediction: Can SOL\n                rebound?\" > Click on the [Could Solana become a Cardano side-chain?] item in the \"Table of Contents\" >\n                Click on the [announced] link in the text\n        Language: EN\n        License: ASIC\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"514\", 'The page with text \"Page Not Found ... doesnt exist or has been moved\" is opened '\n                   'after clicking on [announced] link in the article \"Solana price prediction: Can SOL rebound?\" when '\n                   'selected ASIC license'\n        )\n    \n>       link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:730: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:152: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7fb1b1a08380>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bbf925d4c1ca3adb186b059e598e341b\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","steps":[{"name":"Start retest manual AT_55!514 The page with text \"Page Not Found ... doesnt exist or has been moved\" is displayed","time":{"start":1743294988908,"stop":1743294997126,"duration":8218},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py\", line 730, in test_514\n    link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 78, in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 152, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1743294988908,"stop":1743294988910,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"bbf925d4c1ca3adb186b059e598e341b\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'Auth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'514'"},{"name":"desc_tc","value":"'The page with text \"Page Not Found ... doesnt exist or has been moved\" is opened after clicking on [announced] link in the article \"Solana price prediction: Can SOL rebound?\" when selected ASIC license'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1743294988910,"stop":1743294997126,"duration":8216},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 152, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"2025-03-30 00:14:39.578765   Start Authorization","time":{"start":1743294996046,"stop":1743294997125,"duration":1079},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"bbf925d4c1ca3adb186b059e598e341b\")>"},{"name":"link","value":"'https://capital.com/en-gb'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"bbf925d4c1ca3adb186b059e598e341b\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"bbf925d4c1ca3adb186b059e598e341b\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"b3a33f27877c68a5","name":"Screenshot","source":"b3a33f27877c68a5.png","type":"image/png","size":611008},{"uid":"3cd5d330e6e2d211","name":"stdout","source":"3cd5d330e6e2d211.txt","type":"text/plain","size":2239}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1743295438675,"stop":1743295438989,"duration":314},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!514 | The page with text \"Page Not Found ... doesnt exist or has been moved\" is opened after clicking on [announced] link in the article \"Solana price prediction: Can SOL rebound?\" when selected ASIC license"},{"name":"feature","value":"Role: Auth"},{"name":"story","value":"Country: au"},{"name":"tag","value":"bug_514"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az2221-443"},{"name":"thread","value":"32480-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'au'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":22,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":22},"items":[{"uid":"86eee0bbc5057048","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/362//#testresult/86eee0bbc5057048","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743208398841,"stop":1743208407890,"duration":9049}},{"uid":"fc5e93103bd2d7d5","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/361//#testresult/fc5e93103bd2d7d5","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743122088927,"stop":1743122097184,"duration":8257}},{"uid":"d87715d87971bcc0","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/360//#testresult/d87715d87971bcc0","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743034975525,"stop":1743034983924,"duration":8399}},{"uid":"263dee34635a8be","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/359//#testresult/263dee34635a8be","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742948486056,"stop":1742948494379,"duration":8323}},{"uid":"dfa2686ba47c0103","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/358//#testresult/dfa2686ba47c0103","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742861888240,"stop":1742861896608,"duration":8368}},{"uid":"74ba058c656be6d1","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/357//#testresult/74ba058c656be6d1","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742775565555,"stop":1742775573678,"duration":8123}},{"uid":"67373caa65cf93ac","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/356//#testresult/67373caa65cf93ac","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742689893210,"stop":1742689901500,"duration":8290}},{"uid":"9949e2065983ecd4","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/355//#testresult/9949e2065983ecd4","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742603530694,"stop":1742603539352,"duration":8658}},{"uid":"e9144e1c68fc315","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/354//#testresult/e9144e1c68fc315","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742516108274,"stop":1742516116730,"duration":8456}},{"uid":"45dca49ed8a69c61","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/353//#testresult/45dca49ed8a69c61","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742429749116,"stop":1742429757674,"duration":8558}},{"uid":"35792b0d663dcff1","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/352//#testresult/35792b0d663dcff1","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742342862009,"stop":1742342870385,"duration":8376}},{"uid":"200a13ea01b50a3e","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/351//#testresult/200a13ea01b50a3e","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742258012865,"stop":1742258021074,"duration":8209}},{"uid":"df77bfb36d5f6b3a","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/350//#testresult/df77bfb36d5f6b3a","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742171398069,"stop":1742171406473,"duration":8404}},{"uid":"c6e25e599d6dd0d7","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/349//#testresult/c6e25e599d6dd0d7","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742085317958,"stop":1742085326150,"duration":8192}},{"uid":"250fd3d0a9924ed6","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/348//#testresult/250fd3d0a9924ed6","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1741997849930,"stop":1741997858180,"duration":8250}},{"uid":"c2064e3b96fe44c4","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/347//#testresult/c2064e3b96fe44c4","status":"failed","statusDetails":"Failed: announced_link is not clicked","time":{"start":1741916667770,"stop":1741916751818,"duration":84048}},{"uid":"40a85606c52e0450","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/346//#testresult/40a85606c52e0450","status":"failed","statusDetails":"Failed: announced_link is not clicked","time":{"start":1741829511318,"stop":1741829595794,"duration":84476}},{"uid":"7778050ec12c7706","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/345//#testresult/7778050ec12c7706","status":"failed","statusDetails":"Failed: announced_link is not clicked","time":{"start":1741749683195,"stop":1741749767330,"duration":84135}},{"uid":"bdb72323fdb532f8","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/344//#testresult/bdb72323fdb532f8","status":"failed","statusDetails":"Failed: announced_link is not clicked","time":{"start":1741663588735,"stop":1741663668647,"duration":79912}},{"uid":"8c7eb5c73d73b4b3","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/343//#testresult/8c7eb5c73d73b4b3","status":"failed","statusDetails":"Failed: announced_link is not clicked","time":{"start":1741570411375,"stop":1741570490546,"duration":79171}}]},"tags":["us_55","bug_514"]},"source":"eb966c5304742c47.json","parameterValues":["'au'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'Auth'","'Chrome'"]}