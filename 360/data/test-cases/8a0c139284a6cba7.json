{"uid":"8a0c139284a6cba7","name":"TC_55!624 (Lang: en) | Bid:55!624-en.ae.NoAuth","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_624","historyId":"4653e64b25056bd050da0e095c28e686","time":{"start":1743035302119,"stop":1743035307991,"duration":5872},"description":"\n        Check: Menu section [Learn] > Menu item  [Market guides] > Click the link “Shares trading guide”\n                > Сlick the link “Netflix” > Сlick the link “Trade Coca-Cola shares”\n                > Сlick the link “KO” in the block “Performance of the Coca-Cola stock in recent years”\n        Language: EN\n        License: FCA\n        Author: Kasila\n        ","descriptionHtml":"<pre><code>    Check: Menu section [Learn] &gt; Menu item  [Market guides] &gt; Click the link “Shares trading guide”\n            &gt; Сlick the link “Netflix” &gt; Сlick the link “Trade Coca-Cola shares”\n            &gt; Сlick the link “KO” in the block “Performance of the Coca-Cola stock in recent years”\n    Language: EN\n    License: FCA\n    Author: Kasila\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7f7b8cb737d0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"edd0088f8ffe9f712d86563f64c420b1\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'NoAuth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f7b8bfdb200>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55e1a5a69e76 \\\\u003Cunknown>\\\\n#22 0x7fe04ea9caa4 \\\\u003Cunknown>\\\\n#23 0x7fe04eb29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.88)\nE       Stacktrace:\nE       #0 0x55e1a5a6affa <unknown>\nE       #1 0x55e1a5529970 <unknown>\nE       #2 0x55e1a55821ec <unknown>\nE       #3 0x55e1a5580055 <unknown>\nE       #4 0x55e1a557d6f2 <unknown>\nE       #5 0x55e1a557c8ca <unknown>\nE       #6 0x55e1a556f4cd <unknown>\nE       #7 0x55e1a55a1292 <unknown>\nE       #8 0x55e1a556ee4a <unknown>\nE       #9 0x55e1a55a145e <unknown>\nE       #10 0x55e1a55c770c <unknown>\nE       #11 0x55e1a55a1063 <unknown>\nE       #12 0x55e1a556d328 <unknown>\nE       #13 0x55e1a556e491 <unknown>\nE       #14 0x55e1a5a3242b <unknown>\nE       #15 0x55e1a5a362ec <unknown>\nE       #16 0x55e1a5a19a22 <unknown>\nE       #17 0x55e1a5a36e64 <unknown>\nE       #18 0x55e1a59fdbef <unknown>\nE       #19 0x55e1a5a59558 <unknown>\nE       #20 0x55e1a5a59736 <unknown>\nE       #21 0x55e1a5a69e76 <unknown>\nE       #22 0x7fe04ea9caa4 <unknown>\nE       #23 0x7fe04eb29c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7f7b8cde8e30>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"edd0088f8ffe9f712d86563f64c420b1\")>\ncur_language = '', cur_country = 'ae', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step('Start retest manual AT_55!624 The error message “This site can’t be reached” is displayed')\n    @pytest.mark.parametrize('cur_language', [''])\n    @pytest.mark.parametrize('cur_country', ['ae', 'gb', 'au'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_624\n    def test_624(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Menu section [Learn] > Menu item  [Market guides] > Click the link “Shares trading guide”\n                > Сlick the link “Netflix” > Сlick the link “Trade Coca-Cola shares”\n                > Сlick the link “KO” in the block “Performance of the Coca-Cola stock in recent years”\n        Language: EN\n        License: FCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"624\", 'Error message “This site can’t be reached” is displayed after clicking the link “KO” '\n                   'in the block “Performance of the Coca-Cola stock in recent years” on the page “How to trade '\n                   'Coca-Cola stocks” when EN language is selected (SCA / FCA / ASIC licenses)'\n        )\n    \n>       link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:864: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:154: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7f7b8cb737d0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"edd0088f8ffe9f712d86563f64c420b1\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'NoAuth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1743033606417,"stop":1743033607466,"duration":1049},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1743033607466,"stop":1743033607467,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1743033607466,"stop":1743033607466,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1743033607466,"stop":1743033607466,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Menu section [Learn] > Menu item  [Market guides] > Click the link “Shares trading guide”\n                > Сlick the link “Netflix” > Сlick the link “Trade Coca-Cola shares”\n                > Сlick the link “KO” in the block “Performance of the Coca-Cola stock in recent years”\n        Language: EN\n        License: FCA\n        Author: Kasila\n        ","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7f7b8cb737d0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"edd0088f8ffe9f712d86563f64c420b1\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'NoAuth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f7b8bfdb200>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55e1a5a69e76 \\\\u003Cunknown>\\\\n#22 0x7fe04ea9caa4 \\\\u003Cunknown>\\\\n#23 0x7fe04eb29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.88)\nE       Stacktrace:\nE       #0 0x55e1a5a6affa <unknown>\nE       #1 0x55e1a5529970 <unknown>\nE       #2 0x55e1a55821ec <unknown>\nE       #3 0x55e1a5580055 <unknown>\nE       #4 0x55e1a557d6f2 <unknown>\nE       #5 0x55e1a557c8ca <unknown>\nE       #6 0x55e1a556f4cd <unknown>\nE       #7 0x55e1a55a1292 <unknown>\nE       #8 0x55e1a556ee4a <unknown>\nE       #9 0x55e1a55a145e <unknown>\nE       #10 0x55e1a55c770c <unknown>\nE       #11 0x55e1a55a1063 <unknown>\nE       #12 0x55e1a556d328 <unknown>\nE       #13 0x55e1a556e491 <unknown>\nE       #14 0x55e1a5a3242b <unknown>\nE       #15 0x55e1a5a362ec <unknown>\nE       #16 0x55e1a5a19a22 <unknown>\nE       #17 0x55e1a5a36e64 <unknown>\nE       #18 0x55e1a59fdbef <unknown>\nE       #19 0x55e1a5a59558 <unknown>\nE       #20 0x55e1a5a59736 <unknown>\nE       #21 0x55e1a5a69e76 <unknown>\nE       #22 0x7fe04ea9caa4 <unknown>\nE       #23 0x7fe04eb29c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7f7b8cde8e30>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"edd0088f8ffe9f712d86563f64c420b1\")>\ncur_language = '', cur_country = 'ae', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step('Start retest manual AT_55!624 The error message “This site can’t be reached” is displayed')\n    @pytest.mark.parametrize('cur_language', [''])\n    @pytest.mark.parametrize('cur_country', ['ae', 'gb', 'au'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_624\n    def test_624(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Menu section [Learn] > Menu item  [Market guides] > Click the link “Shares trading guide”\n                > Сlick the link “Netflix” > Сlick the link “Trade Coca-Cola shares”\n                > Сlick the link “KO” in the block “Performance of the Coca-Cola stock in recent years”\n        Language: EN\n        License: FCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"624\", 'Error message “This site can’t be reached” is displayed after clicking the link “KO” '\n                   'in the block “Performance of the Coca-Cola stock in recent years” on the page “How to trade '\n                   'Coca-Cola stocks” when EN language is selected (SCA / FCA / ASIC licenses)'\n        )\n    \n>       link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:864: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:154: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7f7b8cb737d0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"edd0088f8ffe9f712d86563f64c420b1\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'NoAuth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","steps":[{"name":"Start retest manual AT_55!624 The error message “This site can’t be reached” is displayed","time":{"start":1743035302119,"stop":1743035307990,"duration":5871},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py\", line 864, in test_624\n    link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 78, in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 154, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1743035302119,"stop":1743035302121,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"edd0088f8ffe9f712d86563f64c420b1\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'624'"},{"name":"desc_tc","value":"'Error message “This site can’t be reached” is displayed after clicking the link “KO” in the block “Performance of the Coca-Cola stock in recent years” on the page “How to trade Coca-Cola stocks” when EN language is selected (SCA / FCA / ASIC licenses)'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1743035302121,"stop":1743035307989,"duration":5868},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 154, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"2025-03-27 00:00:06.380286   Start Authorization","time":{"start":1743035306898,"stop":1743035307989,"duration":1091},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"edd0088f8ffe9f712d86563f64c420b1\")>"},{"name":"link","value":"'https://capital.com/en-gb'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"edd0088f8ffe9f712d86563f64c420b1\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"edd0088f8ffe9f712d86563f64c420b1\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"27aab4806225c96","name":"Screenshot","source":"27aab4806225c96.png","type":"image/png","size":611012},{"uid":"4bb38e96c76572b6","name":"stdout","source":"4bb38e96c76572b6.txt","type":"text/plain","size":1962}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1743035427213,"stop":1743035427524,"duration":311},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!624 | Error message “This site can’t be reached” is displayed after clicking the link “KO” in the block “Performance of the Coca-Cola stock in recent years” on the page “How to trade Coca-Cola stocks” when EN language is selected (SCA / FCA / ASIC licenses)"},{"name":"feature","value":"Role: NoAuth"},{"name":"story","value":"Country: ae"},{"name":"tag","value":"bug_624"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az1991-467"},{"name":"thread","value":"30652-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":19},"items":[{"uid":"26d00d0702ef03af","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/359//#testresult/26d00d0702ef03af","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742948806914,"stop":1742948812688,"duration":5774}},{"uid":"d04303c3628b9004","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/358//#testresult/d04303c3628b9004","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742862215648,"stop":1742862221562,"duration":5914}},{"uid":"454549304cbb5a6f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/357//#testresult/454549304cbb5a6f","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742775887597,"stop":1742775893360,"duration":5763}},{"uid":"afe610117f0ba7ba","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/356//#testresult/afe610117f0ba7ba","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742690220921,"stop":1742690226800,"duration":5879}},{"uid":"dda728e1747c149","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/355//#testresult/dda728e1747c149","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742603857072,"stop":1742603862920,"duration":5848}},{"uid":"fc91aab49951e142","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/354//#testresult/fc91aab49951e142","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742516434302,"stop":1742516440239,"duration":5937}},{"uid":"631c80e906dff5f1","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/353//#testresult/631c80e906dff5f1","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742430073591,"stop":1742430079501,"duration":5910}},{"uid":"c3cb21af558b77b7","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/352//#testresult/c3cb21af558b77b7","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742343189865,"stop":1742343195952,"duration":6087}},{"uid":"9a54c4574c7269b0","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/351//#testresult/9a54c4574c7269b0","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742258336195,"stop":1742258342009,"duration":5814}},{"uid":"99913e00a8789ccd","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/350//#testresult/99913e00a8789ccd","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742171726162,"stop":1742171732075,"duration":5913}},{"uid":"dc4dc957a65f77d8","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/349//#testresult/dc4dc957a65f77d8","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742085643846,"stop":1742085649779,"duration":5933}},{"uid":"f921925105b52c06","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/348//#testresult/f921925105b52c06","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1741998181042,"stop":1741998187004,"duration":5962}},{"uid":"50592e00a6b723a4","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/347//#testresult/50592e00a6b723a4","status":"passed","time":{"start":1741917565769,"stop":1741917594335,"duration":28566}},{"uid":"3be587b9c66b9208","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/346//#testresult/3be587b9c66b9208","status":"passed","time":{"start":1741830416857,"stop":1741830446053,"duration":29196}},{"uid":"db536892a4b20fdc","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/345//#testresult/db536892a4b20fdc","status":"passed","time":{"start":1741750585417,"stop":1741750615377,"duration":29960}},{"uid":"a7a09d5ac0112360","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/344//#testresult/a7a09d5ac0112360","status":"passed","time":{"start":1741664486174,"stop":1741664516090,"duration":29916}},{"uid":"1b816fc25f7a725d","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/343//#testresult/1b816fc25f7a725d","status":"passed","time":{"start":1741571294064,"stop":1741571323379,"duration":29315}},{"uid":"d7a244fe5de271ad","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/342//#testresult/d7a244fe5de271ad","status":"passed","time":{"start":1741484347545,"stop":1741484376140,"duration":28595}}]},"tags":["us_55","bug_624"]},"source":"8a0c139284a6cba7.json","parameterValues":["'ae'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoAuth'","'Chrome'"]}