{"uid":"caeec3c86134632","name":"TC_55!627 (Lang: en) | Bid:55!627-en.au.Auth","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_627","historyId":"6e3f18fce7d286f25632a14f906504fe","time":{"start":1743035332441,"stop":1743035340979,"duration":8538},"description":"\n        Check: Menu section [Trading] > Menu item [CFD calculator]\n                > Click the link “overnight funding, spread costs” in the block “Trading calculator”\n        Language: EN\n        License: ASIC\n        Author: Kasila\n        ","descriptionHtml":"<pre><code>    Check: Menu section [Trading] &gt; Menu item [CFD calculator]\n            &gt; Click the link “overnight funding, spread costs” in the block “Trading calculator”\n    Language: EN\n    License: ASIC\n    Author: Kasila\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7f7b8cbf4b00>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"edd0088f8ffe9f712d86563f64c420b1\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f7b8bfdb200>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55e1a5a69e76 \\\\u003Cunknown>\\\\n#22 0x7fe04ea9caa4 \\\\u003Cunknown>\\\\n#23 0x7fe04eb29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.88)\nE       Stacktrace:\nE       #0 0x55e1a5a6affa <unknown>\nE       #1 0x55e1a5529970 <unknown>\nE       #2 0x55e1a55821ec <unknown>\nE       #3 0x55e1a5580055 <unknown>\nE       #4 0x55e1a557d6f2 <unknown>\nE       #5 0x55e1a557c8ca <unknown>\nE       #6 0x55e1a556f4cd <unknown>\nE       #7 0x55e1a55a1292 <unknown>\nE       #8 0x55e1a556ee4a <unknown>\nE       #9 0x55e1a55a145e <unknown>\nE       #10 0x55e1a55c770c <unknown>\nE       #11 0x55e1a55a1063 <unknown>\nE       #12 0x55e1a556d328 <unknown>\nE       #13 0x55e1a556e491 <unknown>\nE       #14 0x55e1a5a3242b <unknown>\nE       #15 0x55e1a5a362ec <unknown>\nE       #16 0x55e1a5a19a22 <unknown>\nE       #17 0x55e1a5a36e64 <unknown>\nE       #18 0x55e1a59fdbef <unknown>\nE       #19 0x55e1a5a59558 <unknown>\nE       #20 0x55e1a5a59736 <unknown>\nE       #21 0x55e1a5a69e76 <unknown>\nE       #22 0x7fe04ea9caa4 <unknown>\nE       #23 0x7fe04eb29c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7f7b8cde9280>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"edd0088f8ffe9f712d86563f64c420b1\")>\ncur_language = 'en', cur_country = 'au', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\n        'Start retest manual AT_55!627 that the same license remains after clicking the link “overnight funding, spread'\n        ' costs” in the block “Trading calculator” on the page “CFD calculator”')\n    @pytest.mark.parametrize('cur_language', ['en'])\n    @pytest.mark.parametrize('cur_country', ['au'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_627\n    def test_627(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Menu section [Trading] > Menu item [CFD calculator]\n                > Click the link “overnight funding, spread costs” in the block “Trading calculator”\n        Language: EN\n        License: ASIC\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"627\", 'Web page with FCA license is opened after clicking the link “overnight funding, '\n                   'spread costs” in the block “Trading calculator” on the page “CFD calculator” when EN language and '\n                   'ASIC license are selected.'\n        )\n    \n>       link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:152: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7f7b8cbf4b00>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"edd0088f8ffe9f712d86563f64c420b1\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1743033606417,"stop":1743033607466,"duration":1049},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1743033607466,"stop":1743033607467,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1743033607466,"stop":1743033607466,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1743033607466,"stop":1743033607466,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Menu section [Trading] > Menu item [CFD calculator]\n                > Click the link “overnight funding, spread costs” in the block “Trading calculator”\n        Language: EN\n        License: ASIC\n        Author: Kasila\n        ","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7f7b8cbf4b00>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"edd0088f8ffe9f712d86563f64c420b1\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f7b8bfdb200>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55e1a5a69e76 \\\\u003Cunknown>\\\\n#22 0x7fe04ea9caa4 \\\\u003Cunknown>\\\\n#23 0x7fe04eb29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.88)\nE       Stacktrace:\nE       #0 0x55e1a5a6affa <unknown>\nE       #1 0x55e1a5529970 <unknown>\nE       #2 0x55e1a55821ec <unknown>\nE       #3 0x55e1a5580055 <unknown>\nE       #4 0x55e1a557d6f2 <unknown>\nE       #5 0x55e1a557c8ca <unknown>\nE       #6 0x55e1a556f4cd <unknown>\nE       #7 0x55e1a55a1292 <unknown>\nE       #8 0x55e1a556ee4a <unknown>\nE       #9 0x55e1a55a145e <unknown>\nE       #10 0x55e1a55c770c <unknown>\nE       #11 0x55e1a55a1063 <unknown>\nE       #12 0x55e1a556d328 <unknown>\nE       #13 0x55e1a556e491 <unknown>\nE       #14 0x55e1a5a3242b <unknown>\nE       #15 0x55e1a5a362ec <unknown>\nE       #16 0x55e1a5a19a22 <unknown>\nE       #17 0x55e1a5a36e64 <unknown>\nE       #18 0x55e1a59fdbef <unknown>\nE       #19 0x55e1a5a59558 <unknown>\nE       #20 0x55e1a5a59736 <unknown>\nE       #21 0x55e1a5a69e76 <unknown>\nE       #22 0x7fe04ea9caa4 <unknown>\nE       #23 0x7fe04eb29c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7f7b8cde9280>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"edd0088f8ffe9f712d86563f64c420b1\")>\ncur_language = 'en', cur_country = 'au', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\n        'Start retest manual AT_55!627 that the same license remains after clicking the link “overnight funding, spread'\n        ' costs” in the block “Trading calculator” on the page “CFD calculator”')\n    @pytest.mark.parametrize('cur_language', ['en'])\n    @pytest.mark.parametrize('cur_country', ['au'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_627\n    def test_627(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Menu section [Trading] > Menu item [CFD calculator]\n                > Click the link “overnight funding, spread costs” in the block “Trading calculator”\n        Language: EN\n        License: ASIC\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"627\", 'Web page with FCA license is opened after clicking the link “overnight funding, '\n                   'spread costs” in the block “Trading calculator” on the page “CFD calculator” when EN language and '\n                   'ASIC license are selected.'\n        )\n    \n>       link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:897: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:152: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7f7b8cbf4b00>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"edd0088f8ffe9f712d86563f64c420b1\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","steps":[{"name":"Start retest manual AT_55!627 that the same license remains after clicking the link “overnight funding, spread costs” in the block “Trading calculator” on the page “CFD calculator”","time":{"start":1743035332441,"stop":1743035340979,"duration":8538},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py\", line 897, in test_627\n    link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 78, in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 152, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1743035332441,"stop":1743035332443,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"edd0088f8ffe9f712d86563f64c420b1\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'en'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'Auth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'627'"},{"name":"desc_tc","value":"'Web page with FCA license is opened after clicking the link “overnight funding, spread costs” in the block “Trading calculator” on the page “CFD calculator” when EN language and ASIC license are selected.'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1743035332444,"stop":1743035340978,"duration":8534},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 152, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"2025-03-27 00:00:06.380286   Start Authorization","time":{"start":1743035339894,"stop":1743035340978,"duration":1084},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"edd0088f8ffe9f712d86563f64c420b1\")>"},{"name":"link","value":"'https://capital.com/en-gb'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"edd0088f8ffe9f712d86563f64c420b1\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'en'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"edd0088f8ffe9f712d86563f64c420b1\")>"},{"name":"cur_language","value":"'en'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"fb488a3e33274915","name":"Screenshot","source":"fb488a3e33274915.png","type":"image/png","size":611012},{"uid":"d96be305cb1134f4","name":"stdout","source":"d96be305cb1134f4.txt","type":"text/plain","size":2239}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1743035427213,"stop":1743035427524,"duration":311},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!627 | Web page with FCA license is opened after clicking the link “overnight funding, spread costs” in the block “Trading calculator” on the page “CFD calculator” when EN language and ASIC license are selected."},{"name":"feature","value":"Role: Auth"},{"name":"story","value":"Country: au"},{"name":"tag","value":"bug_627"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az1991-467"},{"name":"thread","value":"30652-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'au'"},{"name":"cur_language","value":"'en'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":19,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":19},"items":[{"uid":"bf8e62c8f31e3a16","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/359//#testresult/bf8e62c8f31e3a16","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742948836776,"stop":1742948845074,"duration":8298}},{"uid":"d11289b520ad60ee","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/358//#testresult/d11289b520ad60ee","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742862245789,"stop":1742862254249,"duration":8460}},{"uid":"ca9e3837600562e7","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/357//#testresult/ca9e3837600562e7","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742775917405,"stop":1742775925526,"duration":8121}},{"uid":"b6279e0ac582a99c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/356//#testresult/b6279e0ac582a99c","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742690251312,"stop":1742690259625,"duration":8313}},{"uid":"883a2bb3513423bd","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/355//#testresult/883a2bb3513423bd","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742603887063,"stop":1742603895547,"duration":8484}},{"uid":"2b7ee14f25bd27c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/354//#testresult/2b7ee14f25bd27c","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742516464459,"stop":1742516473203,"duration":8744}},{"uid":"687eb92c25c2a436","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/353//#testresult/687eb92c25c2a436","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742430103813,"stop":1742430112001,"duration":8188}},{"uid":"fe207d6b79be7f08","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/352//#testresult/fe207d6b79be7f08","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742343220481,"stop":1742343229027,"duration":8546}},{"uid":"cfef808e04f2779b","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/351//#testresult/cfef808e04f2779b","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742258366086,"stop":1742258374494,"duration":8408}},{"uid":"382d97870f9df64f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/350//#testresult/382d97870f9df64f","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742171756752,"stop":1742171765044,"duration":8292}},{"uid":"f7b4156811c6a588","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/349//#testresult/f7b4156811c6a588","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742085674358,"stop":1742085682654,"duration":8296}},{"uid":"e08ed7e6a1dc5e0d","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/348//#testresult/e08ed7e6a1dc5e0d","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1741998211130,"stop":1741998219612,"duration":8482}},{"uid":"1eb16079f793094","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/347//#testresult/1eb16079f793094","status":"failed","statusDetails":"Failed: #Bug # 55!627 \nExpected result: The page with selected country (Australia) is opened\nActual result: The page with country () other than the selected one (Australia) is opened","time":{"start":1741917654456,"stop":1741917676004,"duration":21548}},{"uid":"3adf7afac383380e","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/346//#testresult/3adf7afac383380e","status":"failed","statusDetails":"Failed: #Bug # 55!627 \nExpected result: The page with selected country (Australia) is opened\nActual result: The page with country () other than the selected one (Australia) is opened","time":{"start":1741830505107,"stop":1741830526440,"duration":21333}},{"uid":"c9ed9443dee91d00","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/345//#testresult/c9ed9443dee91d00","status":"failed","statusDetails":"Failed: #Bug # 55!627 \nExpected result: The page with selected country (Australia) is opened\nActual result: The page with country () other than the selected one (Australia) is opened","time":{"start":1741750674261,"stop":1741750696342,"duration":22081}},{"uid":"a93fab133e015a1f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/344//#testresult/a93fab133e015a1f","status":"failed","statusDetails":"Failed: #Bug # 55!627 \nExpected result: The page with selected country (Australia) is opened\nActual result: The page with country () other than the selected one (Australia) is opened","time":{"start":1741664575719,"stop":1741664598194,"duration":22475}},{"uid":"28a92f94f7c8b55c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/343//#testresult/28a92f94f7c8b55c","status":"failed","statusDetails":"Failed: #Bug # 55!627 \nExpected result: The page with selected country (Australia) is opened\nActual result: The page with country () other than the selected one (Australia) is opened","time":{"start":1741571382801,"stop":1741571404931,"duration":22130}},{"uid":"b6d4ea23aedb60d0","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/342//#testresult/b6d4ea23aedb60d0","status":"failed","statusDetails":"Failed: #Bug # 55!627 \nExpected result: The page with selected country (Australia) is opened\nActual result: The page with country () other than the selected one (Australia) is opened","time":{"start":1741484434661,"stop":1741484455564,"duration":20903}}]},"tags":["bug_627","us_55"]},"source":"caeec3c86134632.json","parameterValues":["'au'","'en'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'Auth'","'Chrome'"]}