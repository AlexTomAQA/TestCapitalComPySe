{"uid":"f3e5491e97de6866","name":"TC_01.03.00_005 | open Trading instrument page. Bid:01.03.00_005-en.au.NoAuth","fullName":"tests.US_01_Markets.US_01-03_Forex.US_01-03-00_forex_tests.TestForex#test_005_trading_instrument","historyId":"d86be640eb24ef3f5023f32289de03d4","time":{"start":1713543184230,"stop":1713543191623,"duration":7393},"description":"\n        Check: open Trading instrument page\n        Language: All License: All (except FCA)\n        ","descriptionHtml":"<pre><code>    Check: open Trading instrument page\n    Language: All License: All (except FCA)\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=123.0.6312.122); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5636453f4863 <unknown>\n#1 0x5636450ea8c6 <unknown>\n#2 0x5636450fa921 <unknown>\n#3 0x5636450fb20a <unknown>\n#4 0x5636450f0801 <unknown>\n#5 0x5636450eebd1 <unknown>\n#6 0x5636450f1bce <unknown>\n#7 0x5636450f1c5c <unknown>\n#8 0x5636451371c2 <unknown>\n#9 0x56364512a3a1 <unknown>\n#10 0x5636451575a2 <unknown>\n#11 0x563645129e98 <unknown>\n#12 0x56364515776e <unknown>\n#13 0x563645175c19 <unknown>\n#14 0x563645157343 <unknown>\n#15 0x563645128593 <unknown>\n#16 0x563645128f5e <unknown>\n#17 0x5636453b884b <unknown>\n#18 0x5636453bc7a5 <unknown>\n#19 0x5636453a6571 <unknown>\n#20 0x5636453bd332 <unknown>\n#21 0x56364538b87f <unknown>\n#22 0x5636453e3728 <unknown>\n#23 0x5636453e38fb <unknown>\n#24 0x5636453f39b4 <unknown>\n#25 0x7f7e04094ac3 <unknown>","statusTrace":"self = <US_01-03-00_forex_tests.TestForex object at 0x7f39d5d82960>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f96814dadb19c7e66bc3cd5a950c501e\")>\ncur_language = '', cur_country = 'au', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test_01.03_005 open Trading instrument page\")\n    @pytest.mark.test_005\n    def test_005_trading_instrument(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: open Trading instrument page\n        Language: All License: All (except FCA)\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"01.03\", \"Markets > Menu item [Forex]\",\n            \".00_005\", \"open Trading instrument page\")\n    \n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n    \n        page_conditions = Conditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        menu = MenuSection(d, link)\n        cur_item_link = menu.open_forex_markets_menu(d, cur_language, cur_country, link)\n    \n        test_element = TableTradingInstrumentsItem(d, cur_item_link, bid)\n>       test_element.full_test(d, cur_language, cur_country, cur_role, cur_item_link)\n\ntests/US_01_Markets/US_01-03_Forex/US_01-03-00_forex_tests.py:147: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/TableTradingInstrumentItem.py:27: in full_test\n    self.element_click(d, cur_item_link)\npages/Elements/TableTradingInstrumentItem.py:84: in element_click\n    instruments_list[value].click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f39d85bbd10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x5636453e38fb \\\\u003Cunknown>\\\\n#24 0x5636453f39b4 \\\\u003Cunknown>\\\\n#25 0x7f7e04094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome=123.0.6312.122); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x5636453f4863 <unknown>\nE       #1 0x5636450ea8c6 <unknown>\nE       #2 0x5636450fa921 <unknown>\nE       #3 0x5636450fb20a <unknown>\nE       #4 0x5636450f0801 <unknown>\nE       #5 0x5636450eebd1 <unknown>\nE       #6 0x5636450f1bce <unknown>\nE       #7 0x5636450f1c5c <unknown>\nE       #8 0x5636451371c2 <unknown>\nE       #9 0x56364512a3a1 <unknown>\nE       #10 0x5636451575a2 <unknown>\nE       #11 0x563645129e98 <unknown>\nE       #12 0x56364515776e <unknown>\nE       #13 0x563645175c19 <unknown>\nE       #14 0x563645157343 <unknown>\nE       #15 0x563645128593 <unknown>\nE       #16 0x563645128f5e <unknown>\nE       #17 0x5636453b884b <unknown>\nE       #18 0x5636453bc7a5 <unknown>\nE       #19 0x5636453a6571 <unknown>\nE       #20 0x5636453bd332 <unknown>\nE       #21 0x56364538b87f <unknown>\nE       #22 0x5636453e3728 <unknown>\nE       #23 0x5636453e38fb <unknown>\nE       #24 0x5636453f39b4 <unknown>\nE       #25 0x7f7e04094ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1713542759845,"stop":1713542760263,"duration":418},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1713542760263,"stop":1713542760264,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1713542760263,"stop":1713542760263,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1713542760263,"stop":1713542760263,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1713542760264,"stop":1713542760264,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1713542760264,"stop":1713542760264,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1713542955333,"stop":1713542955333,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: open Trading instrument page\n        Language: All License: All (except FCA)\n        ","status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=123.0.6312.122); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5636453f4863 <unknown>\n#1 0x5636450ea8c6 <unknown>\n#2 0x5636450fa921 <unknown>\n#3 0x5636450fb20a <unknown>\n#4 0x5636450f0801 <unknown>\n#5 0x5636450eebd1 <unknown>\n#6 0x5636450f1bce <unknown>\n#7 0x5636450f1c5c <unknown>\n#8 0x5636451371c2 <unknown>\n#9 0x56364512a3a1 <unknown>\n#10 0x5636451575a2 <unknown>\n#11 0x563645129e98 <unknown>\n#12 0x56364515776e <unknown>\n#13 0x563645175c19 <unknown>\n#14 0x563645157343 <unknown>\n#15 0x563645128593 <unknown>\n#16 0x563645128f5e <unknown>\n#17 0x5636453b884b <unknown>\n#18 0x5636453bc7a5 <unknown>\n#19 0x5636453a6571 <unknown>\n#20 0x5636453bd332 <unknown>\n#21 0x56364538b87f <unknown>\n#22 0x5636453e3728 <unknown>\n#23 0x5636453e38fb <unknown>\n#24 0x5636453f39b4 <unknown>\n#25 0x7f7e04094ac3 <unknown>","statusTrace":"self = <US_01-03-00_forex_tests.TestForex object at 0x7f39d5d82960>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f96814dadb19c7e66bc3cd5a950c501e\")>\ncur_language = '', cur_country = 'au', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test_01.03_005 open Trading instrument page\")\n    @pytest.mark.test_005\n    def test_005_trading_instrument(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: open Trading instrument page\n        Language: All License: All (except FCA)\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"01.03\", \"Markets > Menu item [Forex]\",\n            \".00_005\", \"open Trading instrument page\")\n    \n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n    \n        page_conditions = Conditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        menu = MenuSection(d, link)\n        cur_item_link = menu.open_forex_markets_menu(d, cur_language, cur_country, link)\n    \n        test_element = TableTradingInstrumentsItem(d, cur_item_link, bid)\n>       test_element.full_test(d, cur_language, cur_country, cur_role, cur_item_link)\n\ntests/US_01_Markets/US_01-03_Forex/US_01-03-00_forex_tests.py:147: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/TableTradingInstrumentItem.py:27: in full_test\n    self.element_click(d, cur_item_link)\npages/Elements/TableTradingInstrumentItem.py:84: in element_click\n    instruments_list[value].click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f39d85bbd10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x5636453e38fb \\\\u003Cunknown>\\\\n#24 0x5636453f39b4 \\\\u003Cunknown>\\\\n#25 0x7f7e04094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome=123.0.6312.122); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x5636453f4863 <unknown>\nE       #1 0x5636450ea8c6 <unknown>\nE       #2 0x5636450fa921 <unknown>\nE       #3 0x5636450fb20a <unknown>\nE       #4 0x5636450f0801 <unknown>\nE       #5 0x5636450eebd1 <unknown>\nE       #6 0x5636450f1bce <unknown>\nE       #7 0x5636450f1c5c <unknown>\nE       #8 0x5636451371c2 <unknown>\nE       #9 0x56364512a3a1 <unknown>\nE       #10 0x5636451575a2 <unknown>\nE       #11 0x563645129e98 <unknown>\nE       #12 0x56364515776e <unknown>\nE       #13 0x563645175c19 <unknown>\nE       #14 0x563645157343 <unknown>\nE       #15 0x563645128593 <unknown>\nE       #16 0x563645128f5e <unknown>\nE       #17 0x5636453b884b <unknown>\nE       #18 0x5636453bc7a5 <unknown>\nE       #19 0x5636453a6571 <unknown>\nE       #20 0x5636453bd332 <unknown>\nE       #21 0x56364538b87f <unknown>\nE       #22 0x5636453e3728 <unknown>\nE       #23 0x5636453e38fb <unknown>\nE       #24 0x5636453f39b4 <unknown>\nE       #25 0x7f7e04094ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Start test_01.03_005 open Trading instrument page","time":{"start":1713543184230,"stop":1713543191622,"duration":7392},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=123.0.6312.122); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5636453f4863 <unknown>\n#1 0x5636450ea8c6 <unknown>\n#2 0x5636450fa921 <unknown>\n#3 0x5636450fb20a <unknown>\n#4 0x5636450f0801 <unknown>\n#5 0x5636450eebd1 <unknown>\n#6 0x5636450f1bce <unknown>\n#7 0x5636450f1c5c <unknown>\n#8 0x5636451371c2 <unknown>\n#9 0x56364512a3a1 <unknown>\n#10 0x5636451575a2 <unknown>\n#11 0x563645129e98 <unknown>\n#12 0x56364515776e <unknown>\n#13 0x563645175c19 <unknown>\n#14 0x563645157343 <unknown>\n#15 0x563645128593 <unknown>\n#16 0x563645128f5e <unknown>\n#17 0x5636453b884b <unknown>\n#18 0x5636453bc7a5 <unknown>\n#19 0x5636453a6571 <unknown>\n#20 0x5636453bd332 <unknown>\n#21 0x56364538b87f <unknown>\n#22 0x5636453e3728 <unknown>\n#23 0x5636453e38fb <unknown>\n#24 0x5636453f39b4 <unknown>\n#25 0x7f7e04094ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_01_Markets/US_01-03_Forex/US_01-03-00_forex_tests.py\", line 147, in test_005_trading_instrument\n    test_element.full_test(d, cur_language, cur_country, cur_role, cur_item_link)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/TableTradingInstrumentItem.py\", line 27, in full_test\n    self.element_click(d, cur_item_link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/TableTradingInstrumentItem.py\", line 84, in element_click\n    instruments_list[value].click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Preconditions","time":{"start":1713543184232,"stop":1713543187160,"duration":2928},"status":"passed","steps":[{"name":"2024-04-19 16:05:59.818993   Start Checking Captcha","time":{"start":1713543186116,"stop":1713543187154,"duration":1038},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f96814dadb19c7e66bc3cd5a950c501e\")>"},{"name":"host","value":"'https://capital.com/'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Markets\" menu, \"Forex\" submenu","time":{"start":1713543187160,"stop":1713543190699,"duration":3539},"status":"passed","steps":[{"name":"Focus moved to 'Markets' menu","time":{"start":1713543187167,"stop":1713543188959,"duration":1792},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f96814dadb19c7e66bc3cd5a950c501e\")>"},{"name":"test_language","value":"''"},{"name":"test_country","value":"'au'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Focus move to 'Forex' submenu item and click","time":{"start":1713543188959,"stop":1713543190419,"duration":1460},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f96814dadb19c7e66bc3cd5a950c501e\")>"},{"name":"test_language","value":"''"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f96814dadb19c7e66bc3cd5a950c501e\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'au'"},{"name":"link","value":"'https://capital.com/'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Click line instrument","time":{"start":1713543190726,"stop":1713543191621,"duration":895},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=123.0.6312.122); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5636453f4863 <unknown>\n#1 0x5636450ea8c6 <unknown>\n#2 0x5636450fa921 <unknown>\n#3 0x5636450fb20a <unknown>\n#4 0x5636450f0801 <unknown>\n#5 0x5636450eebd1 <unknown>\n#6 0x5636450f1bce <unknown>\n#7 0x5636450f1c5c <unknown>\n#8 0x5636451371c2 <unknown>\n#9 0x56364512a3a1 <unknown>\n#10 0x5636451575a2 <unknown>\n#11 0x563645129e98 <unknown>\n#12 0x56364515776e <unknown>\n#13 0x563645175c19 <unknown>\n#14 0x563645157343 <unknown>\n#15 0x563645128593 <unknown>\n#16 0x563645128f5e <unknown>\n#17 0x5636453b884b <unknown>\n#18 0x5636453bc7a5 <unknown>\n#19 0x5636453a6571 <unknown>\n#20 0x5636453bd332 <unknown>\n#21 0x56364538b87f <unknown>\n#22 0x5636453e3728 <unknown>\n#23 0x5636453e38fb <unknown>\n#24 0x5636453f39b4 <unknown>\n#25 0x7f7e04094ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/TableTradingInstrumentItem.py\", line 84, in element_click\n    instruments_list[value].click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f96814dadb19c7e66bc3cd5a950c501e\")>"},{"name":"cur_item_link","value":"'https://capital.com/live-currency-prices'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f96814dadb19c7e66bc3cd5a950c501e\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":6,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"ef294b3b71a1b6f0","name":"Screenshot","source":"ef294b3b71a1b6f0.png","type":"image/png","size":112019},{"uid":"41993b2de557523d","name":"stdout","source":"41993b2de557523d.txt","type":"text/plain","size":3165}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":7,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1713543381116,"stop":1713543381266,"duration":150},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_01.03 | Markets > Menu item [Forex]"},{"name":"feature","value":"Language: en"},{"name":"story","value":"Country: au / Role: NoAuth"},{"name":"tag","value":"test_005"},{"name":"tag","value":"us_01_03_00"},{"name":"parentSuite","value":"tests.US_01_Markets.US_01-03_Forex"},{"name":"suite","value":"US_01-03-00_forex_tests"},{"name":"subSuite","value":"TestForex"},{"name":"host","value":"fv-az840-923"},{"name":"thread","value":"24597-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_01_Markets.US_01-03_Forex.US_01-03-00_forex_tests"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'au'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"59b57ef9e7c01786","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/176//#testresult/59b57ef9e7c01786","status":"broken","statusDetails":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: 'using' must be a string\n  (Session info: chrome=123.0.6312.105)\nStacktrace:\n#0 0x559499a12863 <unknown>\n#1 0x5594997088c6 <unknown>\n#2 0x559499752de5 <unknown>\n#3 0x5594997536d1 <unknown>\n#4 0x559499796744 <unknown>\n#5 0x5594997755cd <unknown>\n#6 0x559499793c19 <unknown>\n#7 0x559499775343 <unknown>\n#8 0x559499746593 <unknown>\n#9 0x559499746f5e <unknown>\n#10 0x5594999d684b <unknown>\n#11 0x5594999da7a5 <unknown>\n#12 0x5594999c4571 <unknown>\n#13 0x5594999db332 <unknown>\n#14 0x5594999a987f <unknown>\n#15 0x559499a01728 <unknown>\n#16 0x559499a018fb <unknown>\n#17 0x559499a119b4 <unknown>\n#18 0x7f7c22294ac3 <unknown>","time":{"start":1713031218296,"stop":1713031224833,"duration":6537}}]},"tags":["test_005","us_01_03_00"]},"source":"f3e5491e97de6866.json","parameterValues":["'au'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoAuth'","'Chrome'"]}