{"uid":"d0af0e581f915c39","name":"TC_11.01.02_01 with parameters: ru, de, NoReg","fullName":"tests.US_11_Education.US_11-01-02_Basics_of_trading.US_11-01-02_Basics_of_trading_test.TestBasicsOfTrading#test_01_create_verify_your_account","historyId":"87a21cf57de4103c851a90548134e262","time":{"start":1702676122729,"stop":1702676165423,"duration":42694},"description":"\n        Check: Button [1. Create & verify account]\n        Language: All. License: All. Role: All.\n        ","descriptionHtml":"<pre><code>    Check: Button [1. Create &amp; verify account]\n    Language: All. License: All. Role: All.\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: invalid locator\n  (Session info: chrome=120.0.6099.71)\nStacktrace:\n#0 0x55d87af62d33 <unknown>\n#1 0x55d87ac1ff87 <unknown>\n#2 0x55d87ac6f2ac <unknown>\n#3 0x55d87ac6fd11 <unknown>\n#4 0x55d87acbb041 <unknown>\n#5 0x55d87ac9936d <unknown>\n#6 0x55d87acb8297 <unknown>\n#7 0x55d87ac990e3 <unknown>\n#8 0x55d87ac61044 <unknown>\n#9 0x55d87ac6244e <unknown>\n#10 0x55d87af27861 <unknown>\n#11 0x55d87af2b785 <unknown>\n#12 0x55d87af15285 <unknown>\n#13 0x55d87af2c41f <unknown>\n#14 0x55d87aef920f <unknown>\n#15 0x55d87af50028 <unknown>\n#16 0x55d87af501f7 <unknown>\n#17 0x55d87af61ed4 <unknown>\n#18 0x7f655b494ac3 <unknown>","statusTrace":"self = <US_11-01-02_Basics_of_trading_test.TestBasicsOfTrading object at 0x7f293a2372d0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"569a2f41814a65cfaab12c64cbf42178\")>\ncur_language = 'ru', cur_country = 'de', cur_role = 'NoReg'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\nprob_run_tc = '', cur_time = '2023-12-15 21:35:22.728378'\n\n    @allure.step(\"Start test_11.01.02_01 button '1. Create & verify your account'\")\n    def test_01_create_verify_your_account(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password,\n            prob_run_tc, cur_time):\n        \"\"\"\n        Check: Button [1. Create & verify account]\n        Language: All. License: All. Role: All.\n        \"\"\"\n        print(f\"\\n{datetime.now()}   Работает obj {self} с именем TC_11.01.02_01 и атрибутами:\")\n        print(f\"\\n{datetime.now()}   {self.__dict__}\")\n        link = build_dynamic_arg_v2(self, d, worker_id, cur_language, cur_country, cur_role, prob_run_tc,\n                                    \"11.01.02\", \"Education > Menu Item [The basics of trading]\",\n                                    \"01\", \"Testing button [1. Create your account] in block [Steps trading]\")\n    \n        page_conditions = Conditions(d, \"\")\n>       page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_11_Education/US_11-01-02_Basics_of_trading/US_11-01-02_Basics_of_trading_test.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions.py:91: in preconditions\n    self.button_accept_all_cookies_click()\npages/base_page.py:254: in button_accept_all_cookies_click\n    check_box_i_am_not_robot = self.browser.find_elements(\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:772: in find_elements\n    return self.execute(Command.FIND_ELEMENTS, {\"using\": by, \"value\": value})[\"value\"] or []\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f293a25b750>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"invalid argument: invalid locator\\\\n  (Sessi...\\\\n#16 0x55d87af501f7 \\\\u003Cunknown>\\\\n#17 0x55d87af61ed4 \\\\u003Cunknown>\\\\n#18 0x7f655b494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: invalid locator\nE         (Session info: chrome=120.0.6099.71)\nE       Stacktrace:\nE       #0 0x55d87af62d33 <unknown>\nE       #1 0x55d87ac1ff87 <unknown>\nE       #2 0x55d87ac6f2ac <unknown>\nE       #3 0x55d87ac6fd11 <unknown>\nE       #4 0x55d87acbb041 <unknown>\nE       #5 0x55d87ac9936d <unknown>\nE       #6 0x55d87acb8297 <unknown>\nE       #7 0x55d87ac990e3 <unknown>\nE       #8 0x55d87ac61044 <unknown>\nE       #9 0x55d87ac6244e <unknown>\nE       #10 0x55d87af27861 <unknown>\nE       #11 0x55d87af2b785 <unknown>\nE       #12 0x55d87af15285 <unknown>\nE       #13 0x55d87af2c41f <unknown>\nE       #14 0x55d87aef920f <unknown>\nE       #15 0x55d87af50028 <unknown>\nE       #16 0x55d87af501f7 <unknown>\nE       #17 0x55d87af61ed4 <unknown>\nE       #18 0x7f655b494ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidArgumentException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1702676121840,"stop":1702676122727,"duration":887},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1702676121840,"stop":1702676121840,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"go","time":{"start":1702676122727,"stop":1702676122728,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_time","time":{"start":1702676122728,"stop":1702676122728,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1702676122728,"stop":1702676122728,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1702676122728,"stop":1702676122728,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1702676122728,"stop":1702676122728,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1702676122728,"stop":1702676122728,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1702676122728,"stop":1702676122728,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"prob_run_tc","time":{"start":1702676122728,"stop":1702676122728,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [1. Create & verify account]\n        Language: All. License: All. Role: All.\n        ","status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: invalid locator\n  (Session info: chrome=120.0.6099.71)\nStacktrace:\n#0 0x55d87af62d33 <unknown>\n#1 0x55d87ac1ff87 <unknown>\n#2 0x55d87ac6f2ac <unknown>\n#3 0x55d87ac6fd11 <unknown>\n#4 0x55d87acbb041 <unknown>\n#5 0x55d87ac9936d <unknown>\n#6 0x55d87acb8297 <unknown>\n#7 0x55d87ac990e3 <unknown>\n#8 0x55d87ac61044 <unknown>\n#9 0x55d87ac6244e <unknown>\n#10 0x55d87af27861 <unknown>\n#11 0x55d87af2b785 <unknown>\n#12 0x55d87af15285 <unknown>\n#13 0x55d87af2c41f <unknown>\n#14 0x55d87aef920f <unknown>\n#15 0x55d87af50028 <unknown>\n#16 0x55d87af501f7 <unknown>\n#17 0x55d87af61ed4 <unknown>\n#18 0x7f655b494ac3 <unknown>","statusTrace":"self = <US_11-01-02_Basics_of_trading_test.TestBasicsOfTrading object at 0x7f293a2372d0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"569a2f41814a65cfaab12c64cbf42178\")>\ncur_language = 'ru', cur_country = 'de', cur_role = 'NoReg'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\nprob_run_tc = '', cur_time = '2023-12-15 21:35:22.728378'\n\n    @allure.step(\"Start test_11.01.02_01 button '1. Create & verify your account'\")\n    def test_01_create_verify_your_account(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password,\n            prob_run_tc, cur_time):\n        \"\"\"\n        Check: Button [1. Create & verify account]\n        Language: All. License: All. Role: All.\n        \"\"\"\n        print(f\"\\n{datetime.now()}   Работает obj {self} с именем TC_11.01.02_01 и атрибутами:\")\n        print(f\"\\n{datetime.now()}   {self.__dict__}\")\n        link = build_dynamic_arg_v2(self, d, worker_id, cur_language, cur_country, cur_role, prob_run_tc,\n                                    \"11.01.02\", \"Education > Menu Item [The basics of trading]\",\n                                    \"01\", \"Testing button [1. Create your account] in block [Steps trading]\")\n    \n        page_conditions = Conditions(d, \"\")\n>       page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_11_Education/US_11-01-02_Basics_of_trading/US_11-01-02_Basics_of_trading_test.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions.py:91: in preconditions\n    self.button_accept_all_cookies_click()\npages/base_page.py:254: in button_accept_all_cookies_click\n    check_box_i_am_not_robot = self.browser.find_elements(\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:772: in find_elements\n    return self.execute(Command.FIND_ELEMENTS, {\"using\": by, \"value\": value})[\"value\"] or []\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f293a25b750>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"invalid argument: invalid locator\\\\n  (Sessi...\\\\n#16 0x55d87af501f7 \\\\u003Cunknown>\\\\n#17 0x55d87af61ed4 \\\\u003Cunknown>\\\\n#18 0x7f655b494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: invalid locator\nE         (Session info: chrome=120.0.6099.71)\nE       Stacktrace:\nE       #0 0x55d87af62d33 <unknown>\nE       #1 0x55d87ac1ff87 <unknown>\nE       #2 0x55d87ac6f2ac <unknown>\nE       #3 0x55d87ac6fd11 <unknown>\nE       #4 0x55d87acbb041 <unknown>\nE       #5 0x55d87ac9936d <unknown>\nE       #6 0x55d87acb8297 <unknown>\nE       #7 0x55d87ac990e3 <unknown>\nE       #8 0x55d87ac61044 <unknown>\nE       #9 0x55d87ac6244e <unknown>\nE       #10 0x55d87af27861 <unknown>\nE       #11 0x55d87af2b785 <unknown>\nE       #12 0x55d87af15285 <unknown>\nE       #13 0x55d87af2c41f <unknown>\nE       #14 0x55d87aef920f <unknown>\nE       #15 0x55d87af50028 <unknown>\nE       #16 0x55d87af501f7 <unknown>\nE       #17 0x55d87af61ed4 <unknown>\nE       #18 0x7f655b494ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidArgumentException","steps":[{"name":"Start test_11.01.02_01 button '1. Create & verify your account'","time":{"start":1702676122729,"stop":1702676165422,"duration":42693},"status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: invalid locator\n  (Session info: chrome=120.0.6099.71)\nStacktrace:\n#0 0x55d87af62d33 <unknown>\n#1 0x55d87ac1ff87 <unknown>\n#2 0x55d87ac6f2ac <unknown>\n#3 0x55d87ac6fd11 <unknown>\n#4 0x55d87acbb041 <unknown>\n#5 0x55d87ac9936d <unknown>\n#6 0x55d87acb8297 <unknown>\n#7 0x55d87ac990e3 <unknown>\n#8 0x55d87ac61044 <unknown>\n#9 0x55d87ac6244e <unknown>\n#10 0x55d87af27861 <unknown>\n#11 0x55d87af2b785 <unknown>\n#12 0x55d87af15285 <unknown>\n#13 0x55d87af2c41f <unknown>\n#14 0x55d87aef920f <unknown>\n#15 0x55d87af50028 <unknown>\n#16 0x55d87af501f7 <unknown>\n#17 0x55d87af61ed4 <unknown>\n#18 0x7f655b494ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_11_Education/US_11-01-02_Basics_of_trading/US_11-01-02_Basics_of_trading_test.py\", line 37, in test_01_create_verify_your_account\n    page_conditions.preconditions(\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions.py\", line 91, in preconditions\n    self.button_accept_all_cookies_click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/base_page.py\", line 254, in button_accept_all_cookies_click\n    check_box_i_am_not_robot = self.browser.find_elements(\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 772, in find_elements\n    return self.execute(Command.FIND_ELEMENTS, {\"using\": by, \"value\": value})[\"value\"] or []\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Set preconditions","time":{"start":1702676122731,"stop":1702676165422,"duration":42691},"status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: invalid locator\n  (Session info: chrome=120.0.6099.71)\nStacktrace:\n#0 0x55d87af62d33 <unknown>\n#1 0x55d87ac1ff87 <unknown>\n#2 0x55d87ac6f2ac <unknown>\n#3 0x55d87ac6fd11 <unknown>\n#4 0x55d87acbb041 <unknown>\n#5 0x55d87ac9936d <unknown>\n#6 0x55d87acb8297 <unknown>\n#7 0x55d87ac990e3 <unknown>\n#8 0x55d87ac61044 <unknown>\n#9 0x55d87ac6244e <unknown>\n#10 0x55d87af27861 <unknown>\n#11 0x55d87af2b785 <unknown>\n#12 0x55d87af15285 <unknown>\n#13 0x55d87af2c41f <unknown>\n#14 0x55d87aef920f <unknown>\n#15 0x55d87af50028 <unknown>\n#16 0x55d87af501f7 <unknown>\n#17 0x55d87af61ed4 <unknown>\n#18 0x7f655b494ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions.py\", line 91, in preconditions\n    self.button_accept_all_cookies_click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/base_page.py\", line 254, in button_accept_all_cookies_click\n    check_box_i_am_not_robot = self.browser.find_elements(\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 772, in find_elements\n    return self.execute(Command.FIND_ELEMENTS, {\"using\": by, \"value\": value})[\"value\"] or []\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Accept all cookies","time":{"start":1702676129466,"stop":1702676165421,"duration":35955},"status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: invalid locator\n  (Session info: chrome=120.0.6099.71)\nStacktrace:\n#0 0x55d87af62d33 <unknown>\n#1 0x55d87ac1ff87 <unknown>\n#2 0x55d87ac6f2ac <unknown>\n#3 0x55d87ac6fd11 <unknown>\n#4 0x55d87acbb041 <unknown>\n#5 0x55d87ac9936d <unknown>\n#6 0x55d87acb8297 <unknown>\n#7 0x55d87ac990e3 <unknown>\n#8 0x55d87ac61044 <unknown>\n#9 0x55d87ac6244e <unknown>\n#10 0x55d87af27861 <unknown>\n#11 0x55d87af2b785 <unknown>\n#12 0x55d87af15285 <unknown>\n#13 0x55d87af2c41f <unknown>\n#14 0x55d87aef920f <unknown>\n#15 0x55d87af50028 <unknown>\n#16 0x55d87af501f7 <unknown>\n#17 0x55d87af61ed4 <unknown>\n#18 0x7f655b494ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/base_page.py\", line 254, in button_accept_all_cookies_click\n    check_box_i_am_not_robot = self.browser.find_elements(\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 772, in find_elements\n    return self.execute(Command.FIND_ELEMENTS, {\"using\": by, \"value\": value})[\"value\"] or []\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"569a2f41814a65cfaab12c64cbf42178\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'ru'"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"569a2f41814a65cfaab12c64cbf42178\")>"},{"name":"cur_language","value":"'ru'"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"prob_run_tc","value":"''"},{"name":"cur_time","value":"'2023-12-15 21:35:22.728378'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"1df5928f8f48bc22","name":"Screenshot","source":"1df5928f8f48bc22.png","type":"image/png","size":281196},{"uid":"82becff6c8d9bef1","name":"log","source":"82becff6c8d9bef1.txt","type":"text/plain","size":1334},{"uid":"af4558f8b9b79b5b","name":"stdout","source":"af4558f8b9b79b5b.txt","type":"text/plain","size":1976}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"go::0","time":{"start":1702676241022,"stop":1702676241131,"duration":109},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Language: ru / US_11.01.02 | Education > Menu Item [The basics of trading]"},{"name":"feature","value":"Country: de / Role: NoReg / TS_11.01.02 | Education > Menu Item [The basics of trading]"},{"name":"story","value":"TC_11.01.02_01 | Testing button [1. Create your account] in block [Steps trading]"},{"name":"tag","value":"us_11_01_02"},{"name":"parentSuite","value":"tests.US_11_Education.US_11-01-02_Basics_of_trading"},{"name":"suite","value":"US_11-01-02_Basics_of_trading_test"},{"name":"subSuite","value":"TestBasicsOfTrading"},{"name":"host","value":"fv-az841-233"},{"name":"thread","value":"5163-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_11_Education.US_11-01-02_Basics_of_trading.US_11-01-02_Basics_of_trading_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'de'"},{"name":"cur_language","value":"'ru'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_role","value":"'NoReg'"},{"name":"go","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["us_11_01_02"]},"source":"d0af0e581f915c39.json","parameterValues":["'de'","'ru'","'aqa.tomelo.an@gmail.com'","'iT9Vgqi6d$fiZ*Z'","'NoReg'","'chrome'"]}