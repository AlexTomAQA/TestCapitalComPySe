{"uid":"e36cf07033d1637","name":"TC_01.05.00_003 | Testing button [Buy]. Bid:01.05.00_003-ru.au.NoAuth","fullName":"tests.US_01_Markets.US_01-05_Commodities.US_01-05-00_Commodities_test.TestCommodities#test_003_buy_trading_instrument","historyId":"0bd4d40be2c60496b4d83c49833d0884","time":{"start":1711025204026,"stop":1711025209420,"duration":5394},"description":"\n        Check: button [Buy] in Widget 'Trading instrument'\n        Language: All License: All (except FCA) Role: All.\n        ","descriptionHtml":"<pre><code>    Check: button [Buy] in Widget 'Trading instrument'\n    Language: All License: All (except FCA) Role: All.\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"fieldDropdown js-fieldDropdown-markets\">...</div> is not clickable at point (925, 362). Other element would receive the click: <button type=\"submit\" class=\"btn btn--md btn--wide s2_btn disabled hasPointer\">...</button>\n  (Session info: chrome=122.0.6261.128)\nStacktrace:\n#0 0x55c387443f33 <unknown>\n#1 0x55c38713bce6 <unknown>\n#2 0x55c38718da73 <unknown>\n#3 0x55c38718b98e <unknown>\n#4 0x55c387189367 <unknown>\n#5 0x55c387188732 <unknown>\n#6 0x55c38717bd27 <unknown>\n#7 0x55c3871a8eb2 <unknown>\n#8 0x55c38717b6b8 <unknown>\n#9 0x55c3871a907e <unknown>\n#10 0x55c3871c7899 <unknown>\n#11 0x55c3871a8c53 <unknown>\n#12 0x55c387179db3 <unknown>\n#13 0x55c38717a77e <unknown>\n#14 0x55c38740986b <unknown>\n#15 0x55c38740d885 <unknown>\n#16 0x55c3873f7181 <unknown>\n#17 0x55c38740e412 <unknown>\n#18 0x55c3873db25f <unknown>\n#19 0x55c387432528 <unknown>\n#20 0x55c387432723 <unknown>\n#21 0x55c3874430e4 <unknown>\n#22 0x7f4039694ac3 <unknown>","statusTrace":"self = <US_01-05-00_Commodities_test.TestCommodities object at 0x7f124342a930>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4c9c49dc35d30bd0ef851f93c160b199\")>\ncur_language = 'ru', cur_country = 'au', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_sort = 'Top risers'\n\n    @allure.step(\"Start test of button [Buy] in Widget 'Trading instrument'\")\n    @pytest.mark.test_003\n    def test_003_buy_trading_instrument(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_sort):\n        \"\"\"\n        Check: button [Buy] in Widget 'Trading instrument'\n        Language: All License: All (except FCA) Role: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"01.05\", \"Markets > Menu item [Commodities]\",\n            \".00_003\", \"Testing button [Buy]\")\n    \n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n    \n        page_conditions = Conditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        page_menu = MenuSection(d, link)\n        page_menu.move_focus_to_markets_menu(d, cur_language, cur_country)\n        cur_page_url = page_menu.sub_menu_commodities_move_focus_click(d, cur_language)\n    \n        test_element = TableTradingInstrumentsBuyButton(d, cur_page_url, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_page_url, cur_sort)\n\ntests/US_01_Markets/US_01-05_Commodities/US_01-05-00_Commodities_test.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/TableTradingInstrumentsBuyButton.py:31: in full_test_with_tpi\n    item_list = self.arrange_(d, cur_item_link, cur_sort)\npages/Elements/TableTradingInstrumentsBuyButton.py:79: in arrange_\n    field_dropdown_list[0].click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1245d67cb0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55c387432723 \\\\u003Cunknown>\\\\n#21 0x55c3874430e4 \\\\u003Cunknown>\\\\n#22 0x7f4039694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"fieldDropdown js-fieldDropdown-markets\">...</div> is not clickable at point (925, 362). Other element would receive the click: <button type=\"submit\" class=\"btn btn--md btn--wide s2_btn disabled hasPointer\">...</button>\nE         (Session info: chrome=122.0.6261.128)\nE       Stacktrace:\nE       #0 0x55c387443f33 <unknown>\nE       #1 0x55c38713bce6 <unknown>\nE       #2 0x55c38718da73 <unknown>\nE       #3 0x55c38718b98e <unknown>\nE       #4 0x55c387189367 <unknown>\nE       #5 0x55c387188732 <unknown>\nE       #6 0x55c38717bd27 <unknown>\nE       #7 0x55c3871a8eb2 <unknown>\nE       #8 0x55c38717b6b8 <unknown>\nE       #9 0x55c3871a907e <unknown>\nE       #10 0x55c3871c7899 <unknown>\nE       #11 0x55c3871a8c53 <unknown>\nE       #12 0x55c387179db3 <unknown>\nE       #13 0x55c38717a77e <unknown>\nE       #14 0x55c38740986b <unknown>\nE       #15 0x55c38740d885 <unknown>\nE       #16 0x55c3873f7181 <unknown>\nE       #17 0x55c38740e412 <unknown>\nE       #18 0x55c3873db25f <unknown>\nE       #19 0x55c387432528 <unknown>\nE       #20 0x55c387432723 <unknown>\nE       #21 0x55c3874430e4 <unknown>\nE       #22 0x7f4039694ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1711025058244,"stop":1711025058661,"duration":417},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1711025058661,"stop":1711025058661,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1711025058662,"stop":1711025058662,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1711025058662,"stop":1711025058662,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1711025058662,"stop":1711025058662,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1711025058662,"stop":1711025058662,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1711025141247,"stop":1711025141247,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_sort","time":{"start":1711025204026,"stop":1711025204026,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: button [Buy] in Widget 'Trading instrument'\n        Language: All License: All (except FCA) Role: All.\n        ","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"fieldDropdown js-fieldDropdown-markets\">...</div> is not clickable at point (925, 362). Other element would receive the click: <button type=\"submit\" class=\"btn btn--md btn--wide s2_btn disabled hasPointer\">...</button>\n  (Session info: chrome=122.0.6261.128)\nStacktrace:\n#0 0x55c387443f33 <unknown>\n#1 0x55c38713bce6 <unknown>\n#2 0x55c38718da73 <unknown>\n#3 0x55c38718b98e <unknown>\n#4 0x55c387189367 <unknown>\n#5 0x55c387188732 <unknown>\n#6 0x55c38717bd27 <unknown>\n#7 0x55c3871a8eb2 <unknown>\n#8 0x55c38717b6b8 <unknown>\n#9 0x55c3871a907e <unknown>\n#10 0x55c3871c7899 <unknown>\n#11 0x55c3871a8c53 <unknown>\n#12 0x55c387179db3 <unknown>\n#13 0x55c38717a77e <unknown>\n#14 0x55c38740986b <unknown>\n#15 0x55c38740d885 <unknown>\n#16 0x55c3873f7181 <unknown>\n#17 0x55c38740e412 <unknown>\n#18 0x55c3873db25f <unknown>\n#19 0x55c387432528 <unknown>\n#20 0x55c387432723 <unknown>\n#21 0x55c3874430e4 <unknown>\n#22 0x7f4039694ac3 <unknown>","statusTrace":"self = <US_01-05-00_Commodities_test.TestCommodities object at 0x7f124342a930>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4c9c49dc35d30bd0ef851f93c160b199\")>\ncur_language = 'ru', cur_country = 'au', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_sort = 'Top risers'\n\n    @allure.step(\"Start test of button [Buy] in Widget 'Trading instrument'\")\n    @pytest.mark.test_003\n    def test_003_buy_trading_instrument(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_sort):\n        \"\"\"\n        Check: button [Buy] in Widget 'Trading instrument'\n        Language: All License: All (except FCA) Role: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"01.05\", \"Markets > Menu item [Commodities]\",\n            \".00_003\", \"Testing button [Buy]\")\n    \n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n    \n        page_conditions = Conditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        page_menu = MenuSection(d, link)\n        page_menu.move_focus_to_markets_menu(d, cur_language, cur_country)\n        cur_page_url = page_menu.sub_menu_commodities_move_focus_click(d, cur_language)\n    \n        test_element = TableTradingInstrumentsBuyButton(d, cur_page_url, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_page_url, cur_sort)\n\ntests/US_01_Markets/US_01-05_Commodities/US_01-05-00_Commodities_test.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/TableTradingInstrumentsBuyButton.py:31: in full_test_with_tpi\n    item_list = self.arrange_(d, cur_item_link, cur_sort)\npages/Elements/TableTradingInstrumentsBuyButton.py:79: in arrange_\n    field_dropdown_list[0].click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1245d67cb0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55c387432723 \\\\u003Cunknown>\\\\n#21 0x55c3874430e4 \\\\u003Cunknown>\\\\n#22 0x7f4039694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"fieldDropdown js-fieldDropdown-markets\">...</div> is not clickable at point (925, 362). Other element would receive the click: <button type=\"submit\" class=\"btn btn--md btn--wide s2_btn disabled hasPointer\">...</button>\nE         (Session info: chrome=122.0.6261.128)\nE       Stacktrace:\nE       #0 0x55c387443f33 <unknown>\nE       #1 0x55c38713bce6 <unknown>\nE       #2 0x55c38718da73 <unknown>\nE       #3 0x55c38718b98e <unknown>\nE       #4 0x55c387189367 <unknown>\nE       #5 0x55c387188732 <unknown>\nE       #6 0x55c38717bd27 <unknown>\nE       #7 0x55c3871a8eb2 <unknown>\nE       #8 0x55c38717b6b8 <unknown>\nE       #9 0x55c3871a907e <unknown>\nE       #10 0x55c3871c7899 <unknown>\nE       #11 0x55c3871a8c53 <unknown>\nE       #12 0x55c387179db3 <unknown>\nE       #13 0x55c38717a77e <unknown>\nE       #14 0x55c38740986b <unknown>\nE       #15 0x55c38740d885 <unknown>\nE       #16 0x55c3873f7181 <unknown>\nE       #17 0x55c38740e412 <unknown>\nE       #18 0x55c3873db25f <unknown>\nE       #19 0x55c387432528 <unknown>\nE       #20 0x55c387432723 <unknown>\nE       #21 0x55c3874430e4 <unknown>\nE       #22 0x7f4039694ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Start test of button [Buy] in Widget 'Trading instrument'","time":{"start":1711025204027,"stop":1711025209419,"duration":5392},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"fieldDropdown js-fieldDropdown-markets\">...</div> is not clickable at point (925, 362). Other element would receive the click: <button type=\"submit\" class=\"btn btn--md btn--wide s2_btn disabled hasPointer\">...</button>\n  (Session info: chrome=122.0.6261.128)\nStacktrace:\n#0 0x55c387443f33 <unknown>\n#1 0x55c38713bce6 <unknown>\n#2 0x55c38718da73 <unknown>\n#3 0x55c38718b98e <unknown>\n#4 0x55c387189367 <unknown>\n#5 0x55c387188732 <unknown>\n#6 0x55c38717bd27 <unknown>\n#7 0x55c3871a8eb2 <unknown>\n#8 0x55c38717b6b8 <unknown>\n#9 0x55c3871a907e <unknown>\n#10 0x55c3871c7899 <unknown>\n#11 0x55c3871a8c53 <unknown>\n#12 0x55c387179db3 <unknown>\n#13 0x55c38717a77e <unknown>\n#14 0x55c38740986b <unknown>\n#15 0x55c38740d885 <unknown>\n#16 0x55c3873f7181 <unknown>\n#17 0x55c38740e412 <unknown>\n#18 0x55c3873db25f <unknown>\n#19 0x55c387432528 <unknown>\n#20 0x55c387432723 <unknown>\n#21 0x55c3874430e4 <unknown>\n#22 0x7f4039694ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_01_Markets/US_01-05_Commodities/US_01-05-00_Commodities_test.py\", line 101, in test_003_buy_trading_instrument\n    test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_page_url, cur_sort)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/TableTradingInstrumentsBuyButton.py\", line 31, in full_test_with_tpi\n    item_list = self.arrange_(d, cur_item_link, cur_sort)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/TableTradingInstrumentsBuyButton.py\", line 79, in arrange_\n    field_dropdown_list[0].click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"2024-03-21 12:44:18.216989   Start Building dynamic arguments for allure report generation","time":{"start":1711025204027,"stop":1711025204028,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"4c9c49dc35d30bd0ef851f93c160b199\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'ru'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"us","value":"'01.05'"},{"name":"desc_us","value":"'Markets > Menu item [Commodities]'"},{"name":"num_tc","value":"'.00_003'"},{"name":"desc_tc","value":"'Testing button [Buy]'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-03-21 12:44:18.221357   Set preconditions","time":{"start":1711025204028,"stop":1711025205270,"duration":1242},"status":"passed","steps":[{"name":"2024-03-21 12:44:18.220271   Start Checking Captcha","time":{"start":1711025204236,"stop":1711025205267,"duration":1031},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"4c9c49dc35d30bd0ef851f93c160b199\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'ru'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-03-21 12:44:18.218875.   Focus moved to 'Markets' menu","time":{"start":1711025205270,"stop":1711025207064,"duration":1794},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"4c9c49dc35d30bd0ef851f93c160b199\")>"},{"name":"test_language","value":"'ru'"},{"name":"test_country","value":"'au'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-03-21 12:44:18.219296. Move focus to 'Commodities' submenu and click.","time":{"start":1711025207064,"stop":1711025208336,"duration":1272},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"4c9c49dc35d30bd0ef851f93c160b199\")>"},{"name":"test_language","value":"'ru'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"4c9c49dc35d30bd0ef851f93c160b199\")>"},{"name":"cur_language","value":"'ru'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_sort","value":"'Top risers'"}],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"b0b415b0c3195016","name":"Screenshot","source":"b0b415b0c3195016.png","type":"image/png","size":105641},{"uid":"fbaaee52e72b11ef","name":"stdout","source":"fbaaee52e72b11ef.txt","type":"text/plain","size":2052}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1711025292487,"stop":1711025292614,"duration":127},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_01.05 | Markets > Menu item [Commodities]"},{"name":"feature","value":"Language: ru"},{"name":"story","value":"Country: au / Role: NoAuth"},{"name":"tag","value":"test_003"},{"name":"tag","value":"us_01_05"},{"name":"parentSuite","value":"tests.US_01_Markets.US_01-05_Commodities"},{"name":"suite","value":"US_01-05-00_Commodities_test"},{"name":"subSuite","value":"TestCommodities"},{"name":"host","value":"fv-az738-717"},{"name":"thread","value":"8345-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_01_Markets.US_01-05_Commodities.US_01-05-00_Commodities_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'au'"},{"name":"cur_language","value":"'ru'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_sort","value":"'Top risers'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["us_01_05","test_003"]},"source":"e36cf07033d1637.json","parameterValues":["'au'","'ru'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoAuth'","'Top risers'","'Chrome'"]}