{"uid":"720e1e29cbf68d85","name":"TC_11.02.03.01_08 | Testing button [Create your account] in block [Steps trading]. Bid:11.02.03.01_08-en.ae.Auth","fullName":"tests.US_11_Education.US_11-02-03_Commodities_trading.us_11-02-03-01_Commodities_trading_test.TestCommoditiesTrading#test_08_block_steps_trading_button_create_your_account","historyId":"2610b78ce4aca4c36c14ad4b52d4d46b","time":{"start":1711781706724,"stop":1711781707967,"duration":1243},"description":"\n        Check: Button [1. Create your account] in block [Steps trading]\n        Language: All. License: All.\n        ","descriptionHtml":"<pre><code>    Check: Button [1. Create your account] in block [Steps trading]\n    Language: All. License: All.\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=123.0.6312.58)\nStacktrace:\n#0 0x5607e13998a3 <unknown>\n#1 0x5607e108f717 <unknown>\n#2 0x5607e1076adf <unknown>\n#3 0x5607e107555b <unknown>\n#4 0x5607e1075a2a <unknown>\n#5 0x5607e109224e <unknown>\n#6 0x5607e111b7c5 <unknown>\n#7 0x5607e10fc5a2 <unknown>\n#8 0x5607e111ac19 <unknown>\n#9 0x5607e10fc343 <unknown>\n#10 0x5607e10cd593 <unknown>\n#11 0x5607e10cdf5e <unknown>\n#12 0x5607e135d88b <unknown>\n#13 0x5607e13617e5 <unknown>\n#14 0x5607e134b5b1 <unknown>\n#15 0x5607e1362372 <unknown>\n#16 0x5607e13308bf <unknown>\n#17 0x5607e1388768 <unknown>\n#18 0x5607e138893b <unknown>\n#19 0x5607e13989f4 <unknown>\n#20 0x7f3929494ac3 <unknown>","statusTrace":"self = <us_11-02-03-01_Commodities_trading_test.TestCommoditiesTrading object at 0x7fbc25d73f50>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"eb0c5c4797cdc8e114b20f58fd2df7b5\")>\ncur_language = '', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_item_link = 'https://capital.com/trade-copper'\n\n    @allure.step(\"Start test of button [Create your account] in block [Steps trading]\")\n    @pytest.mark.test_08\n    def test_08_block_steps_trading_button_create_your_account(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link):\n        \"\"\"\n        Check: Button [1. Create your account] in block [Steps trading]\n        Language: All. License: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"11.02.03\", \"Education > Menu item [Commodities trading]\",\n            \".01_08\", \"Testing button [Create your account] in block [Steps trading]\")\n    \n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n        check_language(cur_language)\n    \n        page_conditions = Conditions(d, \"\")\n>       page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_11_Education/US_11-02-03_Commodities_trading/us_11-02-03-01_Commodities_trading_test.py:242: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions.py:104: in preconditions\n    self.open_page()\npages/base_page.py:149: in open_page\n    self.driver.get(link)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbc25ed3ad0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"invalid argument\\\\n  (Session info: chrome=1...\\\\n#18 0x5607e138893b \\\\u003Cunknown>\\\\n#19 0x5607e13989f4 \\\\u003Cunknown>\\\\n#20 0x7f3929494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\nE         (Session info: chrome=123.0.6312.58)\nE       Stacktrace:\nE       #0 0x5607e13998a3 <unknown>\nE       #1 0x5607e108f717 <unknown>\nE       #2 0x5607e1076adf <unknown>\nE       #3 0x5607e107555b <unknown>\nE       #4 0x5607e1075a2a <unknown>\nE       #5 0x5607e109224e <unknown>\nE       #6 0x5607e111b7c5 <unknown>\nE       #7 0x5607e10fc5a2 <unknown>\nE       #8 0x5607e111ac19 <unknown>\nE       #9 0x5607e10fc343 <unknown>\nE       #10 0x5607e10cd593 <unknown>\nE       #11 0x5607e10cdf5e <unknown>\nE       #12 0x5607e135d88b <unknown>\nE       #13 0x5607e13617e5 <unknown>\nE       #14 0x5607e134b5b1 <unknown>\nE       #15 0x5607e1362372 <unknown>\nE       #16 0x5607e13308bf <unknown>\nE       #17 0x5607e1388768 <unknown>\nE       #18 0x5607e138893b <unknown>\nE       #19 0x5607e13989f4 <unknown>\nE       #20 0x7f3929494ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidArgumentException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1711781361096,"stop":1711781361505,"duration":409},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1711781361505,"stop":1711781361506,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1711781361505,"stop":1711781361505,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1711781361505,"stop":1711781361505,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1711781361505,"stop":1711781361505,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1711781361505,"stop":1711781361505,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1711781696616,"stop":1711781696616,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [1. Create your account] in block [Steps trading]\n        Language: All. License: All.\n        ","status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=123.0.6312.58)\nStacktrace:\n#0 0x5607e13998a3 <unknown>\n#1 0x5607e108f717 <unknown>\n#2 0x5607e1076adf <unknown>\n#3 0x5607e107555b <unknown>\n#4 0x5607e1075a2a <unknown>\n#5 0x5607e109224e <unknown>\n#6 0x5607e111b7c5 <unknown>\n#7 0x5607e10fc5a2 <unknown>\n#8 0x5607e111ac19 <unknown>\n#9 0x5607e10fc343 <unknown>\n#10 0x5607e10cd593 <unknown>\n#11 0x5607e10cdf5e <unknown>\n#12 0x5607e135d88b <unknown>\n#13 0x5607e13617e5 <unknown>\n#14 0x5607e134b5b1 <unknown>\n#15 0x5607e1362372 <unknown>\n#16 0x5607e13308bf <unknown>\n#17 0x5607e1388768 <unknown>\n#18 0x5607e138893b <unknown>\n#19 0x5607e13989f4 <unknown>\n#20 0x7f3929494ac3 <unknown>","statusTrace":"self = <us_11-02-03-01_Commodities_trading_test.TestCommoditiesTrading object at 0x7fbc25d73f50>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"eb0c5c4797cdc8e114b20f58fd2df7b5\")>\ncur_language = '', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_item_link = 'https://capital.com/trade-copper'\n\n    @allure.step(\"Start test of button [Create your account] in block [Steps trading]\")\n    @pytest.mark.test_08\n    def test_08_block_steps_trading_button_create_your_account(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link):\n        \"\"\"\n        Check: Button [1. Create your account] in block [Steps trading]\n        Language: All. License: All.\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"11.02.03\", \"Education > Menu item [Commodities trading]\",\n            \".01_08\", \"Testing button [Create your account] in block [Steps trading]\")\n    \n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n        check_language(cur_language)\n    \n        page_conditions = Conditions(d, \"\")\n>       page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_11_Education/US_11-02-03_Commodities_trading/us_11-02-03-01_Commodities_trading_test.py:242: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions.py:104: in preconditions\n    self.open_page()\npages/base_page.py:149: in open_page\n    self.driver.get(link)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbc25ed3ad0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"invalid argument\\\\n  (Session info: chrome=1...\\\\n#18 0x5607e138893b \\\\u003Cunknown>\\\\n#19 0x5607e13989f4 \\\\u003Cunknown>\\\\n#20 0x7f3929494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\nE         (Session info: chrome=123.0.6312.58)\nE       Stacktrace:\nE       #0 0x5607e13998a3 <unknown>\nE       #1 0x5607e108f717 <unknown>\nE       #2 0x5607e1076adf <unknown>\nE       #3 0x5607e107555b <unknown>\nE       #4 0x5607e1075a2a <unknown>\nE       #5 0x5607e109224e <unknown>\nE       #6 0x5607e111b7c5 <unknown>\nE       #7 0x5607e10fc5a2 <unknown>\nE       #8 0x5607e111ac19 <unknown>\nE       #9 0x5607e10fc343 <unknown>\nE       #10 0x5607e10cd593 <unknown>\nE       #11 0x5607e10cdf5e <unknown>\nE       #12 0x5607e135d88b <unknown>\nE       #13 0x5607e13617e5 <unknown>\nE       #14 0x5607e134b5b1 <unknown>\nE       #15 0x5607e1362372 <unknown>\nE       #16 0x5607e13308bf <unknown>\nE       #17 0x5607e1388768 <unknown>\nE       #18 0x5607e138893b <unknown>\nE       #19 0x5607e13989f4 <unknown>\nE       #20 0x7f3929494ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidArgumentException","steps":[{"name":"Start test of button [Create your account] in block [Steps trading]","time":{"start":1711781706724,"stop":1711781707967,"duration":1243},"status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=123.0.6312.58)\nStacktrace:\n#0 0x5607e13998a3 <unknown>\n#1 0x5607e108f717 <unknown>\n#2 0x5607e1076adf <unknown>\n#3 0x5607e107555b <unknown>\n#4 0x5607e1075a2a <unknown>\n#5 0x5607e109224e <unknown>\n#6 0x5607e111b7c5 <unknown>\n#7 0x5607e10fc5a2 <unknown>\n#8 0x5607e111ac19 <unknown>\n#9 0x5607e10fc343 <unknown>\n#10 0x5607e10cd593 <unknown>\n#11 0x5607e10cdf5e <unknown>\n#12 0x5607e135d88b <unknown>\n#13 0x5607e13617e5 <unknown>\n#14 0x5607e134b5b1 <unknown>\n#15 0x5607e1362372 <unknown>\n#16 0x5607e13308bf <unknown>\n#17 0x5607e1388768 <unknown>\n#18 0x5607e138893b <unknown>\n#19 0x5607e13989f4 <unknown>\n#20 0x7f3929494ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_11_Education/US_11-02-03_Commodities_trading/us_11-02-03-01_Commodities_trading_test.py\", line 242, in test_08_block_steps_trading_button_create_your_account\n    page_conditions.preconditions(\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions.py\", line 104, in preconditions\n    self.open_page()\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/base_page.py\", line 149, in open_page\n    self.driver.get(link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 356, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"2024-03-30 06:49:21.019528   Start Building dynamic arguments for allure report generation","time":{"start":1711781706724,"stop":1711781706726,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"eb0c5c4797cdc8e114b20f58fd2df7b5\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"us","value":"'11.02.03'"},{"name":"desc_us","value":"'Education > Menu item [Commodities trading]'"},{"name":"num_tc","value":"'.01_08'"},{"name":"desc_tc","value":"'Testing button [Create your account] in block [Steps trading]'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-03-30 06:49:21.023796   Set preconditions","time":{"start":1711781706726,"stop":1711781707966,"duration":1240},"status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=123.0.6312.58)\nStacktrace:\n#0 0x5607e13998a3 <unknown>\n#1 0x5607e108f717 <unknown>\n#2 0x5607e1076adf <unknown>\n#3 0x5607e107555b <unknown>\n#4 0x5607e1075a2a <unknown>\n#5 0x5607e109224e <unknown>\n#6 0x5607e111b7c5 <unknown>\n#7 0x5607e10fc5a2 <unknown>\n#8 0x5607e111ac19 <unknown>\n#9 0x5607e10fc343 <unknown>\n#10 0x5607e10cd593 <unknown>\n#11 0x5607e10cdf5e <unknown>\n#12 0x5607e135d88b <unknown>\n#13 0x5607e13617e5 <unknown>\n#14 0x5607e134b5b1 <unknown>\n#15 0x5607e1362372 <unknown>\n#16 0x5607e13308bf <unknown>\n#17 0x5607e1388768 <unknown>\n#18 0x5607e138893b <unknown>\n#19 0x5607e13989f4 <unknown>\n#20 0x7f3929494ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions.py\", line 104, in preconditions\n    self.open_page()\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/base_page.py\", line 149, in open_page\n    self.driver.get(link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 356, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"2024-03-30 06:49:21.022677   Start Checking Captcha","time":{"start":1711781706933,"stop":1711781707955,"duration":1022},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"eb0c5c4797cdc8e114b20f58fd2df7b5\")>"},{"name":"host","value":"'https://capital.com/'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"eb0c5c4797cdc8e114b20f58fd2df7b5\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_item_link","value":"'https://capital.com/trade-copper'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"e22313dcf5542664","name":"Screenshot","source":"e22313dcf5542664.png","type":"image/png","size":100524},{"uid":"c92bc2f633383728","name":"stdout","source":"c92bc2f633383728.txt","type":"text/plain","size":1040}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1711781731186,"stop":1711781731320,"duration":134},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_11.02.03 | Education > Menu item [Commodities trading]"},{"name":"feature","value":"Language: en"},{"name":"story","value":"Country: ae / Role: Auth"},{"name":"tag","value":"test_08"},{"name":"tag","value":"us_11_02_03"},{"name":"parentSuite","value":"tests.US_11_Education.US_11-02-03_Commodities_trading"},{"name":"suite","value":"us_11-02-03-01_Commodities_trading_test"},{"name":"subSuite","value":"TestCommoditiesTrading"},{"name":"host","value":"fv-az575-835"},{"name":"thread","value":"33037-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_11_Education.US_11-02-03_Commodities_trading.us_11-02-03-01_Commodities_trading_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_item_link","value":"'https://capital.com/trade-copper'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"a62a73b95c28818e","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/108//#testresult/a62a73b95c28818e","status":"passed","time":{"start":1711757989685,"stop":1711757995206,"duration":5521}}]},"tags":["test_08","us_11_02_03"]},"source":"720e1e29cbf68d85.json","parameterValues":["'ae'","'https://capital.com/trade-copper'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'Auth'","'Chrome'"]}