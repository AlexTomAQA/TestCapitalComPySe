{"uid":"6a926ea610c379b3","name":"TC_11.02.05.00_04 | Testing button [Start trading] in the Content block. Bid:11.02.05.00_04-en.ae.NoReg","fullName":"tests.US_11_Education.US_11-02-05_Cryptocurrency_trading.us_11-02-05-00_cryptocurrency_trading_test.TestCryptocurrencyTrading#test_04_content_block_start_trading_button","historyId":"0b14de1cd3ef98c790d877cae4eaccc8","time":{"start":1711782664386,"stop":1711782665630,"duration":1244},"description":"\n        Check: Button [Start trading] in the Content block\n        Language: All, except AR, EL, HU, NL.\n        License: All, except FCA (GB country)\n        ","descriptionHtml":"<pre><code>    Check: Button [Start trading] in the Content block\n    Language: All, except AR, EL, HU, NL.\n    License: All, except FCA (GB country)\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=123.0.6312.58)\nStacktrace:\n#0 0x55bccb5088a3 <unknown>\n#1 0x55bccb1fe717 <unknown>\n#2 0x55bccb1e5adf <unknown>\n#3 0x55bccb1e455b <unknown>\n#4 0x55bccb1e4a2a <unknown>\n#5 0x55bccb20124e <unknown>\n#6 0x55bccb28a7c5 <unknown>\n#7 0x55bccb26b5a2 <unknown>\n#8 0x55bccb289c19 <unknown>\n#9 0x55bccb26b343 <unknown>\n#10 0x55bccb23c593 <unknown>\n#11 0x55bccb23cf5e <unknown>\n#12 0x55bccb4cc88b <unknown>\n#13 0x55bccb4d07e5 <unknown>\n#14 0x55bccb4ba5b1 <unknown>\n#15 0x55bccb4d1372 <unknown>\n#16 0x55bccb49f8bf <unknown>\n#17 0x55bccb4f7768 <unknown>\n#18 0x55bccb4f793b <unknown>\n#19 0x55bccb5079f4 <unknown>\n#20 0x7f4e2a294ac3 <unknown>","statusTrace":"self = <us_11-02-05-00_cryptocurrency_trading_test.TestCryptocurrencyTrading object at 0x7f0105a75190>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"08460217daf77448475c026a8cbf979f\")>\ncur_language = '', cur_country = 'ae', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Test button [Start trading] in the Content block\")\n    @pytest.mark.test_04\n    def test_04_content_block_start_trading_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Button [Start trading] in the Content block\n        Language: All, except AR, EL, HU, NL.\n        License: All, except FCA (GB country)\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"11.02.05\", \"Education > Menu item [Cryptocurrency trading]\",\n            \".00_04\", \"Testing button [Start trading] in the Content block\")\n    \n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n        Common().check_language_in_list_and_skip_if_present(cur_language, [\"ar\", \"el\", \"hu\", \"nl\"])\n    \n        page_conditions = Conditions(d, \"\")\n>       main_page_link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_11_Education/US_11-02-05_Cryptocurrency_trading/us_11-02-05-00_cryptocurrency_trading_test.py:150: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions.py:104: in preconditions\n    self.open_page()\npages/base_page.py:149: in open_page\n    self.driver.get(link)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0105eb96a0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"invalid argument\\\\n  (Session info: chrome=1...\\\\n#18 0x55bccb4f793b \\\\u003Cunknown>\\\\n#19 0x55bccb5079f4 \\\\u003Cunknown>\\\\n#20 0x7f4e2a294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\nE         (Session info: chrome=123.0.6312.58)\nE       Stacktrace:\nE       #0 0x55bccb5088a3 <unknown>\nE       #1 0x55bccb1fe717 <unknown>\nE       #2 0x55bccb1e5adf <unknown>\nE       #3 0x55bccb1e455b <unknown>\nE       #4 0x55bccb1e4a2a <unknown>\nE       #5 0x55bccb20124e <unknown>\nE       #6 0x55bccb28a7c5 <unknown>\nE       #7 0x55bccb26b5a2 <unknown>\nE       #8 0x55bccb289c19 <unknown>\nE       #9 0x55bccb26b343 <unknown>\nE       #10 0x55bccb23c593 <unknown>\nE       #11 0x55bccb23cf5e <unknown>\nE       #12 0x55bccb4cc88b <unknown>\nE       #13 0x55bccb4d07e5 <unknown>\nE       #14 0x55bccb4ba5b1 <unknown>\nE       #15 0x55bccb4d1372 <unknown>\nE       #16 0x55bccb49f8bf <unknown>\nE       #17 0x55bccb4f7768 <unknown>\nE       #18 0x55bccb4f793b <unknown>\nE       #19 0x55bccb5079f4 <unknown>\nE       #20 0x7f4e2a294ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidArgumentException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1711782490453,"stop":1711782490867,"duration":414},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1711782490868,"stop":1711782490868,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1711782490868,"stop":1711782490868,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1711782490868,"stop":1711782490868,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1711782490868,"stop":1711782490868,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1711782490868,"stop":1711782490868,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1711782660001,"stop":1711782660001,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [Start trading] in the Content block\n        Language: All, except AR, EL, HU, NL.\n        License: All, except FCA (GB country)\n        ","status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=123.0.6312.58)\nStacktrace:\n#0 0x55bccb5088a3 <unknown>\n#1 0x55bccb1fe717 <unknown>\n#2 0x55bccb1e5adf <unknown>\n#3 0x55bccb1e455b <unknown>\n#4 0x55bccb1e4a2a <unknown>\n#5 0x55bccb20124e <unknown>\n#6 0x55bccb28a7c5 <unknown>\n#7 0x55bccb26b5a2 <unknown>\n#8 0x55bccb289c19 <unknown>\n#9 0x55bccb26b343 <unknown>\n#10 0x55bccb23c593 <unknown>\n#11 0x55bccb23cf5e <unknown>\n#12 0x55bccb4cc88b <unknown>\n#13 0x55bccb4d07e5 <unknown>\n#14 0x55bccb4ba5b1 <unknown>\n#15 0x55bccb4d1372 <unknown>\n#16 0x55bccb49f8bf <unknown>\n#17 0x55bccb4f7768 <unknown>\n#18 0x55bccb4f793b <unknown>\n#19 0x55bccb5079f4 <unknown>\n#20 0x7f4e2a294ac3 <unknown>","statusTrace":"self = <us_11-02-05-00_cryptocurrency_trading_test.TestCryptocurrencyTrading object at 0x7f0105a75190>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"08460217daf77448475c026a8cbf979f\")>\ncur_language = '', cur_country = 'ae', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Test button [Start trading] in the Content block\")\n    @pytest.mark.test_04\n    def test_04_content_block_start_trading_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Button [Start trading] in the Content block\n        Language: All, except AR, EL, HU, NL.\n        License: All, except FCA (GB country)\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"11.02.05\", \"Education > Menu item [Cryptocurrency trading]\",\n            \".00_04\", \"Testing button [Start trading] in the Content block\")\n    \n        Common().check_country_in_list_and_skip_if_present(cur_country, [\"gb\"])\n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n        Common().check_language_in_list_and_skip_if_present(cur_language, [\"ar\", \"el\", \"hu\", \"nl\"])\n    \n        page_conditions = Conditions(d, \"\")\n>       main_page_link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_11_Education/US_11-02-05_Cryptocurrency_trading/us_11-02-05-00_cryptocurrency_trading_test.py:150: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions.py:104: in preconditions\n    self.open_page()\npages/base_page.py:149: in open_page\n    self.driver.get(link)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0105eb96a0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"invalid argument\\\\n  (Session info: chrome=1...\\\\n#18 0x55bccb4f793b \\\\u003Cunknown>\\\\n#19 0x55bccb5079f4 \\\\u003Cunknown>\\\\n#20 0x7f4e2a294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\nE         (Session info: chrome=123.0.6312.58)\nE       Stacktrace:\nE       #0 0x55bccb5088a3 <unknown>\nE       #1 0x55bccb1fe717 <unknown>\nE       #2 0x55bccb1e5adf <unknown>\nE       #3 0x55bccb1e455b <unknown>\nE       #4 0x55bccb1e4a2a <unknown>\nE       #5 0x55bccb20124e <unknown>\nE       #6 0x55bccb28a7c5 <unknown>\nE       #7 0x55bccb26b5a2 <unknown>\nE       #8 0x55bccb289c19 <unknown>\nE       #9 0x55bccb26b343 <unknown>\nE       #10 0x55bccb23c593 <unknown>\nE       #11 0x55bccb23cf5e <unknown>\nE       #12 0x55bccb4cc88b <unknown>\nE       #13 0x55bccb4d07e5 <unknown>\nE       #14 0x55bccb4ba5b1 <unknown>\nE       #15 0x55bccb4d1372 <unknown>\nE       #16 0x55bccb49f8bf <unknown>\nE       #17 0x55bccb4f7768 <unknown>\nE       #18 0x55bccb4f793b <unknown>\nE       #19 0x55bccb5079f4 <unknown>\nE       #20 0x7f4e2a294ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidArgumentException","steps":[{"name":"Test button [Start trading] in the Content block","time":{"start":1711782664386,"stop":1711782665629,"duration":1243},"status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=123.0.6312.58)\nStacktrace:\n#0 0x55bccb5088a3 <unknown>\n#1 0x55bccb1fe717 <unknown>\n#2 0x55bccb1e5adf <unknown>\n#3 0x55bccb1e455b <unknown>\n#4 0x55bccb1e4a2a <unknown>\n#5 0x55bccb20124e <unknown>\n#6 0x55bccb28a7c5 <unknown>\n#7 0x55bccb26b5a2 <unknown>\n#8 0x55bccb289c19 <unknown>\n#9 0x55bccb26b343 <unknown>\n#10 0x55bccb23c593 <unknown>\n#11 0x55bccb23cf5e <unknown>\n#12 0x55bccb4cc88b <unknown>\n#13 0x55bccb4d07e5 <unknown>\n#14 0x55bccb4ba5b1 <unknown>\n#15 0x55bccb4d1372 <unknown>\n#16 0x55bccb49f8bf <unknown>\n#17 0x55bccb4f7768 <unknown>\n#18 0x55bccb4f793b <unknown>\n#19 0x55bccb5079f4 <unknown>\n#20 0x7f4e2a294ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_11_Education/US_11-02-05_Cryptocurrency_trading/us_11-02-05-00_cryptocurrency_trading_test.py\", line 150, in test_04_content_block_start_trading_button\n    main_page_link = page_conditions.preconditions(\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions.py\", line 104, in preconditions\n    self.open_page()\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/base_page.py\", line 149, in open_page\n    self.driver.get(link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 356, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"2024-03-30 07:08:10.433705   Start Building dynamic arguments for allure report generation","time":{"start":1711782664386,"stop":1711782664388,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"08460217daf77448475c026a8cbf979f\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoReg'"},{"name":"us","value":"'11.02.05'"},{"name":"desc_us","value":"'Education > Menu item [Cryptocurrency trading]'"},{"name":"num_tc","value":"'.00_04'"},{"name":"desc_tc","value":"'Testing button [Start trading] in the Content block'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-03-30 07:08:10.433282   Set preconditions","time":{"start":1711782664388,"stop":1711782665628,"duration":1240},"status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=123.0.6312.58)\nStacktrace:\n#0 0x55bccb5088a3 <unknown>\n#1 0x55bccb1fe717 <unknown>\n#2 0x55bccb1e5adf <unknown>\n#3 0x55bccb1e455b <unknown>\n#4 0x55bccb1e4a2a <unknown>\n#5 0x55bccb20124e <unknown>\n#6 0x55bccb28a7c5 <unknown>\n#7 0x55bccb26b5a2 <unknown>\n#8 0x55bccb289c19 <unknown>\n#9 0x55bccb26b343 <unknown>\n#10 0x55bccb23c593 <unknown>\n#11 0x55bccb23cf5e <unknown>\n#12 0x55bccb4cc88b <unknown>\n#13 0x55bccb4d07e5 <unknown>\n#14 0x55bccb4ba5b1 <unknown>\n#15 0x55bccb4d1372 <unknown>\n#16 0x55bccb49f8bf <unknown>\n#17 0x55bccb4f7768 <unknown>\n#18 0x55bccb4f793b <unknown>\n#19 0x55bccb5079f4 <unknown>\n#20 0x7f4e2a294ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions.py\", line 104, in preconditions\n    self.open_page()\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/base_page.py\", line 149, in open_page\n    self.driver.get(link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 356, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"2024-03-30 07:08:10.432217   Start Checking Captcha","time":{"start":1711782664595,"stop":1711782665617,"duration":1022},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"08460217daf77448475c026a8cbf979f\")>"},{"name":"host","value":"'https://capital.com/'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"08460217daf77448475c026a8cbf979f\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9c5c877acad65335","name":"Screenshot","source":"9c5c877acad65335.png","type":"image/png","size":92084},{"uid":"475e2104bf877f6","name":"stdout","source":"475e2104bf877f6.txt","type":"text/plain","size":1049}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1711782667275,"stop":1711782667406,"duration":131},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_11.02.05 | Education > Menu item [Cryptocurrency trading]"},{"name":"feature","value":"Language: en"},{"name":"story","value":"Country: ae / Role: NoReg"},{"name":"tag","value":"test_04"},{"name":"tag","value":"us_11_02_05"},{"name":"parentSuite","value":"tests.US_11_Education.US_11-02-05_Cryptocurrency_trading"},{"name":"suite","value":"us_11-02-05-00_cryptocurrency_trading_test"},{"name":"subSuite","value":"TestCryptocurrencyTrading"},{"name":"host","value":"fv-az575-835"},{"name":"thread","value":"38029-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_11_Education.US_11-02-05_Cryptocurrency_trading.us_11-02-05-00_cryptocurrency_trading_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoReg'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"da46f6a4a2d52e56","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/108//#testresult/da46f6a4a2d52e56","status":"passed","time":{"start":1711759369848,"stop":1711759375628,"duration":5780}}]},"tags":["test_04","us_11_02_05"]},"source":"6a926ea610c379b3.json","parameterValues":["'ae'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoReg'","'Chrome'"]}