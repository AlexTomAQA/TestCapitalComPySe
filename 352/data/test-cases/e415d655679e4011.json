{"uid":"e415d655679e4011","name":"TC_55!130 (Lang: de) | Bid:55!130-de.ua.NoReg","fullName":"tests.US_55_ReTestsManual.artemdashkov.US_55-artemdashkov_ReTestsManual_test.TestManualDetected#test_130_link_go_to_all_cryptocurrencies_does_not_open_cfd_page","historyId":"409a5eb66c86e9474edb85f394d63ced","time":{"start":1742337495266,"stop":1742337556309,"duration":61043},"description":"\n        Check:  \"Alle Kryptowährungen\" (Go to all cryptocurrencies) is not implemented as a link\n                when the German language is selected in the block \"Why trade cryptocurrency with Capital.com\"\n        Language: DE.\n        Country: CYSEC, SCB\n        Role: NoReg, Auth, NoAuth,\n        Author: Artem Dashkov\n        ","descriptionHtml":"<pre><code>    Check:  &quot;Alle Kryptowährungen&quot; (Go to all cryptocurrencies) is not implemented as a link\n            when the German language is selected in the block &quot;Why trade cryptocurrency with Capital.com&quot;\n    Language: DE.\n    Country: CYSEC, SCB\n    Role: NoReg, Auth, NoAuth,\n    Author: Artem Dashkov\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 59.618\n  (Session info: chrome=134.0.6998.35)\nStacktrace:\n#0 0x55f8f1d4ca1a <unknown>\n#1 0x55f8f1804390 <unknown>\n#2 0x55f8f17eb747 <unknown>\n#3 0x55f8f17eb449 <unknown>\n#4 0x55f8f17e9159 <unknown>\n#5 0x55f8f17e9b9f <unknown>\n#6 0x55f8f17f92eb <unknown>\n#7 0x55f8f18127ae <unknown>\n#8 0x55f8f1818edb <unknown>\n#9 0x55f8f17ea2b0 <unknown>\n#10 0x55f8f181240d <unknown>\n#11 0x55f8f18a23ba <unknown>\n#12 0x55f8f187b9a3 <unknown>\n#13 0x55f8f184760e <unknown>\n#14 0x55f8f1848dd1 <unknown>\n#15 0x55f8f1d12ddb <unknown>\n#16 0x55f8f1d16cbc <unknown>\n#17 0x55f8f1cfa392 <unknown>\n#18 0x55f8f1d17834 <unknown>\n#19 0x55f8f1cde1ef <unknown>\n#20 0x55f8f1d3b038 <unknown>\n#21 0x55f8f1d3b216 <unknown>\n#22 0x55f8f1d4b896 <unknown>\n#23 0x7fc7dd49caa4 <unknown>\n#24 0x7fc7dd529c3c <unknown>","statusTrace":"self = <US_55-artemdashkov_ReTestsManual_test.TestManualDetected object at 0x7f2d25ade120>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9bc52ad6d73efb2b2b35fe2b63a29c17\")>\ncur_language = 'de', cur_country = 'ua', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test of the link [Go to all cryptocurrencies] \"\n                 \"in menu [Cryptocurrency trading] for Germany language\")\n    @pytest.mark.parametrize('cur_language', [\"de\"])\n    @pytest.mark.parametrize('cur_country', random.sample([\"de\", \"ua\"], 1), )\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_130\n    def test_130_link_go_to_all_cryptocurrencies_does_not_open_cfd_page(\n            self, worker_id, d, cur_language, cur_country, cur_role,\n            cur_login, cur_password):\n        \"\"\"\n        Check:  \"Alle Kryptowährungen\" (Go to all cryptocurrencies) is not implemented as a link\n                when the German language is selected in the block \"Why trade cryptocurrency with Capital.com\"\n        Language: DE.\n        Country: CYSEC, SCB\n        Role: NoReg, Auth, NoAuth,\n        Author: Artem Dashkov\n        \"\"\"\n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"130\",\n            \"Testing link [Go to all cryptocurrencies] in menu [Cryptocurrency trading]\",\n            False, False\n        )\n    \n        # Arrange\n>       cur_item_link = apply_preconditions_to_link(d, cur_language, cur_country,\n                                           cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py:490: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:73: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:412: in preconditions\n    self.open_page()\npages/base_page.py:151: in open_page\n    self.driver.get(link)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:389: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2d25c59b50>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 5...\\\\n#22 0x55f8f1d4b896 \\\\u003Cunknown>\\\\n#23 0x7fc7dd49caa4 \\\\u003Cunknown>\\\\n#24 0x7fc7dd529c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 59.618\nE         (Session info: chrome=134.0.6998.35)\nE       Stacktrace:\nE       #0 0x55f8f1d4ca1a <unknown>\nE       #1 0x55f8f1804390 <unknown>\nE       #2 0x55f8f17eb747 <unknown>\nE       #3 0x55f8f17eb449 <unknown>\nE       #4 0x55f8f17e9159 <unknown>\nE       #5 0x55f8f17e9b9f <unknown>\nE       #6 0x55f8f17f92eb <unknown>\nE       #7 0x55f8f18127ae <unknown>\nE       #8 0x55f8f1818edb <unknown>\nE       #9 0x55f8f17ea2b0 <unknown>\nE       #10 0x55f8f181240d <unknown>\nE       #11 0x55f8f18a23ba <unknown>\nE       #12 0x55f8f187b9a3 <unknown>\nE       #13 0x55f8f184760e <unknown>\nE       #14 0x55f8f1848dd1 <unknown>\nE       #15 0x55f8f1d12ddb <unknown>\nE       #16 0x55f8f1d16cbc <unknown>\nE       #17 0x55f8f1cfa392 <unknown>\nE       #18 0x55f8f1d17834 <unknown>\nE       #19 0x55f8f1cde1ef <unknown>\nE       #20 0x55f8f1d3b038 <unknown>\nE       #21 0x55f8f1d3b216 <unknown>\nE       #22 0x55f8f1d4b896 <unknown>\nE       #23 0x7fc7dd49caa4 <unknown>\nE       #24 0x7fc7dd529c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1742337205095,"stop":1742337205843,"duration":748},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1742337205843,"stop":1742337205843,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1742337205843,"stop":1742337205843,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1742337205844,"stop":1742337205844,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check:  \"Alle Kryptowährungen\" (Go to all cryptocurrencies) is not implemented as a link\n                when the German language is selected in the block \"Why trade cryptocurrency with Capital.com\"\n        Language: DE.\n        Country: CYSEC, SCB\n        Role: NoReg, Auth, NoAuth,\n        Author: Artem Dashkov\n        ","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 59.618\n  (Session info: chrome=134.0.6998.35)\nStacktrace:\n#0 0x55f8f1d4ca1a <unknown>\n#1 0x55f8f1804390 <unknown>\n#2 0x55f8f17eb747 <unknown>\n#3 0x55f8f17eb449 <unknown>\n#4 0x55f8f17e9159 <unknown>\n#5 0x55f8f17e9b9f <unknown>\n#6 0x55f8f17f92eb <unknown>\n#7 0x55f8f18127ae <unknown>\n#8 0x55f8f1818edb <unknown>\n#9 0x55f8f17ea2b0 <unknown>\n#10 0x55f8f181240d <unknown>\n#11 0x55f8f18a23ba <unknown>\n#12 0x55f8f187b9a3 <unknown>\n#13 0x55f8f184760e <unknown>\n#14 0x55f8f1848dd1 <unknown>\n#15 0x55f8f1d12ddb <unknown>\n#16 0x55f8f1d16cbc <unknown>\n#17 0x55f8f1cfa392 <unknown>\n#18 0x55f8f1d17834 <unknown>\n#19 0x55f8f1cde1ef <unknown>\n#20 0x55f8f1d3b038 <unknown>\n#21 0x55f8f1d3b216 <unknown>\n#22 0x55f8f1d4b896 <unknown>\n#23 0x7fc7dd49caa4 <unknown>\n#24 0x7fc7dd529c3c <unknown>","statusTrace":"self = <US_55-artemdashkov_ReTestsManual_test.TestManualDetected object at 0x7f2d25ade120>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9bc52ad6d73efb2b2b35fe2b63a29c17\")>\ncur_language = 'de', cur_country = 'ua', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test of the link [Go to all cryptocurrencies] \"\n                 \"in menu [Cryptocurrency trading] for Germany language\")\n    @pytest.mark.parametrize('cur_language', [\"de\"])\n    @pytest.mark.parametrize('cur_country', random.sample([\"de\", \"ua\"], 1), )\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_130\n    def test_130_link_go_to_all_cryptocurrencies_does_not_open_cfd_page(\n            self, worker_id, d, cur_language, cur_country, cur_role,\n            cur_login, cur_password):\n        \"\"\"\n        Check:  \"Alle Kryptowährungen\" (Go to all cryptocurrencies) is not implemented as a link\n                when the German language is selected in the block \"Why trade cryptocurrency with Capital.com\"\n        Language: DE.\n        Country: CYSEC, SCB\n        Role: NoReg, Auth, NoAuth,\n        Author: Artem Dashkov\n        \"\"\"\n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"130\",\n            \"Testing link [Go to all cryptocurrencies] in menu [Cryptocurrency trading]\",\n            False, False\n        )\n    \n        # Arrange\n>       cur_item_link = apply_preconditions_to_link(d, cur_language, cur_country,\n                                           cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py:490: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:73: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:412: in preconditions\n    self.open_page()\npages/base_page.py:151: in open_page\n    self.driver.get(link)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:389: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2d25c59b50>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 5...\\\\n#22 0x55f8f1d4b896 \\\\u003Cunknown>\\\\n#23 0x7fc7dd49caa4 \\\\u003Cunknown>\\\\n#24 0x7fc7dd529c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 59.618\nE         (Session info: chrome=134.0.6998.35)\nE       Stacktrace:\nE       #0 0x55f8f1d4ca1a <unknown>\nE       #1 0x55f8f1804390 <unknown>\nE       #2 0x55f8f17eb747 <unknown>\nE       #3 0x55f8f17eb449 <unknown>\nE       #4 0x55f8f17e9159 <unknown>\nE       #5 0x55f8f17e9b9f <unknown>\nE       #6 0x55f8f17f92eb <unknown>\nE       #7 0x55f8f18127ae <unknown>\nE       #8 0x55f8f1818edb <unknown>\nE       #9 0x55f8f17ea2b0 <unknown>\nE       #10 0x55f8f181240d <unknown>\nE       #11 0x55f8f18a23ba <unknown>\nE       #12 0x55f8f187b9a3 <unknown>\nE       #13 0x55f8f184760e <unknown>\nE       #14 0x55f8f1848dd1 <unknown>\nE       #15 0x55f8f1d12ddb <unknown>\nE       #16 0x55f8f1d16cbc <unknown>\nE       #17 0x55f8f1cfa392 <unknown>\nE       #18 0x55f8f1d17834 <unknown>\nE       #19 0x55f8f1cde1ef <unknown>\nE       #20 0x55f8f1d3b038 <unknown>\nE       #21 0x55f8f1d3b216 <unknown>\nE       #22 0x55f8f1d4b896 <unknown>\nE       #23 0x7fc7dd49caa4 <unknown>\nE       #24 0x7fc7dd529c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","steps":[{"name":"Start test of the link [Go to all cryptocurrencies] in menu [Cryptocurrency trading] for Germany language","time":{"start":1742337495267,"stop":1742337556308,"duration":61041},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 59.618\n  (Session info: chrome=134.0.6998.35)\nStacktrace:\n#0 0x55f8f1d4ca1a <unknown>\n#1 0x55f8f1804390 <unknown>\n#2 0x55f8f17eb747 <unknown>\n#3 0x55f8f17eb449 <unknown>\n#4 0x55f8f17e9159 <unknown>\n#5 0x55f8f17e9b9f <unknown>\n#6 0x55f8f17f92eb <unknown>\n#7 0x55f8f18127ae <unknown>\n#8 0x55f8f1818edb <unknown>\n#9 0x55f8f17ea2b0 <unknown>\n#10 0x55f8f181240d <unknown>\n#11 0x55f8f18a23ba <unknown>\n#12 0x55f8f187b9a3 <unknown>\n#13 0x55f8f184760e <unknown>\n#14 0x55f8f1848dd1 <unknown>\n#15 0x55f8f1d12ddb <unknown>\n#16 0x55f8f1d16cbc <unknown>\n#17 0x55f8f1cfa392 <unknown>\n#18 0x55f8f1d17834 <unknown>\n#19 0x55f8f1cde1ef <unknown>\n#20 0x55f8f1d3b038 <unknown>\n#21 0x55f8f1d3b216 <unknown>\n#22 0x55f8f1d4b896 <unknown>\n#23 0x7fc7dd49caa4 <unknown>\n#24 0x7fc7dd529c3c <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py\", line 490, in test_130_link_go_to_all_cryptocurrencies_does_not_open_cfd_page\n    cur_item_link = apply_preconditions_to_link(d, cur_language, cur_country,\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 73, in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL, '', cur_language, cur_country, cur_role,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 412, in preconditions\n    self.open_page()\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/base_page.py\", line 151, in open_page\n    self.driver.get(link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 389, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 380, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1742337495267,"stop":1742337495269,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"9bc52ad6d73efb2b2b35fe2b63a29c17\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'de'"},{"name":"cur_country","value":"'ua'"},{"name":"cur_role","value":"'NoReg'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'130'"},{"name":"desc_tc","value":"'Testing link [Go to all cryptocurrencies] in menu [Cryptocurrency trading]'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Preconditions","time":{"start":1742337495269,"stop":1742337556307,"duration":61038},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 59.618\n  (Session info: chrome=134.0.6998.35)\nStacktrace:\n#0 0x55f8f1d4ca1a <unknown>\n#1 0x55f8f1804390 <unknown>\n#2 0x55f8f17eb747 <unknown>\n#3 0x55f8f17eb449 <unknown>\n#4 0x55f8f17e9159 <unknown>\n#5 0x55f8f17e9b9f <unknown>\n#6 0x55f8f17f92eb <unknown>\n#7 0x55f8f18127ae <unknown>\n#8 0x55f8f1818edb <unknown>\n#9 0x55f8f17ea2b0 <unknown>\n#10 0x55f8f181240d <unknown>\n#11 0x55f8f18a23ba <unknown>\n#12 0x55f8f187b9a3 <unknown>\n#13 0x55f8f184760e <unknown>\n#14 0x55f8f1848dd1 <unknown>\n#15 0x55f8f1d12ddb <unknown>\n#16 0x55f8f1d16cbc <unknown>\n#17 0x55f8f1cfa392 <unknown>\n#18 0x55f8f1d17834 <unknown>\n#19 0x55f8f1cde1ef <unknown>\n#20 0x55f8f1d3b038 <unknown>\n#21 0x55f8f1d3b216 <unknown>\n#22 0x55f8f1d4b896 <unknown>\n#23 0x7fc7dd49caa4 <unknown>\n#24 0x7fc7dd529c3c <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 412, in preconditions\n    self.open_page()\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/base_page.py\", line 151, in open_page\n    self.driver.get(link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 389, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 380, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"9bc52ad6d73efb2b2b35fe2b63a29c17\")>"},{"name":"host","value":"'https://capital.com/'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'de'"},{"name":"cur_country","value":"'ua'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"9bc52ad6d73efb2b2b35fe2b63a29c17\")>"},{"name":"cur_language","value":"'de'"},{"name":"cur_country","value":"'ua'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"7a862425b23c55dc","name":"Screenshot","source":"7a862425b23c55dc.png","type":"image/png","size":294390},{"uid":"95fde2d3992141f2","name":"stdout","source":"95fde2d3992141f2.txt","type":"text/plain","size":584}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1742338797220,"stop":1742338797415,"duration":195},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!130 | Testing link [Go to all cryptocurrencies] in menu [Cryptocurrency trading]"},{"name":"feature","value":"Role: NoReg"},{"name":"story","value":"Country: ua"},{"name":"tag","value":"bug_130"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.artemdashkov"},{"name":"suite","value":"US_55-artemdashkov_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetected"},{"name":"host","value":"fv-az1915-900"},{"name":"thread","value":"5496-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.artemdashkov.US_55-artemdashkov_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ua'"},{"name":"cur_language","value":"'de'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoReg'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"47f48cf602b5b16f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/351//#testresult/47f48cf602b5b16f","status":"failed","statusDetails":"Failed: Bug № ??? Education menu not present in DOM for 'de' language","time":{"start":1742252405450,"stop":1742252442404,"duration":36954}},{"uid":"289852afb95f3c06","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/350//#testresult/289852afb95f3c06","status":"failed","statusDetails":"Failed: Bug № ??? Education menu not present in DOM for 'de' language","time":{"start":1742166033830,"stop":1742166074719,"duration":40889}},{"uid":"65d2723c28aa47f4","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/346//#testresult/65d2723c28aa47f4","status":"failed","statusDetails":"Failed: CFD Instruments is NOT present on this page. Current page is not Cryptocurrencies page.","time":{"start":1741819660569,"stop":1741819704156,"duration":43587}},{"uid":"ecc655984fcd3e9","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/344//#testresult/ecc655984fcd3e9","status":"failed","statusDetails":"Failed: CFD Instruments is NOT present on this page. Current page is not Cryptocurrencies page.","time":{"start":1741646871980,"stop":1741646916451,"duration":44471}},{"uid":"49b59149bcf22991","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/343//#testresult/49b59149bcf22991","status":"failed","statusDetails":"Failed: CFD Instruments is NOT present on this page. Current page is not Cryptocurrencies page.","time":{"start":1741561106085,"stop":1741561149872,"duration":43787}}]},"tags":["bug_130","us_55"]},"source":"e415d655679e4011.json","parameterValues":["'ua'","'de'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoReg'","'Chrome'"]}