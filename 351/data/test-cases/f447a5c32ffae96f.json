{"uid":"f447a5c32ffae96f","name":"TC_55!077b (Lang: pl) | Bid:55!077b-pl.ua.Auth","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_077b","historyId":"4b49efa664d5a1daac8fe6e55aafd3f3","time":{"start":1742257299039,"stop":1742257361571,"duration":62532},"description":"\n        Check: presence of the sidebar \"Crypto Trading Guide\" on the \"Bitcoin Gold\" page.\n        Language: EN, DE, ZH, RU, ES,IT, PL\n        License: SCB\n        Author: Kasila\n        ","descriptionHtml":"<pre><code>    Check: presence of the sidebar &quot;Crypto Trading Guide&quot; on the &quot;Bitcoin Gold&quot; page.\n    Language: EN, DE, ZH, RU, ES,IT, PL\n    License: SCB\n    Author: Kasila\n</code></pre>\n","status":"failed","statusMessage":"Failed: #Bug # 55!077b \nExpected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\nActual result: Sidebar is absent on the 'Bitcoin Gold' page","statusTrace":"self = <pages.BugsManual.bug_077.Sidebar object at 0x7f2588cad280>\nsidebar_item = 'Bitcoin Gold'\n\n    def assert_b(self, sidebar_item):\n        print(f\"\\n{datetime.now()}   2. Assert\")\n        try:\n>           sidebar = self.driver.find_element(By.CSS_SELECTOR, 'div.side-nav')\n\npages/BugsManual/bug_077.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2587f7f050>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#17 0x55bced29f896 \\\\u003Cunknown>\\\\n#18 0x7f827f49caa4 \\\\u003Cunknown>\\\\n#19 0x7f827f529c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div.side-nav\"}\nE         (Session info: chrome=134.0.6998.35); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55bced2a0a1a <unknown>\nE       #1 0x55bcecd58390 <unknown>\nE       #2 0x55bcecda9c85 <unknown>\nE       #3 0x55bcecda9eb1 <unknown>\nE       #4 0x55bcecdf8d64 <unknown>\nE       #5 0x55bcecdcfbfd <unknown>\nE       #6 0x55bcecdf607b <unknown>\nE       #7 0x55bcecdcf9a3 <unknown>\nE       #8 0x55bcecd9b60e <unknown>\nE       #9 0x55bcecd9cdd1 <unknown>\nE       #10 0x55bced266ddb <unknown>\nE       #11 0x55bced26acbc <unknown>\nE       #12 0x55bced24e392 <unknown>\nE       #13 0x55bced26b834 <unknown>\nE       #14 0x55bced2321ef <unknown>\nE       #15 0x55bced28f038 <unknown>\nE       #16 0x55bced28f216 <unknown>\nE       #17 0x55bced29f896 <unknown>\nE       #18 0x7f827f49caa4 <unknown>\nE       #19 0x7f827f529c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7f2588f1d340>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"49932d3ae9e373840af7983086cf6c15\")>\ncur_language_2_rnd_from_7 = 'pl', cur_country = 'ua', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\nsidebar_item = 'Bitcoin Gold'\n\n    @allure.step('Start retest manual AT_55!077b of the presence of the \"Crypto trading  guide\" sidebar on '\n                 '\"Bitcoin Gold\" page')\n    @pytest.mark.parametrize('cur_country', ['ua'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('sidebar_item', ['Bitcoin Gold'])\n    @pytest.mark.bug_077b\n    def test_077b(self, worker_id, d, cur_language_2_rnd_from_7, cur_country, cur_role, cur_login, cur_password,\n                  sidebar_item):\n        \"\"\"\n        Check: presence of the sidebar \"Crypto Trading Guide\" on the \"Bitcoin Gold\" page.\n        Language: EN, DE, ZH, RU, ES,IT, PL\n        License: SCB\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language_2_rnd_from_7, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"077b\", 'Sidebar \" Crypto trading  guide\" is absent on page \"Bitcoin Gold\"'\n        )\n    \n        link = apply_preconditions_to_link(d, cur_language_2_rnd_from_7, cur_country, cur_role, cur_login, cur_password)\n    \n        menu = MenuSection(d, link)\n        cur_item_link = menu.open_education_cryptocurrency_trading_menu(d, cur_language_2_rnd_from_7, cur_country,\n                                                                        link)\n    \n        test_element = Sidebar(d, cur_item_link, bid)\n        match cur_language_2_rnd_from_7:\n            case \"\" | \"de\" | \"zh\":\n                test_element.sidebar_en_de_zh(d, cur_item_link, sidebar_item)\n            case \"ru\" | \"es\" | \"it\" | \"pl\":\n                test_element.sidebar_ru_es_it_pl(d, cur_item_link, sidebar_item)\n>       test_element.assert_b(sidebar_item)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:169: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_077.py:126: in assert_b\n    Common.pytest_fail(f\"#Bug # 55!077b \"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = \"#Bug # 55!077b \\nExpected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\\nActual result: Sidebar is absent on the 'Bitcoin Gold' page\"\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: #Bug # 55!077b \nE    Expected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\nE    Actual result: Sidebar is absent on the 'Bitcoin Gold' page\n\npages/common.py:235: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1742256686251,"stop":1742256687305,"duration":1054},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1742256687306,"stop":1742256687306,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1742256687306,"stop":1742256687306,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1742256687306,"stop":1742256687306,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language_2_rnd_from_7","time":{"start":1742257299038,"stop":1742257299038,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: presence of the sidebar \"Crypto Trading Guide\" on the \"Bitcoin Gold\" page.\n        Language: EN, DE, ZH, RU, ES,IT, PL\n        License: SCB\n        Author: Kasila\n        ","status":"failed","statusMessage":"Failed: #Bug # 55!077b \nExpected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\nActual result: Sidebar is absent on the 'Bitcoin Gold' page","statusTrace":"self = <pages.BugsManual.bug_077.Sidebar object at 0x7f2588cad280>\nsidebar_item = 'Bitcoin Gold'\n\n    def assert_b(self, sidebar_item):\n        print(f\"\\n{datetime.now()}   2. Assert\")\n        try:\n>           sidebar = self.driver.find_element(By.CSS_SELECTOR, 'div.side-nav')\n\npages/BugsManual/bug_077.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2587f7f050>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#17 0x55bced29f896 \\\\u003Cunknown>\\\\n#18 0x7f827f49caa4 \\\\u003Cunknown>\\\\n#19 0x7f827f529c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div.side-nav\"}\nE         (Session info: chrome=134.0.6998.35); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55bced2a0a1a <unknown>\nE       #1 0x55bcecd58390 <unknown>\nE       #2 0x55bcecda9c85 <unknown>\nE       #3 0x55bcecda9eb1 <unknown>\nE       #4 0x55bcecdf8d64 <unknown>\nE       #5 0x55bcecdcfbfd <unknown>\nE       #6 0x55bcecdf607b <unknown>\nE       #7 0x55bcecdcf9a3 <unknown>\nE       #8 0x55bcecd9b60e <unknown>\nE       #9 0x55bcecd9cdd1 <unknown>\nE       #10 0x55bced266ddb <unknown>\nE       #11 0x55bced26acbc <unknown>\nE       #12 0x55bced24e392 <unknown>\nE       #13 0x55bced26b834 <unknown>\nE       #14 0x55bced2321ef <unknown>\nE       #15 0x55bced28f038 <unknown>\nE       #16 0x55bced28f216 <unknown>\nE       #17 0x55bced29f896 <unknown>\nE       #18 0x7f827f49caa4 <unknown>\nE       #19 0x7f827f529c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7f2588f1d340>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"49932d3ae9e373840af7983086cf6c15\")>\ncur_language_2_rnd_from_7 = 'pl', cur_country = 'ua', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\nsidebar_item = 'Bitcoin Gold'\n\n    @allure.step('Start retest manual AT_55!077b of the presence of the \"Crypto trading  guide\" sidebar on '\n                 '\"Bitcoin Gold\" page')\n    @pytest.mark.parametrize('cur_country', ['ua'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('sidebar_item', ['Bitcoin Gold'])\n    @pytest.mark.bug_077b\n    def test_077b(self, worker_id, d, cur_language_2_rnd_from_7, cur_country, cur_role, cur_login, cur_password,\n                  sidebar_item):\n        \"\"\"\n        Check: presence of the sidebar \"Crypto Trading Guide\" on the \"Bitcoin Gold\" page.\n        Language: EN, DE, ZH, RU, ES,IT, PL\n        License: SCB\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language_2_rnd_from_7, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"077b\", 'Sidebar \" Crypto trading  guide\" is absent on page \"Bitcoin Gold\"'\n        )\n    \n        link = apply_preconditions_to_link(d, cur_language_2_rnd_from_7, cur_country, cur_role, cur_login, cur_password)\n    \n        menu = MenuSection(d, link)\n        cur_item_link = menu.open_education_cryptocurrency_trading_menu(d, cur_language_2_rnd_from_7, cur_country,\n                                                                        link)\n    \n        test_element = Sidebar(d, cur_item_link, bid)\n        match cur_language_2_rnd_from_7:\n            case \"\" | \"de\" | \"zh\":\n                test_element.sidebar_en_de_zh(d, cur_item_link, sidebar_item)\n            case \"ru\" | \"es\" | \"it\" | \"pl\":\n                test_element.sidebar_ru_es_it_pl(d, cur_item_link, sidebar_item)\n>       test_element.assert_b(sidebar_item)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:169: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_077.py:126: in assert_b\n    Common.pytest_fail(f\"#Bug # 55!077b \"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = \"#Bug # 55!077b \\nExpected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\\nActual result: Sidebar is absent on the 'Bitcoin Gold' page\"\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: #Bug # 55!077b \nE    Expected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\nE    Actual result: Sidebar is absent on the 'Bitcoin Gold' page\n\npages/common.py:235: Failed","steps":[{"name":"Start retest manual AT_55!077b of the presence of the \"Crypto trading  guide\" sidebar on \"Bitcoin Gold\" page","time":{"start":1742257299039,"stop":1742257361571,"duration":62532},"status":"failed","statusMessage":"Failed: #Bug # 55!077b \nExpected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\nActual result: Sidebar is absent on the 'Bitcoin Gold' page\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py\", line 169, in test_077b\n    test_element.assert_b(sidebar_item)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_077.py\", line 126, in assert_b\n    Common.pytest_fail(f\"#Bug # 55!077b \"\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/common.py\", line 235, in pytest_fail\n    pytest.fail(msg)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1742257299039,"stop":1742257299041,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"49932d3ae9e373840af7983086cf6c15\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'pl'"},{"name":"cur_country","value":"'ua'"},{"name":"cur_role","value":"'Auth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'077b'"},{"name":"desc_tc","value":"'Sidebar \" Crypto trading  guide\" is absent on page \"Bitcoin Gold\"'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Preconditions","time":{"start":1742257299041,"stop":1742257350373,"duration":51332},"status":"passed","steps":[{"name":"2025-03-18 00:11:26.037829   Start Checking Captcha","time":{"start":1742257302102,"stop":1742257307132,"duration":5030},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"2025-03-18 00:11:26.037829   Start Checking Captcha","time":{"start":1742257310998,"stop":1742257316049,"duration":5051},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Open 'Language and Country' menu section.","time":{"start":1742257316052,"stop":1742257317361,"duration":1309},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"test_language","value":"'pl'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Set country (licence)","time":{"start":1742257317361,"stop":1742257320210,"duration":2849},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_country","value":"'ua'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2025-03-18 00:11:26.037829   Start Checking Captcha","time":{"start":1742257320210,"stop":1742257325256,"duration":5046},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Open 'Language and Country' menu section.","time":{"start":1742257325259,"stop":1742257326577,"duration":1318},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"test_language","value":"'pl'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Set language","time":{"start":1742257326577,"stop":1742257340711,"duration":14134},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_language","value":"'pl'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2025-03-18 00:11:26.037829   Start Checking Captcha","time":{"start":1742257340712,"stop":1742257345754,"duration":5042},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Authorization","time":{"start":1742257345758,"stop":1742257350368,"duration":4610},"status":"passed","steps":[{"name":"Click [Log In] button","time":{"start":1742257345761,"stop":1742257345863,"duration":102},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check that form [Login] is opened","time":{"start":1742257345863,"stop":1742257346179,"duration":316},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"49932d3ae9e373840af7983086cf6c15\")>"},{"name":"link","value":"'https://capital.com/pl'"},{"name":"cur_language","value":"'pl'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"49932d3ae9e373840af7983086cf6c15\")>"},{"name":"host","value":"'https://capital.com/'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'pl'"},{"name":"cur_country","value":"'ua'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":11,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Education\" menu, \"Cryptocurrency trading\" submenu","time":{"start":1742257350374,"stop":1742257354661,"duration":4287},"status":"passed","steps":[{"name":"Focus moved to 'Education' menu","time":{"start":1742257350382,"stop":1742257352171,"duration":1789},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"49932d3ae9e373840af7983086cf6c15\")>"},{"name":"test_language","value":"'pl'"},{"name":"test_country","value":"'ua'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Focus move to 'Cryptocurrency trading' submenu and click","time":{"start":1742257352171,"stop":1742257354379,"duration":2208},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"49932d3ae9e373840af7983086cf6c15\")>"},{"name":"test_language","value":"'pl'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"49932d3ae9e373840af7983086cf6c15\")>"},{"name":"cur_language","value":"'pl'"},{"name":"cur_country","value":"'ua'"},{"name":"link","value":"'https://capital.com/pl'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"49932d3ae9e373840af7983086cf6c15\")>"},{"name":"cur_language_2_rnd_from_7","value":"'pl'"},{"name":"cur_country","value":"'ua'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"sidebar_item","value":"'Bitcoin Gold'"}],"shouldDisplayMessage":true,"stepsCount":16,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"b7515f7678e61d41","name":"Screenshot","source":"b7515f7678e61d41.png","type":"image/png","size":215978},{"uid":"8eb601f01370463a","name":"stdout","source":"8eb601f01370463a.txt","type":"text/plain","size":6768}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":17,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1742258460223,"stop":1742258460557,"duration":334},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!077b | Sidebar \" Crypto trading  guide\" is absent on page \"Bitcoin Gold\""},{"name":"feature","value":"Role: Auth"},{"name":"story","value":"Country: ua"},{"name":"tag","value":"bug_077b"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az1391-351"},{"name":"thread","value":"30964-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ua'"},{"name":"cur_language_2_rnd_from_7","value":"'pl'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"},{"name":"d","value":"'Chrome'"},{"name":"sidebar_item","value":"'Bitcoin Gold'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"c001b2b3e84b0375","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/345//#testresult/c001b2b3e84b0375","status":"failed","statusDetails":"Failed: #Bug # 55!077b \nExpected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\nActual result: Sidebar is absent on the 'Bitcoin Gold' page","time":{"start":1741747921790,"stop":1741747972371,"duration":50581}},{"uid":"84ae46a678a83b97","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/342//#testresult/84ae46a678a83b97","status":"failed","statusDetails":"Failed: #Bug # 55!077b \nExpected result: Sidebar 'Crypto trading guide' is on the 'Bitcoin Gold' page\nActual result: Sidebar is absent on the 'Bitcoin Gold' page","time":{"start":1741481942853,"stop":1741481990975,"duration":48122}}]},"tags":["us_55","bug_077b"]},"source":"f447a5c32ffae96f.json","parameterValues":["'ua'","'pl'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'Auth'","'Chrome'","'Bitcoin Gold'"]}