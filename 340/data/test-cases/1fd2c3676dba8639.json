{"uid":"1fd2c3676dba8639","name":"TC_55!407 (Lang: en) | Bid:55!407-en.ae.Auth","fullName":"tests.US_55_ReTestsManual.artemdashkov.US_55-artemdashkov_ReTestsManual_test.TestManualDetected#test_407_articles_all_authors_present_on_the_daniela_hathorn_page","historyId":"0b3bc6964f13d0d36ac4931d5caaae03","time":{"start":1741302852703,"stop":1741302879100,"duration":26397},"description":"\n        Check:  Menu section [Markets] > Menu item [Market analysis] >\n                Find and click article of 'Daniela Hathorn' author >\n                Click the link 'Daniela Hathorn' >\n                Click any article on the 'Daniela Hathorn' page\n        Language: EN\n        License/Country: SCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        ","descriptionHtml":"<pre><code>    Check:  Menu section [Markets] &gt; Menu item [Market analysis] &gt;\n            Find and click article of 'Daniela Hathorn' author &gt;\n            Click the link 'Daniela Hathorn' &gt;\n            Click any article on the 'Daniela Hathorn' page\n    Language: EN\n    License/Country: SCA\n    Role: NoReg, NoAuth, Auth\n    Author: Artem Dashkov\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team","statusTrace":"self = <US_55-artemdashkov_ReTestsManual_test.TestManualDetected object at 0x7f67973d5910>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6644dea73fce4c87a2d0dbdff22fa81d\")>\ncur_language = '', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test authors of articles on the 'Daniela Hathorn' page\")\n    @pytest.mark.parametrize('cur_language', [\"\"])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_407\n    def test_407_articles_all_authors_present_on_the_daniela_hathorn_page(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check:  Menu section [Markets] > Menu item [Market analysis] >\n                Find and click article of 'Daniela Hathorn' author >\n                Click the link 'Daniela Hathorn' >\n                Click any article on the 'Daniela Hathorn' page\n        Language: EN\n        License/Country: SCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"407\",\n            \"Menu section [Markets] > Menu item [Market analysis] > \"\n            \"Find and click article of 'Daniela Hathorn' author > \"\n            \"Click the link 'Daniela Hathorn' > \"\n            \"Click any article on the 'Daniela Hathorn' page\",\n            False, True\n        )\n        # pytest.skip(\"Промежуточная версия\")\n        # Arrange\n        cur_item_link = apply_preconditions_to_link(d, cur_language, cur_country,\n                                                    cur_role, cur_login, cur_password)\n    \n        page_menu = from_markets_menu_open_market_analysis.MenuNew(d, cur_item_link)\n        link = page_menu.from_markets_menu_open_market_analysis(\n            d, cur_language, cur_country, cur_item_link)\n    \n        test_element = BUG_407(d, link, bid)\n        test_element.arrange(d, link)\n    \n        # Act\n        test_element.act(d)\n    \n        # Assert\n>       test_element.assert_(d)\n\ntests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py:1175: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_407.py:205: in assert_\n    Common().pytest_fail(f\"Bug # {BUG_NUMBER} {msg}\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team\n\npages/common.py:235: Failed","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1741300607734,"stop":1741300608564,"duration":830},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1741300608564,"stop":1741300608565,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1741300608565,"stop":1741300608565,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1741300608565,"stop":1741300608565,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check:  Menu section [Markets] > Menu item [Market analysis] >\n                Find and click article of 'Daniela Hathorn' author >\n                Click the link 'Daniela Hathorn' >\n                Click any article on the 'Daniela Hathorn' page\n        Language: EN\n        License/Country: SCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        ","status":"failed","statusMessage":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team","statusTrace":"self = <US_55-artemdashkov_ReTestsManual_test.TestManualDetected object at 0x7f67973d5910>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6644dea73fce4c87a2d0dbdff22fa81d\")>\ncur_language = '', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test authors of articles on the 'Daniela Hathorn' page\")\n    @pytest.mark.parametrize('cur_language', [\"\"])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_407\n    def test_407_articles_all_authors_present_on_the_daniela_hathorn_page(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check:  Menu section [Markets] > Menu item [Market analysis] >\n                Find and click article of 'Daniela Hathorn' author >\n                Click the link 'Daniela Hathorn' >\n                Click any article on the 'Daniela Hathorn' page\n        Language: EN\n        License/Country: SCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"407\",\n            \"Menu section [Markets] > Menu item [Market analysis] > \"\n            \"Find and click article of 'Daniela Hathorn' author > \"\n            \"Click the link 'Daniela Hathorn' > \"\n            \"Click any article on the 'Daniela Hathorn' page\",\n            False, True\n        )\n        # pytest.skip(\"Промежуточная версия\")\n        # Arrange\n        cur_item_link = apply_preconditions_to_link(d, cur_language, cur_country,\n                                                    cur_role, cur_login, cur_password)\n    \n        page_menu = from_markets_menu_open_market_analysis.MenuNew(d, cur_item_link)\n        link = page_menu.from_markets_menu_open_market_analysis(\n            d, cur_language, cur_country, cur_item_link)\n    \n        test_element = BUG_407(d, link, bid)\n        test_element.arrange(d, link)\n    \n        # Act\n        test_element.act(d)\n    \n        # Assert\n>       test_element.assert_(d)\n\ntests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py:1175: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_407.py:205: in assert_\n    Common().pytest_fail(f\"Bug # {BUG_NUMBER} {msg}\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team\n\npages/common.py:235: Failed","steps":[{"name":"Start test authors of articles on the 'Daniela Hathorn' page","time":{"start":1741302852703,"stop":1741302879099,"duration":26396},"status":"failed","statusMessage":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py\", line 1175, in test_407_articles_all_authors_present_on_the_daniela_hathorn_page\n    test_element.assert_(d)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_407.py\", line 205, in assert_\n    Common().pytest_fail(f\"Bug # {BUG_NUMBER} {msg}\")\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/common.py\", line 235, in pytest_fail\n    pytest.fail(msg)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1741302852703,"stop":1741302852705,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"6644dea73fce4c87a2d0dbdff22fa81d\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'407'"},{"name":"desc_tc","value":"'Menu section [Markets] > Menu item [Market analysis] > Find and click article of 'Daniela Hathorn' author > Click the link 'Daniela Hathorn' > Click any article on the 'Daniela Hathorn' page'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"True"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1741302852705,"stop":1741302865318,"duration":12613},"status":"passed","steps":[{"name":"2025-03-06 22:36:47.677794   Start Authorization","time":{"start":1741302859983,"stop":1741302862990,"duration":3007},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"6644dea73fce4c87a2d0dbdff22fa81d\")>"},{"name":"link","value":"'https://capital.com/en-gb'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2025-03-06 22:36:47.677838   Set language and country","time":{"start":1741302862991,"stop":1741302865313,"duration":2322},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"6644dea73fce4c87a2d0dbdff22fa81d\")>"},{"name":"cur_language","value":"'en'"},{"name":"cur_country","value":"'ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"6644dea73fce4c87a2d0dbdff22fa81d\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Markets\" menu, \"Market analysis\" submenu","time":{"start":1741302865318,"stop":1741302873467,"duration":8149},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"6644dea73fce4c87a2d0dbdff22fa81d\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"link","value":"'https://capital.com/en-ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2025-03-06 22:36:47.649420   1. Start Arrange: find target article,choose and click article,find and click link 'Daniela Hathorn', choose any random article","time":{"start":1741302873467,"stop":1741302876595,"duration":3128},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"6644dea73fce4c87a2d0dbdff22fa81d\")>"},{"name":"link","value":"'https://capital.com/en-ae/analysis'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"\n2025-03-06 22:36:47.649446   2. Start Act.","time":{"start":1741302876595,"stop":1741302879098,"duration":2503},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"6644dea73fce4c87a2d0dbdff22fa81d\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2025-03-06 22:36:47.649459   3. Start Assert. Check author of articles","time":{"start":1741302879099,"stop":1741302879099,"duration":0},"status":"failed","statusMessage":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_407.py\", line 205, in assert_\n    Common().pytest_fail(f\"Bug # {BUG_NUMBER} {msg}\")\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/common.py\", line 235, in pytest_fail\n    pytest.fail(msg)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"6644dea73fce4c87a2d0dbdff22fa81d\")>"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"6644dea73fce4c87a2d0dbdff22fa81d\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":8,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9ea3196e0a6765fb","name":"Screenshot","source":"9ea3196e0a6765fb.png","type":"image/png","size":379481},{"uid":"d49c0c1c558cdcc8","name":"stdout","source":"d49c0c1c558cdcc8.txt","type":"text/plain","size":8201}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":9,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1741304419877,"stop":1741304420473,"duration":596},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!407 | Menu section [Markets] > Menu item [Market analysis] > Find and click article of 'Daniela Hathorn' author > Click the link 'Daniela Hathorn' > Click any article on the 'Daniela Hathorn' page"},{"name":"feature","value":"Role: Auth"},{"name":"story","value":"Country: ae"},{"name":"tag","value":"bug_407"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.artemdashkov"},{"name":"suite","value":"US_55-artemdashkov_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetected"},{"name":"host","value":"fv-az1719-655"},{"name":"thread","value":"6360-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.artemdashkov.US_55-artemdashkov_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":90,"broken":0,"skipped":0,"passed":15,"unknown":0,"total":105},"items":[{"uid":"4ee664541c992b11","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/339//#testresult/4ee664541c992b11","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1741217631202,"stop":1741217657572,"duration":26370}},{"uid":"1e426b3af9d34ddb","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/338//#testresult/1e426b3af9d34ddb","status":"passed","time":{"start":1741131204317,"stop":1741131231134,"duration":26817}},{"uid":"d84d1da9b365c8aa","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/337//#testresult/d84d1da9b365c8aa","status":"passed","time":{"start":1741045339140,"stop":1741045363466,"duration":24326}},{"uid":"a79192daa8c88530","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/336//#testresult/a79192daa8c88530","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1740958327413,"stop":1740958353679,"duration":26266}},{"uid":"fe653641aa2f51e8","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/335//#testresult/fe653641aa2f51e8","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1740870610027,"stop":1740870635488,"duration":25461}},{"uid":"616894cd6f8a8a2d","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/334//#testresult/616894cd6f8a8a2d","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1740784440208,"stop":1740784465624,"duration":25416}},{"uid":"d5fce7f7bb19997f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/333//#testresult/d5fce7f7bb19997f","status":"passed","time":{"start":1740698341585,"stop":1740698368200,"duration":26615}},{"uid":"ebdb8809159fd3d9","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/332//#testresult/ebdb8809159fd3d9","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team","time":{"start":1740611857155,"stop":1740611881866,"duration":24711}},{"uid":"871a434b4a21af2b","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/304//#testresult/871a434b4a21af2b","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1738192734979,"stop":1738192758631,"duration":23652}},{"uid":"d2ba7a4510e6d3f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/303//#testresult/d2ba7a4510e6d3f","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1738106214949,"stop":1738106239850,"duration":24901}},{"uid":"cb109493537ed931","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/302//#testresult/cb109493537ed931","status":"passed","time":{"start":1738019677452,"stop":1738019702348,"duration":24896}},{"uid":"a2fd844569e3e3da","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/301//#testresult/a2fd844569e3e3da","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team","time":{"start":1737933706315,"stop":1737933732654,"duration":26339}},{"uid":"e4bf32ec0a2728df","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/300//#testresult/e4bf32ec0a2728df","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1737848063236,"stop":1737848088392,"duration":25156}},{"uid":"f92e6bcdd216a2b7","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/299//#testresult/f92e6bcdd216a2b7","status":"passed","time":{"start":1737760397878,"stop":1737760422859,"duration":24981}},{"uid":"ba185c91d075768f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/298//#testresult/ba185c91d075768f","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1737675303131,"stop":1737675326467,"duration":23336}},{"uid":"a57b854e5ffd866b","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/297//#testresult/a57b854e5ffd866b","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1737588109139,"stop":1737588134586,"duration":25447}},{"uid":"86aa6d0e495516ee","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/296//#testresult/86aa6d0e495516ee","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is capital.com research team","time":{"start":1737502628116,"stop":1737502654400,"duration":26284}},{"uid":"1b3c4012584a85f9","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/295//#testresult/1b3c4012584a85f9","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1737414900127,"stop":1737414925178,"duration":25051}},{"uid":"7289d6fb2e61c6da","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/294//#testresult/7289d6fb2e61c6da","status":"passed","time":{"start":1737329760213,"stop":1737329787372,"duration":27159}},{"uid":"6296df8afcdb588f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/293//#testresult/6296df8afcdb588f","status":"failed","statusDetails":"Failed: Bug # 407 Current author is not Daniela Hathorn. Current author is kyle rodda","time":{"start":1737243299203,"stop":1737243323741,"duration":24538}}]},"tags":["bug_407","us_55"]},"source":"1fd2c3676dba8639.json","parameterValues":["'ae'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'Auth'","'Chrome'"]}