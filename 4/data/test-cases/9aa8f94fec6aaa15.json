{"uid":"9aa8f94fec6aaa15","name":"TC_55_005 | The 'My Account' menu is not displayed when click on the [My Account] button in the Header. Bid:55_005-en.gb.Auth","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_005","historyId":"610c8a09154cbc48b286248b7f73af24","time":{"start":1715971730952,"stop":1715971748441,"duration":17489},"description":"\n         Check: Button [My account] in the Header\n         Language: En. License: FCA.\n         ","descriptionHtml":"<pre><code>     Check: Button [My account] in the Header\n     Language: En. License: FCA.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Bug#005. Expected result: Menu \"My account\" is displayed\nActual result: The trading platform page is opened","statusTrace":"self = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x00000287C1FEF560>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f60ec04e0edd4465bf851bbc552e1a85\")>\ncur_language = '', cur_country = 'gb', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start retest manual TC_55!00_005 of button [My account] in the Header\")\n    @pytest.mark.parametrize('cur_language', [''])\n    @pytest.mark.parametrize('cur_country', ['gb'])\n    @pytest.mark.parametrize('cur_role', [\"Auth\"])\n    @pytest.mark.test_005\n    def test_005(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n         Check: Button [My account] in the Header\n         Language: En. License: FCA.\n         \"\"\"\n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTest Manual Detected Bugs\",\n            \"_005\", \"The 'My Account' menu is not displayed when click on the [My Account] button in the Header\")\n    \n        Common().check_language_in_list_and_skip_if_not_present(cur_language, [''])\n        Common().check_country_in_list_and_skip_if_not_present(cur_country, ['gb'])\n    \n        page_conditions = NewConditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL_NEW, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = MyAccountButton(d, link, bid)\n>       test_element.full_test(d, cur_language, cur_country, cur_role, link)\n\ntests\\US_55_ReTestsManual\\tassobaccato\\US_55-tassobaccato_ReTestsManual_test.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\Elements\\MyAccountButton.py:21: in full_test\n    test_element.assert_my_account_menu(d)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.Elements.AssertClass.AssertClass object at 0x00000287C200EED0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f60ec04e0edd4465bf851bbc552e1a85\")>\n\n    @allure.step('Checking that the \"My account\" menu is opened')\n    def assert_my_account_menu(self, d):\n        account_btn_link = d.current_url\n        if account_btn_link == \"https://capital.com/trading/platform\":\n            print(f\"\\n{datetime.now()}   3. Assert_v0\")\n>           assert False, \\\n                ('Bug#005. '\n                 'Expected result: Menu \"My account\" is displayed'\n                 '\\n'\n                 'Actual result: The trading platform page is opened')\nE           AssertionError: Bug#005. Expected result: Menu \"My account\" is displayed\nE           Actual result: The trading platform page is opened\n\npages\\Elements\\AssertClass.py:246: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1715971728962,"stop":1715971730951,"duration":1989},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1715971730951,"stop":1715971730951,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1715971730951,"stop":1715971730951,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1715971730951,"stop":1715971730951,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n         Check: Button [My account] in the Header\n         Language: En. License: FCA.\n         ","status":"failed","statusMessage":"AssertionError: Bug#005. Expected result: Menu \"My account\" is displayed\nActual result: The trading platform page is opened","statusTrace":"self = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x00000287C1FEF560>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f60ec04e0edd4465bf851bbc552e1a85\")>\ncur_language = '', cur_country = 'gb', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start retest manual TC_55!00_005 of button [My account] in the Header\")\n    @pytest.mark.parametrize('cur_language', [''])\n    @pytest.mark.parametrize('cur_country', ['gb'])\n    @pytest.mark.parametrize('cur_role', [\"Auth\"])\n    @pytest.mark.test_005\n    def test_005(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n         Check: Button [My account] in the Header\n         Language: En. License: FCA.\n         \"\"\"\n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTest Manual Detected Bugs\",\n            \"_005\", \"The 'My Account' menu is not displayed when click on the [My Account] button in the Header\")\n    \n        Common().check_language_in_list_and_skip_if_not_present(cur_language, [''])\n        Common().check_country_in_list_and_skip_if_not_present(cur_country, ['gb'])\n    \n        page_conditions = NewConditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL_NEW, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = MyAccountButton(d, link, bid)\n>       test_element.full_test(d, cur_language, cur_country, cur_role, link)\n\ntests\\US_55_ReTestsManual\\tassobaccato\\US_55-tassobaccato_ReTestsManual_test.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\Elements\\MyAccountButton.py:21: in full_test\n    test_element.assert_my_account_menu(d)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.Elements.AssertClass.AssertClass object at 0x00000287C200EED0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f60ec04e0edd4465bf851bbc552e1a85\")>\n\n    @allure.step('Checking that the \"My account\" menu is opened')\n    def assert_my_account_menu(self, d):\n        account_btn_link = d.current_url\n        if account_btn_link == \"https://capital.com/trading/platform\":\n            print(f\"\\n{datetime.now()}   3. Assert_v0\")\n>           assert False, \\\n                ('Bug#005. '\n                 'Expected result: Menu \"My account\" is displayed'\n                 '\\n'\n                 'Actual result: The trading platform page is opened')\nE           AssertionError: Bug#005. Expected result: Menu \"My account\" is displayed\nE           Actual result: The trading platform page is opened\n\npages\\Elements\\AssertClass.py:246: AssertionError","steps":[{"name":"Start retest manual TC_55!00_005 of button [My account] in the Header","time":{"start":1715971730953,"stop":1715971748440,"duration":17487},"status":"failed","statusMessage":"AssertionError: Bug#005. Expected result: Menu \"My account\" is displayed\nActual result: The trading platform page is opened\n","statusTrace":"  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\a\\TestCapitalComPySe\\TestCapitalComPySe\\tests\\US_55_ReTestsManual\\tassobaccato\\US_55-tassobaccato_ReTestsManual_test.py\", line 43, in test_005\n    test_element.full_test(d, cur_language, cur_country, cur_role, link)\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\a\\TestCapitalComPySe\\TestCapitalComPySe\\pages\\Elements\\MyAccountButton.py\", line 21, in full_test\n    test_element.assert_my_account_menu(d)\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\a\\TestCapitalComPySe\\TestCapitalComPySe\\pages\\Elements\\AssertClass.py\", line 246, in assert_my_account_menu\n    assert False, \\\n           ^^^^^\n","steps":[{"name":"   Set New preconditions","time":{"start":1715971730955,"stop":1715971746667,"duration":15712},"status":"passed","steps":[{"name":"2024-05-17 18:48:48.961771   Start Checking Captcha","time":{"start":1715971734791,"stop":1715971735795,"duration":1004},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"2024-05-17 18:48:48.961771   Start Authorisation","time":{"start":1715971741310,"stop":1715971745591,"duration":4281},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f60ec04e0edd4465bf851bbc552e1a85\")>"},{"name":"link","value":"'https://capital.com/en-gb'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-05-17 18:48:48.961771   Start Checking Captcha","time":{"start":1715971745591,"stop":1715971746667,"duration":1076},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f60ec04e0edd4465bf851bbc552e1a85\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'gb'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-05-17 18:48:48.946151   Start full test of 'My account' button in the header","time":{"start":1715971746667,"stop":1715971748439,"duration":1772},"status":"failed","statusMessage":"AssertionError: Bug#005. Expected result: Menu \"My account\" is displayed\nActual result: The trading platform page is opened\n","statusTrace":"  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\a\\TestCapitalComPySe\\TestCapitalComPySe\\pages\\Elements\\MyAccountButton.py\", line 21, in full_test\n    test_element.assert_my_account_menu(d)\n  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\a\\TestCapitalComPySe\\TestCapitalComPySe\\pages\\Elements\\AssertClass.py\", line 246, in assert_my_account_menu\n    assert False, \\\n           ^^^^^\n","steps":[{"name":"Click My account button in the page header","time":{"start":1715971747992,"stop":1715971748204,"duration":212},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Checking that the \"My account\" menu is opened","time":{"start":1715971748204,"stop":1715971748438,"duration":234},"status":"failed","statusMessage":"AssertionError: Bug#005. Expected result: Menu \"My account\" is displayed\nActual result: The trading platform page is opened\n","statusTrace":"  File \"C:\\Users\\runneradmin\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\testcapitalcompyse-ahTg7XpD-py3.12\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\a\\TestCapitalComPySe\\TestCapitalComPySe\\pages\\Elements\\AssertClass.py\", line 246, in assert_my_account_menu\n    assert False, \\\n           ^^^^^\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f60ec04e0edd4465bf851bbc552e1a85\")>"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f60ec04e0edd4465bf851bbc552e1a85\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'gb'"},{"name":"cur_role","value":"'Auth'"},{"name":"link","value":"'https://capital.com/en-gb'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f60ec04e0edd4465bf851bbc552e1a85\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'gb'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"d0526f5ec78094f6","name":"Screenshot","source":"d0526f5ec78094f6.png","type":"image/png","size":16411},{"uid":"6a13f6479a8740cb","name":"stdout","source":"6a13f6479a8740cb.txt","type":"text/plain","size":4340}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":8,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1715971748847,"stop":1715971751051,"duration":2204},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_55 | ReTest Manual Detected Bugs"},{"name":"feature","value":"Country: gb"},{"name":"story","value":"Language: en / Role: Auth"},{"name":"tag","value":"test_005"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az653-785"},{"name":"thread","value":"1524-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'gb'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["test_005","us_55"]},"source":"9aa8f94fec6aaa15.json","parameterValues":["'gb'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'Auth'","'Chrome'"]}