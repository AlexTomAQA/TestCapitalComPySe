{"uid":"2d95829cbd46dc3f","name":"TC_55!634 (Lang: en) | Bid:55!634-en.gb.NoAuth","fullName":"tests.US_55_ReTestsManual.K_Alex_N.US_55_K_Alex_N_ReTestsManual_test.TestForFixedBugs#test_634","historyId":"308dcd4d7f62a366ed7f3d2ac6f6530c","time":{"start":1735005664941,"stop":1735005700879,"duration":35938},"description":"\n         Check: Menu section [Markets] > \n                Menu item [Markets analysis] > \n                Article \"Gold price predictions for the next..\" > \n                Click on [Trade now] link > \n                Click on [Close] button\n         Language: EN\n         License: SCA, FCA, CYSEC or ASIC\n         Author: Aleksei Kurochkin\n         ","descriptionHtml":"<pre><code>     Check: Menu section [Markets] &gt; \n            Menu item [Markets analysis] &gt; \n            Article &quot;Gold price predictions for the next..&quot; &gt; \n            Click on [Trade now] link &gt; \n            Click on [Close] button\n     Language: EN\n     License: SCA, FCA, CYSEC or ASIC\n     Author: Aleksei Kurochkin\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//a[@aria-label=\"Go to the next page\"]\"}\n  (Session info: chrome=131.0.6778.139); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x555802e768fa <unknown>\n#1 0x555802987d20 <unknown>\n#2 0x5558029d6a66 <unknown>\n#3 0x5558029d6d01 <unknown>\n#4 0x555802a1c184 <unknown>\n#5 0x5558029fab1d <unknown>\n#6 0x555802a19560 <unknown>\n#7 0x5558029fa893 <unknown>\n#8 0x5558029c930d <unknown>\n#9 0x5558029ca32e <unknown>\n#10 0x555802e4300b <unknown>\n#11 0x555802e46f97 <unknown>\n#12 0x555802e2f71c <unknown>\n#13 0x555802e47b17 <unknown>\n#14 0x555802e146cf <unknown>\n#15 0x555802e656b8 <unknown>\n#16 0x555802e65880 <unknown>\n#17 0x555802e75776 <unknown>\n#18 0x7fc8fa49ca94 <unknown>\n#19 0x7fc8fa529c3c <unknown>","statusTrace":"self = <US_55_K_Alex_N_ReTestsManual_test.TestForFixedBugs object at 0x7fa3f97e8980>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e7d5bcbdc5426d5691f9994c39f2bb98\")>\ncur_language = '', cur_country = 'gb', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @pytest.mark.parametrize('cur_language', [''])\n    @pytest.mark.parametrize('cur_country', ['gb', 'ae', 'au', 'de'])\n    @pytest.mark.parametrize('cur_role', random.sample(['NoAuth', 'NoReg'], 1))\n    def test_634(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n         Check: Menu section [Markets] >\n                Menu item [Markets analysis] >\n                Article \"Gold price predictions for the next..\" >\n                Click on [Trade now] link >\n                Click on [Close] button\n         Language: EN\n         License: SCA, FCA, CYSEC or ASIC\n         Author: Aleksei Kurochkin\n         \"\"\"\n        test = self\n        self.cur_language = cur_language\n        self.cur_country = cur_country\n        self.driver = d\n    \n        self.bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"634\",\n            'The loading spinner is displayed continuously on the page \"Gold price '\n            'predictions for the next...\" after click on [Trade now]',\n            False,\n            False\n        )\n    \n        # Arrange\n        self.link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n        self.bug = Bug634(test)\n        self.bug.open_market_analysis_page(test)\n>       MyCommon.search_and_open_an_article_in_market_analysis_page(d, \"Gold price predictions for the next\")\n\ntests/US_55_ReTestsManual/K_Alex_N/US_55_K_Alex_N_ReTestsManual_test.py:109: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/US_55_ReTestsManual/K_Alex_N/MyCommon.py:53: in search_and_open_an_article_in_market_analysis_page\n    go_to_next_page()\ntests/US_55_ReTestsManual/K_Alex_N/MyCommon.py:44: in go_to_next_page\n    driver.find_element(*LOCATOR_LINK_NEXT_PAGE).click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa3f97d18e0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#17 0x555802e75776 \\\\u003Cunknown>\\\\n#18 0x7fc8fa49ca94 \\\\u003Cunknown>\\\\n#19 0x7fc8fa529c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//a[@aria-label=\"Go to the next page\"]\"}\nE         (Session info: chrome=131.0.6778.139); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x555802e768fa <unknown>\nE       #1 0x555802987d20 <unknown>\nE       #2 0x5558029d6a66 <unknown>\nE       #3 0x5558029d6d01 <unknown>\nE       #4 0x555802a1c184 <unknown>\nE       #5 0x5558029fab1d <unknown>\nE       #6 0x555802a19560 <unknown>\nE       #7 0x5558029fa893 <unknown>\nE       #8 0x5558029c930d <unknown>\nE       #9 0x5558029ca32e <unknown>\nE       #10 0x555802e4300b <unknown>\nE       #11 0x555802e46f97 <unknown>\nE       #12 0x555802e2f71c <unknown>\nE       #13 0x555802e47b17 <unknown>\nE       #14 0x555802e146cf <unknown>\nE       #15 0x555802e656b8 <unknown>\nE       #16 0x555802e65880 <unknown>\nE       #17 0x555802e75776 <unknown>\nE       #18 0x7fc8fa49ca94 <unknown>\nE       #19 0x7fc8fa529c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1735005587038,"stop":1735005587655,"duration":617},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1735005587656,"stop":1735005587656,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1735005587656,"stop":1735005587656,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1735005587656,"stop":1735005587656,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n         Check: Menu section [Markets] > \n                Menu item [Markets analysis] > \n                Article \"Gold price predictions for the next..\" > \n                Click on [Trade now] link > \n                Click on [Close] button\n         Language: EN\n         License: SCA, FCA, CYSEC or ASIC\n         Author: Aleksei Kurochkin\n         ","status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//a[@aria-label=\"Go to the next page\"]\"}\n  (Session info: chrome=131.0.6778.139); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x555802e768fa <unknown>\n#1 0x555802987d20 <unknown>\n#2 0x5558029d6a66 <unknown>\n#3 0x5558029d6d01 <unknown>\n#4 0x555802a1c184 <unknown>\n#5 0x5558029fab1d <unknown>\n#6 0x555802a19560 <unknown>\n#7 0x5558029fa893 <unknown>\n#8 0x5558029c930d <unknown>\n#9 0x5558029ca32e <unknown>\n#10 0x555802e4300b <unknown>\n#11 0x555802e46f97 <unknown>\n#12 0x555802e2f71c <unknown>\n#13 0x555802e47b17 <unknown>\n#14 0x555802e146cf <unknown>\n#15 0x555802e656b8 <unknown>\n#16 0x555802e65880 <unknown>\n#17 0x555802e75776 <unknown>\n#18 0x7fc8fa49ca94 <unknown>\n#19 0x7fc8fa529c3c <unknown>","statusTrace":"self = <US_55_K_Alex_N_ReTestsManual_test.TestForFixedBugs object at 0x7fa3f97e8980>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e7d5bcbdc5426d5691f9994c39f2bb98\")>\ncur_language = '', cur_country = 'gb', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @pytest.mark.parametrize('cur_language', [''])\n    @pytest.mark.parametrize('cur_country', ['gb', 'ae', 'au', 'de'])\n    @pytest.mark.parametrize('cur_role', random.sample(['NoAuth', 'NoReg'], 1))\n    def test_634(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n         Check: Menu section [Markets] >\n                Menu item [Markets analysis] >\n                Article \"Gold price predictions for the next..\" >\n                Click on [Trade now] link >\n                Click on [Close] button\n         Language: EN\n         License: SCA, FCA, CYSEC or ASIC\n         Author: Aleksei Kurochkin\n         \"\"\"\n        test = self\n        self.cur_language = cur_language\n        self.cur_country = cur_country\n        self.driver = d\n    \n        self.bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"634\",\n            'The loading spinner is displayed continuously on the page \"Gold price '\n            'predictions for the next...\" after click on [Trade now]',\n            False,\n            False\n        )\n    \n        # Arrange\n        self.link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n        self.bug = Bug634(test)\n        self.bug.open_market_analysis_page(test)\n>       MyCommon.search_and_open_an_article_in_market_analysis_page(d, \"Gold price predictions for the next\")\n\ntests/US_55_ReTestsManual/K_Alex_N/US_55_K_Alex_N_ReTestsManual_test.py:109: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/US_55_ReTestsManual/K_Alex_N/MyCommon.py:53: in search_and_open_an_article_in_market_analysis_page\n    go_to_next_page()\ntests/US_55_ReTestsManual/K_Alex_N/MyCommon.py:44: in go_to_next_page\n    driver.find_element(*LOCATOR_LINK_NEXT_PAGE).click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa3f97d18e0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#17 0x555802e75776 \\\\u003Cunknown>\\\\n#18 0x7fc8fa49ca94 \\\\u003Cunknown>\\\\n#19 0x7fc8fa529c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//a[@aria-label=\"Go to the next page\"]\"}\nE         (Session info: chrome=131.0.6778.139); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x555802e768fa <unknown>\nE       #1 0x555802987d20 <unknown>\nE       #2 0x5558029d6a66 <unknown>\nE       #3 0x5558029d6d01 <unknown>\nE       #4 0x555802a1c184 <unknown>\nE       #5 0x5558029fab1d <unknown>\nE       #6 0x555802a19560 <unknown>\nE       #7 0x5558029fa893 <unknown>\nE       #8 0x5558029c930d <unknown>\nE       #9 0x5558029ca32e <unknown>\nE       #10 0x555802e4300b <unknown>\nE       #11 0x555802e46f97 <unknown>\nE       #12 0x555802e2f71c <unknown>\nE       #13 0x555802e47b17 <unknown>\nE       #14 0x555802e146cf <unknown>\nE       #15 0x555802e656b8 <unknown>\nE       #16 0x555802e65880 <unknown>\nE       #17 0x555802e75776 <unknown>\nE       #18 0x7fc8fa49ca94 <unknown>\nE       #19 0x7fc8fa529c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1735005664941,"stop":1735005664949,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e7d5bcbdc5426d5691f9994c39f2bb98\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'gb'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'634'"},{"name":"desc_tc","value":"'The loading spinner is displayed continuously on the page \"Gold price predictions for the next...\" after click on [Trade now]'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1735005664949,"stop":1735005677318,"duration":12369},"status":"passed","steps":[{"name":"2024-12-24 01:59:47.021449   Start Authorization","time":{"start":1735005669900,"stop":1735005673349,"duration":3449},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e7d5bcbdc5426d5691f9994c39f2bb98\")>"},{"name":"link","value":"'https://capital.com/en-gb'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-12-24 01:59:47.021461   Start Deauthorization","time":{"start":1735005673349,"stop":1735005673948,"duration":599},"status":"passed","steps":[{"name":"Start Logout from account info menu in top bar","time":{"start":1735005673349,"stop":1735005673948,"duration":599},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e7d5bcbdc5426d5691f9994c39f2bb98\")>"},{"name":"link","value":"'https://capital.com/en-gb'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-12-24 01:59:47.021471   Set language and country","time":{"start":1735005673949,"stop":1735005677312,"duration":3363},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e7d5bcbdc5426d5691f9994c39f2bb98\")>"},{"name":"cur_language","value":"'en'"},{"name":"cur_country","value":"'gb'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e7d5bcbdc5426d5691f9994c39f2bb98\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'gb'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Markets\" menu, \"Market analysis\" submenu","time":{"start":1735005677318,"stop":1735005685662,"duration":8344},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e7d5bcbdc5426d5691f9994c39f2bb98\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'gb'"},{"name":"link","value":"'https://capital.com/en-gb'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"c42dd1b1ac49ab9","name":"Screenshot","source":"c42dd1b1ac49ab9.png","type":"image/png","size":73060},{"uid":"b3ee1d8aa66748f8","name":"stdout","source":"b3ee1d8aa66748f8.txt","type":"text/plain","size":5030}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":7,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1735006090592,"stop":1735006090772,"duration":180},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!634 | The loading spinner is displayed continuously on the page \"Gold price predictions for the next...\" after click on [Trade now]"},{"name":"feature","value":"Role: NoAuth"},{"name":"story","value":"Country: gb"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.K_Alex_N"},{"name":"suite","value":"US_55_K_Alex_N_ReTestsManual_test"},{"name":"subSuite","value":"TestForFixedBugs"},{"name":"host","value":"fv-az1043-972"},{"name":"thread","value":"41585-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.K_Alex_N.US_55_K_Alex_N_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'gb'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"2a8ad73f7c7b2055","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/266//#testresult/2a8ad73f7c7b2055","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <b class=\"\">...</b> is not clickable at point (817, 22). Other element would receive the click: <div>...</div>\n  (Session info: chrome=131.0.6778.139)\nStacktrace:\n#0 0x558d859098fa <unknown>\n#1 0x558d8541ad20 <unknown>\n#2 0x558d85470766 <unknown>\n#3 0x558d8546e6cd <unknown>\n#4 0x558d8546bde5 <unknown>\n#5 0x558d8546afa8 <unknown>\n#6 0x558d8545e765 <unknown>\n#7 0x558d8548daf2 <unknown>\n#8 0x558d8545e0a8 <unknown>\n#9 0x558d8548dcbe <unknown>\n#10 0x558d854ac560 <unknown>\n#11 0x558d8548d893 <unknown>\n#12 0x558d8545c30d <unknown>\n#13 0x558d8545d32e <unknown>\n#14 0x558d858d600b <unknown>\n#15 0x558d858d9f97 <unknown>\n#16 0x558d858c271c <unknown>\n#17 0x558d858dab17 <unknown>\n#18 0x558d858a76cf <unknown>\n#19 0x558d858f86b8 <unknown>\n#20 0x558d858f8880 <unknown>\n#21 0x558d85908776 <unknown>\n#22 0x7f369e89ca94 <unknown>\n#23 0x7f369e929c3c <unknown>","time":{"start":1734918505676,"stop":1734918532766,"duration":27090}}]},"tags":["us_55"]},"source":"2d95829cbd46dc3f.json","parameterValues":["'gb'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoAuth'","'Chrome'"]}