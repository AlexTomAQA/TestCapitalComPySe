{"uid":"2ec1108a1a3e38cb","name":"TC_11.03.07_06 with parameters: es, ae, Auth","fullName":"tests.US_11_Education.US_11-03-07_What_is_a_margin.US_11-03-07_What_is_a_margin_test.TestWhatIsMargin#test_06_try_free_demo_in_block_want_test_drive","historyId":"84017d19bf779c21193969dde4fb700e","time":{"start":1702367500542,"stop":1702367512653,"duration":12111},"description":"\n        Check: Button [Try Free Demo] in Block 'Want a test drive?'\n        Language: All. License: All.\n        ","descriptionHtml":"<pre><code>    Check: Button [Try Free Demo] in Block 'Want a test drive?'\n    Language: All. License: All.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Bug!. Loaded page with https://capital.com/trading/signup url, but expected the Trading platform inLive mode(timeout=20c)","statusTrace":"self = <US_11-03-07_What_is_a_margin_test.TestWhatIsMargin object at 0x7fead8b9c350>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2982d66d65e3d47ce5c3297a133fc2ef\")>\ncur_language = 'es', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\nprob_run_tc = ''\n\n    @allure.step(\"Start test of button [Try Free Demo] in Block 'Want a test drive?'\")\n    def test_06_try_free_demo_in_block_want_test_drive(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, prob_run_tc):\n        \"\"\"\n        Check: Button [Try Free Demo] in Block 'Want a test drive?'\n        Language: All. License: All.\n        \"\"\"\n        print(f\"\\n{datetime.now()}   Работает obj {self} с именем TC_11.03.07_06\")\n        build_dynamic_arg_v2(self, d, worker_id, cur_language, cur_country, cur_role, prob_run_tc,\n                             \"11.03.07\", \"Educations > Menu item [What is a margin?]\", \"06\",\n                             \"Testing button [Try Free Demo] in Block 'Want a test drive?'\")\n    \n        if cur_language in [\"\", \"cn\"]:\n            pytest.skip(f\"This test is not for {'en' if cur_language == '' else cur_language} language\")\n    \n        link = self.us_link.get_us_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = ButtonFreeDemoOnHorizontalBanner(d, link)\n        test_element.arrange_(d, link)\n    \n        if not test_element.element_click():\n            pytest.fail(\"Testing element is not clicked\")\n    \n        test_element = AssertClass(d, link)\n        match cur_role:\n            case \"NoReg\":\n                test_element.assert_signup(d, cur_language, link)\n            case \"Reg/NoAuth\":\n                test_element.assert_login(d, cur_language, link)\n            case \"Auth\":\n>               test_element.assert_trading_platform_v4(d, link)\n\ntests/US_11_Education/US_11-03-07_What_is_a_margin/US_11-03-07_What_is_a_margin_test.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/AssertClass.py:106: in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Capital.Trading_platform.trading_platform.TradingPlatform object at 0x7fead8b3e7d0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2982d66d65e3d47ce5c3297a133fc2ef\")>\ncur_link = 'https://capital.com/es/margin-trading', tpd = False, tpi = False\ntrade_instrument = ''\n\n    @allure.step(\"Checking that the trading platform page has opened - ver 4\")\n    def should_be_trading_platform_page_v4(self, d, cur_link, tpd, tpi, trade_instrument):\n        \"\"\"\n        Check if the trading platform page for the corresponding trade instrument is opened\n        Args:\n            d: Webdriver\n            cur_link: Link in the list of 3 random items and start page of the sidebar\n            tpd: open Trade platform in Demo mode (True). Live mode (False)\n            tpi: open Trade platform for corresponding trade instrument (False)\n            trade_instrument: corresponding trade instrument (False)\n        \"\"\"\n        print(f\"{datetime.now()}   Checking that the trading platform page has opened (v4) =>\")\n        platform_url = data[\"PLATFORM_URL/\"]\n        cur_url = self.browser.current_url\n        if self.wait_for_target_url(platform_url, 15):\n    \n            self.should_be_page_title_v2(data[\"PAGE_TITLE\"])\n            self.should_be_platform_logo()\n            if tpd:\n                self.should_be_platform_demo_mode(20)\n                print(f\"{datetime.now()}   => The page with {cur_url} url was opened in DEMO mode\")\n            else:\n                self.should_be_platform_live_mode(20)\n                print(f\"{datetime.now()}   => The page with {cur_url} url was opened in lIVE mode\")\n            if tpi:\n                print(f\"{datetime.now()}   => Opened page with {cur_url} url for corresponding trading\"\n                      f\" instrument '{trade_instrument}'\")\n                self.should_be_corresponding_trading_instrument(cur_url, trade_instrument)\n    \n            assert True, 'Trading platform with title \"Trading Platform | Capital.com\" opened'\n            self.open_page()\n        else:\n            if tpd:\n                print(f\"{datetime.now()}   => Loaded page {self.browser.current_url} with not {platform_url} url\")\n                assert False, (f\"Bug!. Loaded page with {cur_url} url, but expected the Trading platform in\"\n                               f\"Demo mode(timeout=20c)\")\n            else:\n                print(f\"{datetime.now()}   => Loaded page {self.browser.current_url} with not {platform_url} url\")\n>               assert False, (f\"Bug!. Loaded page with {cur_url} url, but expected the Trading platform in\"\n                               f\"Live mode(timeout=20c)\")\nE               AssertionError: Bug!. Loaded page with https://capital.com/trading/signup url, but expected the Trading platform inLive mode(timeout=20c)\n\npages/Capital/Trading_platform/trading_platform.py:119: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1702367349667,"stop":1702367350573,"duration":906},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1702367349667,"stop":1702367349667,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"go","time":{"start":1702367350573,"stop":1702367350573,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1702367350574,"stop":1702367350574,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1702367350574,"stop":1702367350574,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1702367350574,"stop":1702367350574,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1702367350574,"stop":1702367350574,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1702367432953,"stop":1702367432953,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"prob_run_tc","time":{"start":1702367500541,"stop":1702367500541,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [Try Free Demo] in Block 'Want a test drive?'\n        Language: All. License: All.\n        ","status":"failed","statusMessage":"AssertionError: Bug!. Loaded page with https://capital.com/trading/signup url, but expected the Trading platform inLive mode(timeout=20c)","statusTrace":"self = <US_11-03-07_What_is_a_margin_test.TestWhatIsMargin object at 0x7fead8b9c350>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2982d66d65e3d47ce5c3297a133fc2ef\")>\ncur_language = 'es', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\nprob_run_tc = ''\n\n    @allure.step(\"Start test of button [Try Free Demo] in Block 'Want a test drive?'\")\n    def test_06_try_free_demo_in_block_want_test_drive(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, prob_run_tc):\n        \"\"\"\n        Check: Button [Try Free Demo] in Block 'Want a test drive?'\n        Language: All. License: All.\n        \"\"\"\n        print(f\"\\n{datetime.now()}   Работает obj {self} с именем TC_11.03.07_06\")\n        build_dynamic_arg_v2(self, d, worker_id, cur_language, cur_country, cur_role, prob_run_tc,\n                             \"11.03.07\", \"Educations > Menu item [What is a margin?]\", \"06\",\n                             \"Testing button [Try Free Demo] in Block 'Want a test drive?'\")\n    \n        if cur_language in [\"\", \"cn\"]:\n            pytest.skip(f\"This test is not for {'en' if cur_language == '' else cur_language} language\")\n    \n        link = self.us_link.get_us_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = ButtonFreeDemoOnHorizontalBanner(d, link)\n        test_element.arrange_(d, link)\n    \n        if not test_element.element_click():\n            pytest.fail(\"Testing element is not clicked\")\n    \n        test_element = AssertClass(d, link)\n        match cur_role:\n            case \"NoReg\":\n                test_element.assert_signup(d, cur_language, link)\n            case \"Reg/NoAuth\":\n                test_element.assert_login(d, cur_language, link)\n            case \"Auth\":\n>               test_element.assert_trading_platform_v4(d, link)\n\ntests/US_11_Education/US_11-03-07_What_is_a_margin/US_11-03-07_What_is_a_margin_test.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/AssertClass.py:106: in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Capital.Trading_platform.trading_platform.TradingPlatform object at 0x7fead8b3e7d0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2982d66d65e3d47ce5c3297a133fc2ef\")>\ncur_link = 'https://capital.com/es/margin-trading', tpd = False, tpi = False\ntrade_instrument = ''\n\n    @allure.step(\"Checking that the trading platform page has opened - ver 4\")\n    def should_be_trading_platform_page_v4(self, d, cur_link, tpd, tpi, trade_instrument):\n        \"\"\"\n        Check if the trading platform page for the corresponding trade instrument is opened\n        Args:\n            d: Webdriver\n            cur_link: Link in the list of 3 random items and start page of the sidebar\n            tpd: open Trade platform in Demo mode (True). Live mode (False)\n            tpi: open Trade platform for corresponding trade instrument (False)\n            trade_instrument: corresponding trade instrument (False)\n        \"\"\"\n        print(f\"{datetime.now()}   Checking that the trading platform page has opened (v4) =>\")\n        platform_url = data[\"PLATFORM_URL/\"]\n        cur_url = self.browser.current_url\n        if self.wait_for_target_url(platform_url, 15):\n    \n            self.should_be_page_title_v2(data[\"PAGE_TITLE\"])\n            self.should_be_platform_logo()\n            if tpd:\n                self.should_be_platform_demo_mode(20)\n                print(f\"{datetime.now()}   => The page with {cur_url} url was opened in DEMO mode\")\n            else:\n                self.should_be_platform_live_mode(20)\n                print(f\"{datetime.now()}   => The page with {cur_url} url was opened in lIVE mode\")\n            if tpi:\n                print(f\"{datetime.now()}   => Opened page with {cur_url} url for corresponding trading\"\n                      f\" instrument '{trade_instrument}'\")\n                self.should_be_corresponding_trading_instrument(cur_url, trade_instrument)\n    \n            assert True, 'Trading platform with title \"Trading Platform | Capital.com\" opened'\n            self.open_page()\n        else:\n            if tpd:\n                print(f\"{datetime.now()}   => Loaded page {self.browser.current_url} with not {platform_url} url\")\n                assert False, (f\"Bug!. Loaded page with {cur_url} url, but expected the Trading platform in\"\n                               f\"Demo mode(timeout=20c)\")\n            else:\n                print(f\"{datetime.now()}   => Loaded page {self.browser.current_url} with not {platform_url} url\")\n>               assert False, (f\"Bug!. Loaded page with {cur_url} url, but expected the Trading platform in\"\n                               f\"Live mode(timeout=20c)\")\nE               AssertionError: Bug!. Loaded page with https://capital.com/trading/signup url, but expected the Trading platform inLive mode(timeout=20c)\n\npages/Capital/Trading_platform/trading_platform.py:119: AssertionError","steps":[{"name":"Start test of button [Try Free Demo] in Block 'Want a test drive?'","time":{"start":1702367500542,"stop":1702367512652,"duration":12110},"status":"failed","statusMessage":"AssertionError: Bug!. Loaded page with https://capital.com/trading/signup url, but expected the Trading platform inLive mode(timeout=20c)\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_11_Education/US_11-03-07_What_is_a_margin/US_11-03-07_What_is_a_margin_test.py\", line 218, in test_06_try_free_demo_in_block_want_test_drive\n    test_element.assert_trading_platform_v4(d, link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 106, in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 119, in should_be_trading_platform_page_v4\n    assert False, (f\"Bug!. Loaded page with {cur_url} url, but expected the Trading platform in\"\n","steps":[{"name":"Set preconditions","time":{"start":1702367500545,"stop":1702367504799,"duration":4254},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"2982d66d65e3d47ce5c3297a133fc2ef\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'es'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Click button on horizontal banner","time":{"start":1702367506220,"stop":1702367509427,"duration":3207},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Checking that \"Trading platform\" page opened - ver 4","time":{"start":1702367509427,"stop":1702367512652,"duration":3225},"status":"failed","statusMessage":"AssertionError: Bug!. Loaded page with https://capital.com/trading/signup url, but expected the Trading platform inLive mode(timeout=20c)\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 106, in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 119, in should_be_trading_platform_page_v4\n    assert False, (f\"Bug!. Loaded page with {cur_url} url, but expected the Trading platform in\"\n","steps":[{"name":"Checking that the trading platform page has opened - ver 4","time":{"start":1702367509427,"stop":1702367512652,"duration":3225},"status":"failed","statusMessage":"AssertionError: Bug!. Loaded page with https://capital.com/trading/signup url, but expected the Trading platform inLive mode(timeout=20c)\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 119, in should_be_trading_platform_page_v4\n    assert False, (f\"Bug!. Loaded page with {cur_url} url, but expected the Trading platform in\"\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"2982d66d65e3d47ce5c3297a133fc2ef\")>"},{"name":"cur_link","value":"'https://capital.com/es/margin-trading'"},{"name":"tpd","value":"False"},{"name":"tpi","value":"False"},{"name":"trade_instrument","value":"''"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"2982d66d65e3d47ce5c3297a133fc2ef\")>"},{"name":"cur_link","value":"'https://capital.com/es/margin-trading'"},{"name":"tpd","value":"False"},{"name":"tpi","value":"False"},{"name":"trade_instrument","value":"''"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"2982d66d65e3d47ce5c3297a133fc2ef\")>"},{"name":"cur_language","value":"'es'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"prob_run_tc","value":"''"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"446c2365d36dd68a","name":"Screenshot","source":"446c2365d36dd68a.png","type":"image/png","size":15400},{"uid":"d68237efb999db4e","name":"log","source":"d68237efb999db4e.txt","type":"text/plain","size":2587},{"uid":"4bbed219c9f920e7","name":"stdout","source":"4bbed219c9f920e7.txt","type":"text/plain","size":1922}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"go::0","time":{"start":1702367648039,"stop":1702367648188,"duration":149},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Language: es / US_11.03.07 | Educations > Menu item [What is a margin?]"},{"name":"feature","value":"Country: ae / Role: Auth / TS_11.03.07 | Educations > Menu item [What is a margin?]"},{"name":"story","value":"TC_11.03.07_06 | Testing button [Try Free Demo] in Block 'Want a test drive?'"},{"name":"tag","value":"us_11_03_07"},{"name":"parentSuite","value":"tests.US_11_Education.US_11-03-07_What_is_a_margin"},{"name":"suite","value":"US_11-03-07_What_is_a_margin_test"},{"name":"subSuite","value":"TestWhatIsMargin"},{"name":"host","value":"fv-az1251-511"},{"name":"thread","value":"50288-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_11_Education.US_11-03-07_What_is_a_margin.US_11-03-07_What_is_a_margin_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"'es'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_role","value":"'Auth'"},{"name":"go","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["us_11_03_07"]},"source":"2ec1108a1a3e38cb.json","parameterValues":["'ae'","'es'","'aqa.tomelo.an@gmail.com'","'iT9Vgqi6d$fiZ*Z'","'Auth'","'chrome'"]}