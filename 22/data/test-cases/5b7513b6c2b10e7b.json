{"uid":"5b7513b6c2b10e7b","name":"TC_11.02.06.01_09 | Testing 2 random buttons [Sell] in Indices tableand in top_risers tab. Bid:11.02.06.01_09-en.au.NoAuth","fullName":"tests.US_11_Education.US_11-02-06_Indices_trading.us_11-02-06-01_indices_trading_test.TestIndicesTrading#test_09_indices_cfds_table_block_button_sell","historyId":"6c0eb3ef330063a6e7677e9c1c67aed5","time":{"start":1709291691714,"stop":1709291696126,"duration":4412},"description":"\n        Check: Button [Sell] in Indices table - 'CFDs table' in {cur _tab} tab\n        Language: EN, RU, ZH. License: All.\n        ","descriptionHtml":"<pre><code>    Check: Button [Sell] in Indices table - 'CFDs table' in {cur _tab} tab\n    Language: EN, RU, ZH. License: All.\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"/trade-cac#\" class=\"main__tab--item \" data-id=\"risers\">...</a> is not clickable at point (405, 322). Other element would receive the click: <div class=\"list-webinar js-tips-all\">...</div>\n  (Session info: chrome=122.0.6261.69)\nStacktrace:\n#0 0x5593f0b9be93 <unknown>\n#1 0x5593f0893ce6 <unknown>\n#2 0x5593f08e5a73 <unknown>\n#3 0x5593f08e398e <unknown>\n#4 0x5593f08e1367 <unknown>\n#5 0x5593f08e0732 <unknown>\n#6 0x5593f08d3d27 <unknown>\n#7 0x5593f0900eb2 <unknown>\n#8 0x5593f08d36b8 <unknown>\n#9 0x5593f090107e <unknown>\n#10 0x5593f091f899 <unknown>\n#11 0x5593f0900c53 <unknown>\n#12 0x5593f08d1db3 <unknown>\n#13 0x5593f08d277e <unknown>\n#14 0x5593f0b617cb <unknown>\n#15 0x5593f0b657e5 <unknown>\n#16 0x5593f0b4f0e1 <unknown>\n#17 0x5593f0b66372 <unknown>\n#18 0x5593f0b331bf <unknown>\n#19 0x5593f0b8a488 <unknown>\n#20 0x5593f0b8a683 <unknown>\n#21 0x5593f0b9b044 <unknown>\n#22 0x7f13f1294ac3 <unknown>","statusTrace":"self = <us_11-02-06-01_indices_trading_test.TestIndicesTrading object at 0x7f76cf16b740>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9c5cebb03078ce24782439d5ece00f99\")>\ncur_language = '', cur_country = 'au', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_item_link = 'https://capital.com/trade-cac', cur_tab = 'top_risers'\n\n    @allure.step(\"Start test of button [Sell] in Indices table - 'CFDs table' \")\n    @pytest.mark.test_09\n    def test_09_indices_cfds_table_block_button_sell(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link, cur_tab):\n        \"\"\"\n        Check: Button [Sell] in Indices table - 'CFDs table' in {cur _tab} tab\n        Language: EN, RU, ZH. License: All.\n        \"\"\"\n        test_title = (\"11.02.06\", \"Education > Menu item [Indices Trading]\",\n                      \".01_09\", f\"Testing 2 random buttons [Sell] in Indices table\"\n                                f\"and in {cur_tab} tab\")\n    \n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role, *test_title)\n    \n        Common().check_language_in_list_and_skip_if_not_present(\n            cur_language, [\"\", \"ru\", \"zh\"])\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = SellButtonIndicesTable(d, cur_item_link, bid)\n>       test_element.full_test(d, cur_language, cur_country, cur_role, cur_item_link, cur_tab)\n\ntests/US_11_Education/US_11-02-06_Indices_trading/us_11-02-06-01_indices_trading_test.py:293: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/IndicesTableSellButton.py:37: in full_test\n    item_list = self.arrange_(d, cur_item_link, cur_tab)\npages/Elements/IndicesTableSellButton.py:100: in arrange_\n    self.current_tab.click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f76cefafb90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5593f0b8a683 \\\\u003Cunknown>\\\\n#21 0x5593f0b9b044 \\\\u003Cunknown>\\\\n#22 0x7f13f1294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"/trade-cac#\" class=\"main__tab--item \" data-id=\"risers\">...</a> is not clickable at point (405, 322). Other element would receive the click: <div class=\"list-webinar js-tips-all\">...</div>\nE         (Session info: chrome=122.0.6261.69)\nE       Stacktrace:\nE       #0 0x5593f0b9be93 <unknown>\nE       #1 0x5593f0893ce6 <unknown>\nE       #2 0x5593f08e5a73 <unknown>\nE       #3 0x5593f08e398e <unknown>\nE       #4 0x5593f08e1367 <unknown>\nE       #5 0x5593f08e0732 <unknown>\nE       #6 0x5593f08d3d27 <unknown>\nE       #7 0x5593f0900eb2 <unknown>\nE       #8 0x5593f08d36b8 <unknown>\nE       #9 0x5593f090107e <unknown>\nE       #10 0x5593f091f899 <unknown>\nE       #11 0x5593f0900c53 <unknown>\nE       #12 0x5593f08d1db3 <unknown>\nE       #13 0x5593f08d277e <unknown>\nE       #14 0x5593f0b617cb <unknown>\nE       #15 0x5593f0b657e5 <unknown>\nE       #16 0x5593f0b4f0e1 <unknown>\nE       #17 0x5593f0b66372 <unknown>\nE       #18 0x5593f0b331bf <unknown>\nE       #19 0x5593f0b8a488 <unknown>\nE       #20 0x5593f0b8a683 <unknown>\nE       #21 0x5593f0b9b044 <unknown>\nE       #22 0x7f13f1294ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1709291420941,"stop":1709291421318,"duration":377},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1709291421318,"stop":1709291421319,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1709291421318,"stop":1709291421318,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1709291421319,"stop":1709291421319,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1709291421319,"stop":1709291421319,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1709291421319,"stop":1709291421319,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1709291576489,"stop":1709291576489,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_tab","time":{"start":1709291691714,"stop":1709291691714,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [Sell] in Indices table - 'CFDs table' in {cur _tab} tab\n        Language: EN, RU, ZH. License: All.\n        ","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"/trade-cac#\" class=\"main__tab--item \" data-id=\"risers\">...</a> is not clickable at point (405, 322). Other element would receive the click: <div class=\"list-webinar js-tips-all\">...</div>\n  (Session info: chrome=122.0.6261.69)\nStacktrace:\n#0 0x5593f0b9be93 <unknown>\n#1 0x5593f0893ce6 <unknown>\n#2 0x5593f08e5a73 <unknown>\n#3 0x5593f08e398e <unknown>\n#4 0x5593f08e1367 <unknown>\n#5 0x5593f08e0732 <unknown>\n#6 0x5593f08d3d27 <unknown>\n#7 0x5593f0900eb2 <unknown>\n#8 0x5593f08d36b8 <unknown>\n#9 0x5593f090107e <unknown>\n#10 0x5593f091f899 <unknown>\n#11 0x5593f0900c53 <unknown>\n#12 0x5593f08d1db3 <unknown>\n#13 0x5593f08d277e <unknown>\n#14 0x5593f0b617cb <unknown>\n#15 0x5593f0b657e5 <unknown>\n#16 0x5593f0b4f0e1 <unknown>\n#17 0x5593f0b66372 <unknown>\n#18 0x5593f0b331bf <unknown>\n#19 0x5593f0b8a488 <unknown>\n#20 0x5593f0b8a683 <unknown>\n#21 0x5593f0b9b044 <unknown>\n#22 0x7f13f1294ac3 <unknown>","statusTrace":"self = <us_11-02-06-01_indices_trading_test.TestIndicesTrading object at 0x7f76cf16b740>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9c5cebb03078ce24782439d5ece00f99\")>\ncur_language = '', cur_country = 'au', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_item_link = 'https://capital.com/trade-cac', cur_tab = 'top_risers'\n\n    @allure.step(\"Start test of button [Sell] in Indices table - 'CFDs table' \")\n    @pytest.mark.test_09\n    def test_09_indices_cfds_table_block_button_sell(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_item_link, cur_tab):\n        \"\"\"\n        Check: Button [Sell] in Indices table - 'CFDs table' in {cur _tab} tab\n        Language: EN, RU, ZH. License: All.\n        \"\"\"\n        test_title = (\"11.02.06\", \"Education > Menu item [Indices Trading]\",\n                      \".01_09\", f\"Testing 2 random buttons [Sell] in Indices table\"\n                                f\"and in {cur_tab} tab\")\n    \n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role, *test_title)\n    \n        Common().check_language_in_list_and_skip_if_not_present(\n            cur_language, [\"\", \"ru\", \"zh\"])\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = SellButtonIndicesTable(d, cur_item_link, bid)\n>       test_element.full_test(d, cur_language, cur_country, cur_role, cur_item_link, cur_tab)\n\ntests/US_11_Education/US_11-02-06_Indices_trading/us_11-02-06-01_indices_trading_test.py:293: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/IndicesTableSellButton.py:37: in full_test\n    item_list = self.arrange_(d, cur_item_link, cur_tab)\npages/Elements/IndicesTableSellButton.py:100: in arrange_\n    self.current_tab.click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f76cefafb90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5593f0b8a683 \\\\u003Cunknown>\\\\n#21 0x5593f0b9b044 \\\\u003Cunknown>\\\\n#22 0x7f13f1294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"/trade-cac#\" class=\"main__tab--item \" data-id=\"risers\">...</a> is not clickable at point (405, 322). Other element would receive the click: <div class=\"list-webinar js-tips-all\">...</div>\nE         (Session info: chrome=122.0.6261.69)\nE       Stacktrace:\nE       #0 0x5593f0b9be93 <unknown>\nE       #1 0x5593f0893ce6 <unknown>\nE       #2 0x5593f08e5a73 <unknown>\nE       #3 0x5593f08e398e <unknown>\nE       #4 0x5593f08e1367 <unknown>\nE       #5 0x5593f08e0732 <unknown>\nE       #6 0x5593f08d3d27 <unknown>\nE       #7 0x5593f0900eb2 <unknown>\nE       #8 0x5593f08d36b8 <unknown>\nE       #9 0x5593f090107e <unknown>\nE       #10 0x5593f091f899 <unknown>\nE       #11 0x5593f0900c53 <unknown>\nE       #12 0x5593f08d1db3 <unknown>\nE       #13 0x5593f08d277e <unknown>\nE       #14 0x5593f0b617cb <unknown>\nE       #15 0x5593f0b657e5 <unknown>\nE       #16 0x5593f0b4f0e1 <unknown>\nE       #17 0x5593f0b66372 <unknown>\nE       #18 0x5593f0b331bf <unknown>\nE       #19 0x5593f0b8a488 <unknown>\nE       #20 0x5593f0b8a683 <unknown>\nE       #21 0x5593f0b9b044 <unknown>\nE       #22 0x7f13f1294ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Start test of button [Sell] in Indices table - 'CFDs table' ","time":{"start":1709291691715,"stop":1709291696125,"duration":4410},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"/trade-cac#\" class=\"main__tab--item \" data-id=\"risers\">...</a> is not clickable at point (405, 322). Other element would receive the click: <div class=\"list-webinar js-tips-all\">...</div>\n  (Session info: chrome=122.0.6261.69)\nStacktrace:\n#0 0x5593f0b9be93 <unknown>\n#1 0x5593f0893ce6 <unknown>\n#2 0x5593f08e5a73 <unknown>\n#3 0x5593f08e398e <unknown>\n#4 0x5593f08e1367 <unknown>\n#5 0x5593f08e0732 <unknown>\n#6 0x5593f08d3d27 <unknown>\n#7 0x5593f0900eb2 <unknown>\n#8 0x5593f08d36b8 <unknown>\n#9 0x5593f090107e <unknown>\n#10 0x5593f091f899 <unknown>\n#11 0x5593f0900c53 <unknown>\n#12 0x5593f08d1db3 <unknown>\n#13 0x5593f08d277e <unknown>\n#14 0x5593f0b617cb <unknown>\n#15 0x5593f0b657e5 <unknown>\n#16 0x5593f0b4f0e1 <unknown>\n#17 0x5593f0b66372 <unknown>\n#18 0x5593f0b331bf <unknown>\n#19 0x5593f0b8a488 <unknown>\n#20 0x5593f0b8a683 <unknown>\n#21 0x5593f0b9b044 <unknown>\n#22 0x7f13f1294ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_11_Education/US_11-02-06_Indices_trading/us_11-02-06-01_indices_trading_test.py\", line 293, in test_09_indices_cfds_table_block_button_sell\n    test_element.full_test(d, cur_language, cur_country, cur_role, cur_item_link, cur_tab)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/IndicesTableSellButton.py\", line 37, in full_test\n    item_list = self.arrange_(d, cur_item_link, cur_tab)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/IndicesTableSellButton.py\", line 100, in arrange_\n    self.current_tab.click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"2024-03-01 11:10:20.817682   Start Building dynamic arguments for allure report generation","time":{"start":1709291691715,"stop":1709291691716,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"9c5cebb03078ce24782439d5ece00f99\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"us","value":"'11.02.06'"},{"name":"desc_us","value":"'Education > Menu item [Indices Trading]'"},{"name":"num_tc","value":"'.01_09'"},{"name":"desc_tc","value":"'Testing 2 random buttons [Sell] in Indices tableand in top_risers tab'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-03-01 11:10:20.817404   Set preconditions","time":{"start":1709291691716,"stop":1709291695027,"duration":3311},"status":"passed","steps":[{"name":"2024-03-01 11:10:20.816311   Start Checking Captcha","time":{"start":1709291691927,"stop":1709291692966,"duration":1039},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"2024-03-01 11:10:20.816311   Start Checking Captcha","time":{"start":1709291692966,"stop":1709291693997,"duration":1031},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"2024-03-01 11:10:20.816311   Start Checking Captcha","time":{"start":1709291693997,"stop":1709291695027,"duration":1030},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"9c5cebb03078ce24782439d5ece00f99\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"9c5cebb03078ce24782439d5ece00f99\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_item_link","value":"'https://capital.com/trade-cac'"},{"name":"cur_tab","value":"'top_risers'"}],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"fdb772077064c41b","name":"Screenshot","source":"fdb772077064c41b.png","type":"image/png","size":89532},{"uid":"aa955fac6c9b196c","name":"stdout","source":"aa955fac6c9b196c.txt","type":"text/plain","size":1671}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1709292274803,"stop":1709292274934,"duration":131},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_11.02.06 | Education > Menu item [Indices Trading]"},{"name":"feature","value":"Language: en"},{"name":"story","value":"Country: au / Role: NoAuth"},{"name":"tag","value":"test_09"},{"name":"tag","value":"us_11_02_06_01"},{"name":"parentSuite","value":"tests.US_11_Education.US_11-02-06_Indices_trading"},{"name":"suite","value":"us_11-02-06-01_indices_trading_test"},{"name":"subSuite","value":"TestIndicesTrading"},{"name":"host","value":"fv-az1206-721"},{"name":"thread","value":"27522-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_11_Education.US_11-02-06_Indices_trading.us_11-02-06-01_indices_trading_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'au'"},{"name":"cur_item_link","value":"'https://capital.com/trade-cac'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_tab","value":"'top_risers'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["test_09","us_11_02_06_01"]},"source":"5b7513b6c2b10e7b.json","parameterValues":["'au'","'https://capital.com/trade-cac'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoAuth'","'top_risers'","'Chrome'"]}