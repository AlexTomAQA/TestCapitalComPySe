{"uid":"a9a7f9c90a73950","name":"TC_55!322b (Lang: en) | Bid:55!322b-en.ae.NoReg","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_322b","historyId":"8a51d23e98d4a4f52961d5e96fb55d2a","time":{"start":1737077517678,"stop":1737077540876,"duration":23198},"description":"\n        Check: Clicking [numeric values] in the Buy column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        ","descriptionHtml":"<pre><code>    Check: Clicking [numeric values] in the Buy column in Menu tittle Markets does not open the\n            Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n            English or Arabic language.\n    Language: EN, AR\n    License: SCA\n    Author: Kasila\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","statusTrace":"self = <pages.BugsManual.bug_322.AssertTPI object at 0x7fd8a90f9940>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab8ab64c2f7a558a2f4c46c4aa58f10e\")>\n\n    def assert_signup(self, d):\n        print(f\"\\n{datetime.now()}   3. Assert\")\n    \n        try:\n>           signup_form = self.driver.find_element(By.XPATH, '//strong/span[contains(text(), \"Sign up\")]')\n\npages/BugsManual/bug_322.py:107: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd8a90c7230>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#17 0x55bb01350076 \\\\u003Cunknown>\\\\n#18 0x7ffa0f49ca94 \\\\u003Cunknown>\\\\n#19 0x7ffa0f529c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//strong/span[contains(text(), \"Sign up\")]\"}\nE         (Session info: chrome=131.0.6778.204); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55bb013511fa <unknown>\nE       #1 0x55bb00e61810 <unknown>\nE       #2 0x55bb00eb0506 <unknown>\nE       #3 0x55bb00eb07a1 <unknown>\nE       #4 0x55bb00ef5c24 <unknown>\nE       #5 0x55bb00ed45ad <unknown>\nE       #6 0x55bb00ef3007 <unknown>\nE       #7 0x55bb00ed4323 <unknown>\nE       #8 0x55bb00ea2de0 <unknown>\nE       #9 0x55bb00ea3dbe <unknown>\nE       #10 0x55bb0131d12b <unknown>\nE       #11 0x55bb013210c7 <unknown>\nE       #12 0x55bb0130a6cc <unknown>\nE       #13 0x55bb01321c47 <unknown>\nE       #14 0x55bb012ef67f <unknown>\nE       #15 0x55bb01340288 <unknown>\nE       #16 0x55bb01340450 <unknown>\nE       #17 0x55bb01350076 <unknown>\nE       #18 0x7ffa0f49ca94 <unknown>\nE       #19 0x7ffa0f529c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7fd8a9e62ab0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab8ab64c2f7a558a2f4c46c4aa58f10e\")>\ncur_language = '', cur_country = 'ae', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ntitle_instrument = ''\n\n    @allure.step(\n        'Start retest manual AT_55!322b that the Sign Up/Login/page of the corresponding trading instrument on '\n        'the trading platform is opened after clicking [numeric values] in the Buy column.')\n    @pytest.mark.parametrize('cur_language', ['', 'ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('title_instrument', [''])\n    @pytest.mark.bug_322b\n    def test_322b(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, title_instrument):\n        \"\"\"\n        Check: Clicking [numeric values] in the Buy column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"322b\", 'The Sign Up/Login/page of the corresponding trading instrument on the trading platform'\n                   ' is not opened after clicking [numeric values] in the Buy column'\n        )\n    \n        match cur_language:\n            case '':\n                link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_buy(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n>                       test_element.assert_signup(d)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:319: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_322.py:113: in assert_signup\n    Common.pytest_fail(\"Bug # 55!322 \"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 55!322 \\nExpected result: Sign Up form is opened\\nActual result: Sign Up form is not opened'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 55!322 \nE    Expected result: Sign Up form is opened\nE    Actual result: Sign Up form is not opened\n\npages/common.py:235: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1737076429715,"stop":1737076430699,"duration":984},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1737076430699,"stop":1737076430699,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1737076430699,"stop":1737076430699,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1737076430699,"stop":1737076430699,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Clicking [numeric values] in the Buy column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        ","status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","statusTrace":"self = <pages.BugsManual.bug_322.AssertTPI object at 0x7fd8a90f9940>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab8ab64c2f7a558a2f4c46c4aa58f10e\")>\n\n    def assert_signup(self, d):\n        print(f\"\\n{datetime.now()}   3. Assert\")\n    \n        try:\n>           signup_form = self.driver.find_element(By.XPATH, '//strong/span[contains(text(), \"Sign up\")]')\n\npages/BugsManual/bug_322.py:107: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd8a90c7230>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#17 0x55bb01350076 \\\\u003Cunknown>\\\\n#18 0x7ffa0f49ca94 \\\\u003Cunknown>\\\\n#19 0x7ffa0f529c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//strong/span[contains(text(), \"Sign up\")]\"}\nE         (Session info: chrome=131.0.6778.204); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55bb013511fa <unknown>\nE       #1 0x55bb00e61810 <unknown>\nE       #2 0x55bb00eb0506 <unknown>\nE       #3 0x55bb00eb07a1 <unknown>\nE       #4 0x55bb00ef5c24 <unknown>\nE       #5 0x55bb00ed45ad <unknown>\nE       #6 0x55bb00ef3007 <unknown>\nE       #7 0x55bb00ed4323 <unknown>\nE       #8 0x55bb00ea2de0 <unknown>\nE       #9 0x55bb00ea3dbe <unknown>\nE       #10 0x55bb0131d12b <unknown>\nE       #11 0x55bb013210c7 <unknown>\nE       #12 0x55bb0130a6cc <unknown>\nE       #13 0x55bb01321c47 <unknown>\nE       #14 0x55bb012ef67f <unknown>\nE       #15 0x55bb01340288 <unknown>\nE       #16 0x55bb01340450 <unknown>\nE       #17 0x55bb01350076 <unknown>\nE       #18 0x7ffa0f49ca94 <unknown>\nE       #19 0x7ffa0f529c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7fd8a9e62ab0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab8ab64c2f7a558a2f4c46c4aa58f10e\")>\ncur_language = '', cur_country = 'ae', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ntitle_instrument = ''\n\n    @allure.step(\n        'Start retest manual AT_55!322b that the Sign Up/Login/page of the corresponding trading instrument on '\n        'the trading platform is opened after clicking [numeric values] in the Buy column.')\n    @pytest.mark.parametrize('cur_language', ['', 'ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('title_instrument', [''])\n    @pytest.mark.bug_322b\n    def test_322b(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, title_instrument):\n        \"\"\"\n        Check: Clicking [numeric values] in the Buy column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"322b\", 'The Sign Up/Login/page of the corresponding trading instrument on the trading platform'\n                   ' is not opened after clicking [numeric values] in the Buy column'\n        )\n    \n        match cur_language:\n            case '':\n                link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_buy(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n>                       test_element.assert_signup(d)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:319: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_322.py:113: in assert_signup\n    Common.pytest_fail(\"Bug # 55!322 \"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 55!322 \\nExpected result: Sign Up form is opened\\nActual result: Sign Up form is not opened'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 55!322 \nE    Expected result: Sign Up form is opened\nE    Actual result: Sign Up form is not opened\n\npages/common.py:235: Failed","steps":[{"name":"Start retest manual AT_55!322b that the Sign Up/Login/page of the corresponding trading instrument on the trading platform is opened after clicking [numeric values] in the Buy column.","time":{"start":1737077517678,"stop":1737077540876,"duration":23198},"status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py\", line 319, in test_322b\n    test_element.assert_signup(d)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_322.py\", line 113, in assert_signup\n    Common.pytest_fail(\"Bug # 55!322 \"\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/common.py\", line 235, in pytest_fail\n    pytest.fail(msg)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1737077517678,"stop":1737077517694,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab8ab64c2f7a558a2f4c46c4aa58f10e\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoReg'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'322b'"},{"name":"desc_tc","value":"'The Sign Up/Login/page of the corresponding trading instrument on the trading platform is not opened after clicking [numeric values] in the Buy column'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1737077517694,"stop":1737077527301,"duration":9607},"status":"passed","steps":[{"name":"2025-01-17 01:13:49.680931   Set language and country","time":{"start":1737077524971,"stop":1737077527296,"duration":2325},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab8ab64c2f7a558a2f4c46c4aa58f10e\")>"},{"name":"cur_language","value":"'en'"},{"name":"cur_country","value":"'ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab8ab64c2f7a558a2f4c46c4aa58f10e\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Trading\" menu, \"Trading\" submenu","time":{"start":1737077527301,"stop":1737077535691,"duration":8390},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab8ab64c2f7a558a2f4c46c4aa58f10e\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"link","value":"'https://capital.com/en-ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2025-01-17 01:13:49.525555   1. Start test that the Clicking [numeric values] in the Sell column in Menu tittle Markets opens the Sign-Up /Login form or page of the corresponding trading instrument on the trading platform.","time":{"start":1737077535691,"stop":1737077535710,"duration":19},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab8ab64c2f7a558a2f4c46c4aa58f10e\")>"},{"name":"cur_item_link","value":"'https://capital.com/en-ae/markets'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab8ab64c2f7a558a2f4c46c4aa58f10e\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"title_instrument","value":"''"}],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"497188e5cad466ef","name":"Screenshot","source":"497188e5cad466ef.png","type":"image/png","size":145179},{"uid":"87dbc56eef47fdef","name":"stdout","source":"87dbc56eef47fdef.txt","type":"text/plain","size":4959}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1737079613225,"stop":1737079613653,"duration":428},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!322b | The Sign Up/Login/page of the corresponding trading instrument on the trading platform is not opened after clicking [numeric values] in the Buy column"},{"name":"feature","value":"Role: NoReg"},{"name":"story","value":"Country: ae"},{"name":"tag","value":"bug_322b"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az1982-988"},{"name":"thread","value":"28153-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoReg'"},{"name":"d","value":"'Chrome'"},{"name":"title_instrument","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":83,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":83},"items":[{"uid":"cec3dab0812204af","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/290//#testresult/cec3dab0812204af","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1736990062761,"stop":1736990085953,"duration":23192}},{"uid":"67a0913197d483cf","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/289//#testresult/67a0913197d483cf","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1736903017747,"stop":1736903040956,"duration":23209}},{"uid":"25de42c4c1d3d41c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/288//#testresult/25de42c4c1d3d41c","status":"failed","statusDetails":"AssertionError: Button [Accept all cookies] is not visible after 30 sec.","time":{"start":1736814117184,"stop":1736814152575,"duration":35391}},{"uid":"26209954bc30436a","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/287//#testresult/26209954bc30436a","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1736731302326,"stop":1736731324913,"duration":22587}},{"uid":"fcf69e6adbeb6ac9","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/286//#testresult/fcf69e6adbeb6ac9","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1736643945460,"stop":1736643968841,"duration":23381}},{"uid":"267bff6d01c490f0","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/285//#testresult/267bff6d01c490f0","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1736557237286,"stop":1736557260797,"duration":23511}},{"uid":"d465b2082e415a4b","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/284//#testresult/d465b2082e415a4b","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1736470891696,"stop":1736470915156,"duration":23460}},{"uid":"8a85cad64dce322","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/283//#testresult/8a85cad64dce322","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1736384948796,"stop":1736384972025,"duration":23229}},{"uid":"15879827aac4b5be","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/282//#testresult/15879827aac4b5be","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1736299649828,"stop":1736299673190,"duration":23362}},{"uid":"4eb0a28679d746a6","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/281//#testresult/4eb0a28679d746a6","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1736211933331,"stop":1736211956331,"duration":23000}},{"uid":"d9e5c35cb3441504","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/280//#testresult/d9e5c35cb3441504","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1736125886767,"stop":1736125910171,"duration":23404}},{"uid":"673503afcabddc65","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/279//#testresult/673503afcabddc65","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1736039390679,"stop":1736039413707,"duration":23028}},{"uid":"58d330823af673c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/278//#testresult/58d330823af673c","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1735952399366,"stop":1735952422488,"duration":23122}},{"uid":"b64bcd0fbada75f3","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/277//#testresult/b64bcd0fbada75f3","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1735867338733,"stop":1735867361934,"duration":23201}},{"uid":"53a986640edd6f9c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/276//#testresult/53a986640edd6f9c","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1735780139235,"stop":1735780162455,"duration":23220}},{"uid":"6a3c5333fe8239df","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/275//#testresult/6a3c5333fe8239df","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1735694196847,"stop":1735694219966,"duration":23119}},{"uid":"4ba2bf2e109fd13f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/274//#testresult/4ba2bf2e109fd13f","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1735607816455,"stop":1735607839918,"duration":23463}},{"uid":"a1fe9be8655307a4","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/273//#testresult/a1fe9be8655307a4","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1735519902884,"stop":1735519926231,"duration":23347}},{"uid":"a985318cc4895a43","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/272//#testresult/a985318cc4895a43","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1735434128229,"stop":1735434152258,"duration":24029}},{"uid":"fdae02a32a0614c7","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/271//#testresult/fdae02a32a0614c7","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Sign Up form is opened\nActual result: Sign Up form is not opened","time":{"start":1735347928690,"stop":1735347952030,"duration":23340}}]},"tags":["us_55","bug_322b"]},"source":"a9a7f9c90a73950.json","parameterValues":["'ae'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoReg'","'Chrome'","''"]}