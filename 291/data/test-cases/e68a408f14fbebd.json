{"uid":"e68a408f14fbebd","name":"TC_55!322a (Lang: ar) | Bid:55!322a-ar.ae.NoAuth","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_322a","historyId":"3d4afb50abd913337e0f730980af706b","time":{"start":1737077499109,"stop":1737077517400,"duration":18291},"description":"\n        Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        ","descriptionHtml":"<pre><code>    Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n            Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n            English or Arabic language.\n    Language: EN, AR\n    License: SCA\n    Author: Kasila\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","statusTrace":"self = <pages.BugsManual.bug_322.AssertTPI object at 0x7fd8a90c5e80>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab8ab64c2f7a558a2f4c46c4aa58f10e\")>\n\n    def assert_login(self, d):\n        print(f\"\\n{datetime.now()}   3. Assert\")\n    \n        try:\n>           login_form = self.driver.find_element(By.XPATH, '//strong/span[contains(text(), \"Login\")]')\n\npages/BugsManual/bug_322.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd8a90c7230>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#17 0x55bb01350076 \\\\u003Cunknown>\\\\n#18 0x7ffa0f49ca94 \\\\u003Cunknown>\\\\n#19 0x7ffa0f529c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//strong/span[contains(text(), \"Login\")]\"}\nE         (Session info: chrome=131.0.6778.204); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55bb013511fa <unknown>\nE       #1 0x55bb00e61810 <unknown>\nE       #2 0x55bb00eb0506 <unknown>\nE       #3 0x55bb00eb07a1 <unknown>\nE       #4 0x55bb00ef5c24 <unknown>\nE       #5 0x55bb00ed45ad <unknown>\nE       #6 0x55bb00ef3007 <unknown>\nE       #7 0x55bb00ed4323 <unknown>\nE       #8 0x55bb00ea2de0 <unknown>\nE       #9 0x55bb00ea3dbe <unknown>\nE       #10 0x55bb0131d12b <unknown>\nE       #11 0x55bb013210c7 <unknown>\nE       #12 0x55bb0130a6cc <unknown>\nE       #13 0x55bb01321c47 <unknown>\nE       #14 0x55bb012ef67f <unknown>\nE       #15 0x55bb01340288 <unknown>\nE       #16 0x55bb01340450 <unknown>\nE       #17 0x55bb01350076 <unknown>\nE       #18 0x7ffa0f49ca94 <unknown>\nE       #19 0x7ffa0f529c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7fd8a9e62420>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab8ab64c2f7a558a2f4c46c4aa58f10e\")>\ncur_language = 'ar', cur_country = 'ae', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ntitle_instrument = ''\n\n    @allure.step(\n        'Start retest manual AT_55!322a that the Sign Up/Login/page of the corresponding trading instrument on '\n        'the trading platform is opened after clicking [numeric values] in the Sell column.')\n    @pytest.mark.parametrize('cur_language', ['', 'ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('title_instrument', [''])\n    @pytest.mark.bug_322a\n    def test_322a(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, title_instrument):\n        \"\"\"\n        Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"322a\", 'The Sign Up/Login/page of the corresponding trading instrument on the trading platform'\n                   ' is not opened after clicking [numeric values] in the Sell column'\n        )\n    \n        match cur_language:\n            case '':\n                link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_sell(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n                        test_element.assert_signup(d)\n                    case 'NoAuth':\n                        test_element.assert_login(d)\n                    case 'Auth':\n                        test_element.assert_tpi(d, title_instrument)\n            case 'ar':\n                link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_sell(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n                        test_element.assert_signup(d)\n                    case 'NoAuth':\n>                       test_element.assert_login(d)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:279: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_322.py:129: in assert_login\n    Common.pytest_fail(\"Bug # 55!322 \"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 55!322 \\nExpected result: Login form is opened\\nActual result: Login form is not opened'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 55!322 \nE    Expected result: Login form is opened\nE    Actual result: Login form is not opened\n\npages/common.py:235: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1737076429715,"stop":1737076430699,"duration":984},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1737076430699,"stop":1737076430699,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1737076430699,"stop":1737076430699,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1737076430699,"stop":1737076430699,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        ","status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","statusTrace":"self = <pages.BugsManual.bug_322.AssertTPI object at 0x7fd8a90c5e80>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab8ab64c2f7a558a2f4c46c4aa58f10e\")>\n\n    def assert_login(self, d):\n        print(f\"\\n{datetime.now()}   3. Assert\")\n    \n        try:\n>           login_form = self.driver.find_element(By.XPATH, '//strong/span[contains(text(), \"Login\")]')\n\npages/BugsManual/bug_322.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd8a90c7230>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#17 0x55bb01350076 \\\\u003Cunknown>\\\\n#18 0x7ffa0f49ca94 \\\\u003Cunknown>\\\\n#19 0x7ffa0f529c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//strong/span[contains(text(), \"Login\")]\"}\nE         (Session info: chrome=131.0.6778.204); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55bb013511fa <unknown>\nE       #1 0x55bb00e61810 <unknown>\nE       #2 0x55bb00eb0506 <unknown>\nE       #3 0x55bb00eb07a1 <unknown>\nE       #4 0x55bb00ef5c24 <unknown>\nE       #5 0x55bb00ed45ad <unknown>\nE       #6 0x55bb00ef3007 <unknown>\nE       #7 0x55bb00ed4323 <unknown>\nE       #8 0x55bb00ea2de0 <unknown>\nE       #9 0x55bb00ea3dbe <unknown>\nE       #10 0x55bb0131d12b <unknown>\nE       #11 0x55bb013210c7 <unknown>\nE       #12 0x55bb0130a6cc <unknown>\nE       #13 0x55bb01321c47 <unknown>\nE       #14 0x55bb012ef67f <unknown>\nE       #15 0x55bb01340288 <unknown>\nE       #16 0x55bb01340450 <unknown>\nE       #17 0x55bb01350076 <unknown>\nE       #18 0x7ffa0f49ca94 <unknown>\nE       #19 0x7ffa0f529c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7fd8a9e62420>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab8ab64c2f7a558a2f4c46c4aa58f10e\")>\ncur_language = 'ar', cur_country = 'ae', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ntitle_instrument = ''\n\n    @allure.step(\n        'Start retest manual AT_55!322a that the Sign Up/Login/page of the corresponding trading instrument on '\n        'the trading platform is opened after clicking [numeric values] in the Sell column.')\n    @pytest.mark.parametrize('cur_language', ['', 'ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('title_instrument', [''])\n    @pytest.mark.bug_322a\n    def test_322a(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, title_instrument):\n        \"\"\"\n        Check: Clicking [numeric values] in the Sell column in Menu tittle Markets does not open the\n                Sign-Up /Login form or page of the corresponding trading instrument on the trading platform using\n                English or Arabic language.\n        Language: EN, AR\n        License: SCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"322a\", 'The Sign Up/Login/page of the corresponding trading instrument on the trading platform'\n                   ' is not opened after clicking [numeric values] in the Sell column'\n        )\n    \n        match cur_language:\n            case '':\n                link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_sell(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n                        test_element.assert_signup(d)\n                    case 'NoAuth':\n                        test_element.assert_login(d)\n                    case 'Auth':\n                        test_element.assert_tpi(d, title_instrument)\n            case 'ar':\n                link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n                menu = MenuNewMarkets(d, link)\n                cur_item_link = menu.from_markets_menu_open_markets(d, cur_language, cur_country, link)\n                test_element = TradingInstrumentsMarkets(d, cur_item_link, bid)\n                test_element.trading_instruments(d, cur_item_link)\n                test_element.click_button_sell(d)\n                test_element = AssertTPI(d, cur_item_link, title_instrument)\n                match cur_role:\n                    case 'NoReg':\n                        test_element.assert_signup(d)\n                    case 'NoAuth':\n>                       test_element.assert_login(d)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:279: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_322.py:129: in assert_login\n    Common.pytest_fail(\"Bug # 55!322 \"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = 'Bug # 55!322 \\nExpected result: Login form is opened\\nActual result: Login form is not opened'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: Bug # 55!322 \nE    Expected result: Login form is opened\nE    Actual result: Login form is not opened\n\npages/common.py:235: Failed","steps":[{"name":"Start retest manual AT_55!322a that the Sign Up/Login/page of the corresponding trading instrument on the trading platform is opened after clicking [numeric values] in the Sell column.","time":{"start":1737077499109,"stop":1737077517399,"duration":18290},"status":"failed","statusMessage":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py\", line 279, in test_322a\n    test_element.assert_login(d)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_322.py\", line 129, in assert_login\n    Common.pytest_fail(\"Bug # 55!322 \"\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/common.py\", line 235, in pytest_fail\n    pytest.fail(msg)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1737077499110,"stop":1737077499112,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab8ab64c2f7a558a2f4c46c4aa58f10e\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'322a'"},{"name":"desc_tc","value":"'The Sign Up/Login/page of the corresponding trading instrument on the trading platform is not opened after clicking [numeric values] in the Sell column'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1737077499112,"stop":1737077503895,"duration":4783},"status":"passed","steps":[{"name":"2025-01-17 01:13:49.680931   Set language and country","time":{"start":1737077501436,"stop":1737077503890,"duration":2454},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab8ab64c2f7a558a2f4c46c4aa58f10e\")>"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab8ab64c2f7a558a2f4c46c4aa58f10e\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Trading\" menu, \"Trading\" submenu","time":{"start":1737077503895,"stop":1737077512209,"duration":8314},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab8ab64c2f7a558a2f4c46c4aa58f10e\")>"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"link","value":"'https://capital.com/ar-ae'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2025-01-17 01:13:49.525555   1. Start test that the Clicking [numeric values] in the Sell column in Menu tittle Markets opens the Sign-Up /Login form or page of the corresponding trading instrument on the trading platform.","time":{"start":1737077512209,"stop":1737077512229,"duration":20},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab8ab64c2f7a558a2f4c46c4aa58f10e\")>"},{"name":"cur_item_link","value":"'https://capital.com/ar-ae/markets'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ab8ab64c2f7a558a2f4c46c4aa58f10e\")>"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"title_instrument","value":"''"}],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9172053663d54a51","name":"Screenshot","source":"9172053663d54a51.png","type":"image/png","size":141517},{"uid":"8b770c072526aace","name":"stdout","source":"8b770c072526aace.txt","type":"text/plain","size":3958}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1737079613225,"stop":1737079613653,"duration":428},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!322a | The Sign Up/Login/page of the corresponding trading instrument on the trading platform is not opened after clicking [numeric values] in the Sell column"},{"name":"feature","value":"Role: NoAuth"},{"name":"story","value":"Country: ae"},{"name":"tag","value":"bug_322a"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az1982-988"},{"name":"thread","value":"28153-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"'ar'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"d","value":"'Chrome'"},{"name":"title_instrument","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":75,"broken":8,"skipped":0,"passed":0,"unknown":0,"total":83},"items":[{"uid":"885b782828306a25","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/290//#testresult/885b782828306a25","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1736990044050,"stop":1736990062422,"duration":18372}},{"uid":"1490cb9f4b260f9c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/289//#testresult/1490cb9f4b260f9c","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1736902999157,"stop":1736903017466,"duration":18309}},{"uid":"2bbc619f99ee6623","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/288//#testresult/2bbc619f99ee6623","status":"failed","statusDetails":"AssertionError: Button [Accept all cookies] is not visible after 30 sec.","time":{"start":1736814081300,"stop":1736814116723,"duration":35423}},{"uid":"760e45d3d57891b0","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/287//#testresult/760e45d3d57891b0","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1736731283752,"stop":1736731302009,"duration":18257}},{"uid":"b506f9bb55f339ff","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/286//#testresult/b506f9bb55f339ff","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1736643926813,"stop":1736643945193,"duration":18380}},{"uid":"d968148c84bee251","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/285//#testresult/d968148c84bee251","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1736557218717,"stop":1736557237012,"duration":18295}},{"uid":"723f4aede99b73bc","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/284//#testresult/723f4aede99b73bc","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1736470873254,"stop":1736470891368,"duration":18114}},{"uid":"41170a139e68d70a","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/283//#testresult/41170a139e68d70a","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1736384929961,"stop":1736384948489,"duration":18528}},{"uid":"a0c59ef727ce703c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/282//#testresult/a0c59ef727ce703c","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1736299630896,"stop":1736299649547,"duration":18651}},{"uid":"f4624f45b8315810","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/281//#testresult/f4624f45b8315810","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1736211914634,"stop":1736211933046,"duration":18412}},{"uid":"3bec326c2a88fa2d","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/280//#testresult/3bec326c2a88fa2d","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1736125867493,"stop":1736125886417,"duration":18924}},{"uid":"2d364f04f877de3e","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/279//#testresult/2d364f04f877de3e","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1736039372029,"stop":1736039390390,"duration":18361}},{"uid":"1a86433e3a45205a","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/278//#testresult/1a86433e3a45205a","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1735952380860,"stop":1735952399075,"duration":18215}},{"uid":"1fae13788c0a2306","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/277//#testresult/1fae13788c0a2306","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1735867313948,"stop":1735867338413,"duration":24465}},{"uid":"707033b88fb6c0d7","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/276//#testresult/707033b88fb6c0d7","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1735780120633,"stop":1735780138950,"duration":18317}},{"uid":"94e58cfc581f40","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/275//#testresult/94e58cfc581f40","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1735694178265,"stop":1735694196518,"duration":18253}},{"uid":"26857eea6e9a8c51","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/274//#testresult/26857eea6e9a8c51","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1735607797561,"stop":1735607816172,"duration":18611}},{"uid":"d4747991a2f38f60","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/273//#testresult/d4747991a2f38f60","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1735519884136,"stop":1735519902577,"duration":18441}},{"uid":"386cd114f559a168","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/272//#testresult/386cd114f559a168","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1735434109578,"stop":1735434127941,"duration":18363}},{"uid":"539c7390a76ea8d9","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/271//#testresult/539c7390a76ea8d9","status":"failed","statusDetails":"Failed: Bug # 55!322 \nExpected result: Login form is opened\nActual result: Login form is not opened","time":{"start":1735347910092,"stop":1735347928421,"duration":18329}}]},"tags":["us_55","bug_322a"]},"source":"e68a408f14fbebd.json","parameterValues":["'ae'","'ar'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoAuth'","'Chrome'","''"]}