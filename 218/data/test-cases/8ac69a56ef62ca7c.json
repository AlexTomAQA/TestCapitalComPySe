{"uid":"8ac69a56ef62ca7c","name":"TC_11.02.02.01_06 | Testing button [Trade] in Most traded block. Bid:11.02.02.01_06-fr.ae.NoReg","fullName":"tests.US_11_Education.US_11-02-02_Shares_trading.US_11-02-02-01_Shares_trading_test.TestSharesTradingItems#test_06_most_traded_trade_button","historyId":"35d0a7c5c1a7fa5795cb8cf3ca9f67d7","time":{"start":1706687763792,"stop":1706687770063,"duration":6271},"description":"\n        Check: Button [Trade] in Most traded block\n        Language: All (Except: EL, HU, NL). License: All (Except: FCA).\n        ","descriptionHtml":"<pre><code>    Check: Button [Trade] in Most traded block\n    Language: All (Except: EL, HU, NL). License: All (Except: FCA).\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.JavascriptException: Message: javascript error: Cannot read properties of undefined (reading 'classList')\n  (Session info: chrome=121.0.6167.85)\nStacktrace:\n#0 0x5637867fdd93 <unknown>\n#1 0x5637864e1337 <unknown>\n#2 0x5637864e669a <unknown>\n#3 0x5637864e8c47 <unknown>\n#4 0x56378656f05a <unknown>\n#5 0x56378654f442 <unknown>\n#6 0x56378656e12d <unknown>\n#7 0x56378654f1e3 <unknown>\n#8 0x56378651f135 <unknown>\n#9 0x56378652013e <unknown>\n#10 0x5637867c1e4b <unknown>\n#11 0x5637867c5dfa <unknown>\n#12 0x5637867ae6d5 <unknown>\n#13 0x5637867c6a6f <unknown>\n#14 0x56378679269f <unknown>\n#15 0x5637867eb098 <unknown>\n#16 0x5637867eb262 <unknown>\n#17 0x5637867fcf34 <unknown>\n#18 0x7fe27aa94ac3 <unknown>","statusTrace":"self = <US_11-02-02-01_Shares_trading_test.TestSharesTradingItems object at 0x7f5d6f733390>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"518fdbd57105478285aae4029c5b02a6\")>\ncur_language = 'fr', cur_country = 'ae', cur_role = 'NoReg'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\ncur_item_link = 'https://capital.com/fr/trading-amazon'\n\n    @allure.step(\"Start test of buttons [Trade] in Most traded block\")\n    # @pytest.mark.skip(reason=\"Skipped for debugging\")\n    @pytest.mark.test_06\n    def test_06_most_traded_trade_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password,\n            cur_item_link):\n        \"\"\"\n        Check: Button [Trade] in Most traded block\n        Language: All (Except: EL, HU, NL). License: All (Except: FCA).\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"11.02.02\", \"Education > Menu item [Shares trading]\",\n            \".01_06\", \"Testing button [Trade] in Most traded block\")\n    \n        check_language(cur_language)\n        check_country(cur_country)\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = ButtonTradeOnWidgetMostTraded(d, cur_item_link, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link)\n\ntests/US_11_Education/US_11-02-02_Shares_trading/US_11-02-02-01_Shares_trading_test.py:201: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/ButtonTradeOnWidgetMostTraded.py:34: in full_test_with_tpi\n    trade_instrument = self.element_click_v4(index)\npages/Elements/ButtonTradeOnWidgetMostTraded.py:118: in element_click_v4\n    self.driver.execute_script('document.getElementsByClassName(\"js-mostTraded\")[0].'\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:407: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f5d6f866310>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"javascript error\",\"message\":\"javascript error: Cannot read properties of ...\\\\n#16 0x5637867eb262 \\\\u003Cunknown>\\\\n#17 0x5637867fcf34 \\\\u003Cunknown>\\\\n#18 0x7fe27aa94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.JavascriptException: Message: javascript error: Cannot read properties of undefined (reading 'classList')\nE         (Session info: chrome=121.0.6167.85)\nE       Stacktrace:\nE       #0 0x5637867fdd93 <unknown>\nE       #1 0x5637864e1337 <unknown>\nE       #2 0x5637864e669a <unknown>\nE       #3 0x5637864e8c47 <unknown>\nE       #4 0x56378656f05a <unknown>\nE       #5 0x56378654f442 <unknown>\nE       #6 0x56378656e12d <unknown>\nE       #7 0x56378654f1e3 <unknown>\nE       #8 0x56378651f135 <unknown>\nE       #9 0x56378652013e <unknown>\nE       #10 0x5637867c1e4b <unknown>\nE       #11 0x5637867c5dfa <unknown>\nE       #12 0x5637867ae6d5 <unknown>\nE       #13 0x5637867c6a6f <unknown>\nE       #14 0x56378679269f <unknown>\nE       #15 0x5637867eb098 <unknown>\nE       #16 0x5637867eb262 <unknown>\nE       #17 0x5637867fcf34 <unknown>\nE       #18 0x7fe27aa94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: JavascriptException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1706686637826,"stop":1706686638192,"duration":366},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1706686638192,"stop":1706686638192,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1706686638192,"stop":1706686638192,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1706686638192,"stop":1706686638192,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1706686638192,"stop":1706686638192,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1706686638192,"stop":1706686638192,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1706687377579,"stop":1706687377579,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [Trade] in Most traded block\n        Language: All (Except: EL, HU, NL). License: All (Except: FCA).\n        ","status":"broken","statusMessage":"selenium.common.exceptions.JavascriptException: Message: javascript error: Cannot read properties of undefined (reading 'classList')\n  (Session info: chrome=121.0.6167.85)\nStacktrace:\n#0 0x5637867fdd93 <unknown>\n#1 0x5637864e1337 <unknown>\n#2 0x5637864e669a <unknown>\n#3 0x5637864e8c47 <unknown>\n#4 0x56378656f05a <unknown>\n#5 0x56378654f442 <unknown>\n#6 0x56378656e12d <unknown>\n#7 0x56378654f1e3 <unknown>\n#8 0x56378651f135 <unknown>\n#9 0x56378652013e <unknown>\n#10 0x5637867c1e4b <unknown>\n#11 0x5637867c5dfa <unknown>\n#12 0x5637867ae6d5 <unknown>\n#13 0x5637867c6a6f <unknown>\n#14 0x56378679269f <unknown>\n#15 0x5637867eb098 <unknown>\n#16 0x5637867eb262 <unknown>\n#17 0x5637867fcf34 <unknown>\n#18 0x7fe27aa94ac3 <unknown>","statusTrace":"self = <US_11-02-02-01_Shares_trading_test.TestSharesTradingItems object at 0x7f5d6f733390>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"518fdbd57105478285aae4029c5b02a6\")>\ncur_language = 'fr', cur_country = 'ae', cur_role = 'NoReg'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\ncur_item_link = 'https://capital.com/fr/trading-amazon'\n\n    @allure.step(\"Start test of buttons [Trade] in Most traded block\")\n    # @pytest.mark.skip(reason=\"Skipped for debugging\")\n    @pytest.mark.test_06\n    def test_06_most_traded_trade_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password,\n            cur_item_link):\n        \"\"\"\n        Check: Button [Trade] in Most traded block\n        Language: All (Except: EL, HU, NL). License: All (Except: FCA).\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"11.02.02\", \"Education > Menu item [Shares trading]\",\n            \".01_06\", \"Testing button [Trade] in Most traded block\")\n    \n        check_language(cur_language)\n        check_country(cur_country)\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = ButtonTradeOnWidgetMostTraded(d, cur_item_link, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link)\n\ntests/US_11_Education/US_11-02-02_Shares_trading/US_11-02-02-01_Shares_trading_test.py:201: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/ButtonTradeOnWidgetMostTraded.py:34: in full_test_with_tpi\n    trade_instrument = self.element_click_v4(index)\npages/Elements/ButtonTradeOnWidgetMostTraded.py:118: in element_click_v4\n    self.driver.execute_script('document.getElementsByClassName(\"js-mostTraded\")[0].'\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:407: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f5d6f866310>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"javascript error\",\"message\":\"javascript error: Cannot read properties of ...\\\\n#16 0x5637867eb262 \\\\u003Cunknown>\\\\n#17 0x5637867fcf34 \\\\u003Cunknown>\\\\n#18 0x7fe27aa94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.JavascriptException: Message: javascript error: Cannot read properties of undefined (reading 'classList')\nE         (Session info: chrome=121.0.6167.85)\nE       Stacktrace:\nE       #0 0x5637867fdd93 <unknown>\nE       #1 0x5637864e1337 <unknown>\nE       #2 0x5637864e669a <unknown>\nE       #3 0x5637864e8c47 <unknown>\nE       #4 0x56378656f05a <unknown>\nE       #5 0x56378654f442 <unknown>\nE       #6 0x56378656e12d <unknown>\nE       #7 0x56378654f1e3 <unknown>\nE       #8 0x56378651f135 <unknown>\nE       #9 0x56378652013e <unknown>\nE       #10 0x5637867c1e4b <unknown>\nE       #11 0x5637867c5dfa <unknown>\nE       #12 0x5637867ae6d5 <unknown>\nE       #13 0x5637867c6a6f <unknown>\nE       #14 0x56378679269f <unknown>\nE       #15 0x5637867eb098 <unknown>\nE       #16 0x5637867eb262 <unknown>\nE       #17 0x5637867fcf34 <unknown>\nE       #18 0x7fe27aa94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: JavascriptException","steps":[{"name":"Start test of buttons [Trade] in Most traded block","time":{"start":1706687763793,"stop":1706687770062,"duration":6269},"status":"broken","statusMessage":"selenium.common.exceptions.JavascriptException: Message: javascript error: Cannot read properties of undefined (reading 'classList')\n  (Session info: chrome=121.0.6167.85)\nStacktrace:\n#0 0x5637867fdd93 <unknown>\n#1 0x5637864e1337 <unknown>\n#2 0x5637864e669a <unknown>\n#3 0x5637864e8c47 <unknown>\n#4 0x56378656f05a <unknown>\n#5 0x56378654f442 <unknown>\n#6 0x56378656e12d <unknown>\n#7 0x56378654f1e3 <unknown>\n#8 0x56378651f135 <unknown>\n#9 0x56378652013e <unknown>\n#10 0x5637867c1e4b <unknown>\n#11 0x5637867c5dfa <unknown>\n#12 0x5637867ae6d5 <unknown>\n#13 0x5637867c6a6f <unknown>\n#14 0x56378679269f <unknown>\n#15 0x5637867eb098 <unknown>\n#16 0x5637867eb262 <unknown>\n#17 0x5637867fcf34 <unknown>\n#18 0x7fe27aa94ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_11_Education/US_11-02-02_Shares_trading/US_11-02-02-01_Shares_trading_test.py\", line 201, in test_06_most_traded_trade_button\n    test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_item_link)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/ButtonTradeOnWidgetMostTraded.py\", line 34, in full_test_with_tpi\n    trade_instrument = self.element_click_v4(index)\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/ButtonTradeOnWidgetMostTraded.py\", line 118, in element_click_v4\n    self.driver.execute_script('document.getElementsByClassName(\"js-mostTraded\")[0].'\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 407, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Start Building dynamic arguments for allure report generation","time":{"start":1706687763793,"stop":1706687763797,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"518fdbd57105478285aae4029c5b02a6\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'fr'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoReg'"},{"name":"us","value":"'11.02.02'"},{"name":"desc_us","value":"'Education > Menu item [Shares trading]'"},{"name":"num_tc","value":"'.01_06'"},{"name":"desc_tc","value":"'Testing button [Trade] in Most traded block'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Set preconditions","time":{"start":1706687763797,"stop":1706687767177,"duration":3380},"status":"passed","steps":[{"name":"Start Checking Captcha","time":{"start":1706687764019,"stop":1706687765086,"duration":1067},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Start Checking Captcha","time":{"start":1706687765086,"stop":1706687766118,"duration":1032},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Start Checking Captcha","time":{"start":1706687766118,"stop":1706687767177,"duration":1059},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"518fdbd57105478285aae4029c5b02a6\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'fr'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Click button MOST_TRADED","time":{"start":1706687767216,"stop":1706687769601,"duration":2385},"status":"passed","steps":[{"name":"Check that form [Sign up] opened","time":{"start":1706687767302,"stop":1706687768850,"duration":1548},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"timeout","value":"1"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"random_index","value":"0"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Checking that \"Signup\" opened","time":{"start":1706687769601,"stop":1706687770024,"duration":423},"status":"passed","steps":[{"name":"Check that \"Sign up\" form opened","time":{"start":1706687769601,"stop":1706687769786,"duration":185},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_language","value":"'fr'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Close form [Sign up]","time":{"start":1706687769786,"stop":1706687770024,"duration":238},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"518fdbd57105478285aae4029c5b02a6\")>"},{"name":"cur_language","value":"'fr'"},{"name":"cur_link","value":"'https://capital.com/fr/trading-amazon'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Click button MOST_TRADED","time":{"start":1706687770024,"stop":1706687770061,"duration":37},"status":"broken","statusMessage":"selenium.common.exceptions.JavascriptException: Message: javascript error: Cannot read properties of undefined (reading 'classList')\n  (Session info: chrome=121.0.6167.85)\nStacktrace:\n#0 0x5637867fdd93 <unknown>\n#1 0x5637864e1337 <unknown>\n#2 0x5637864e669a <unknown>\n#3 0x5637864e8c47 <unknown>\n#4 0x56378656f05a <unknown>\n#5 0x56378654f442 <unknown>\n#6 0x56378656e12d <unknown>\n#7 0x56378654f1e3 <unknown>\n#8 0x56378651f135 <unknown>\n#9 0x56378652013e <unknown>\n#10 0x5637867c1e4b <unknown>\n#11 0x5637867c5dfa <unknown>\n#12 0x5637867ae6d5 <unknown>\n#13 0x5637867c6a6f <unknown>\n#14 0x56378679269f <unknown>\n#15 0x5637867eb098 <unknown>\n#16 0x5637867eb262 <unknown>\n#17 0x5637867fcf34 <unknown>\n#18 0x7fe27aa94ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/ButtonTradeOnWidgetMostTraded.py\", line 118, in element_click_v4\n    self.driver.execute_script('document.getElementsByClassName(\"js-mostTraded\")[0].'\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 407, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"random_index","value":"3"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"518fdbd57105478285aae4029c5b02a6\")>"},{"name":"cur_language","value":"'fr'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_item_link","value":"'https://capital.com/fr/trading-amazon'"}],"shouldDisplayMessage":false,"stepsCount":11,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"8e87af9ba1c86a70","name":"Screenshot","source":"8e87af9ba1c86a70.png","type":"image/png","size":217926},{"uid":"6d711bdf554d09e2","name":"log","source":"6d711bdf554d09e2.txt","type":"text/plain","size":1391},{"uid":"a2ea1cad9efa5fdb","name":"stdout","source":"a2ea1cad9efa5fdb.txt","type":"text/plain","size":2597}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":12,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1706689369920,"stop":1706689370088,"duration":168},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_11.02.02 | Education > Menu item [Shares trading]"},{"name":"feature","value":"Language: fr"},{"name":"story","value":"Country: ae / Role: NoReg"},{"name":"tag","value":"test_06"},{"name":"tag","value":"us_11_02_02"},{"name":"parentSuite","value":"tests.US_11_Education.US_11-02-02_Shares_trading"},{"name":"suite","value":"US_11-02-02-01_Shares_trading_test"},{"name":"subSuite","value":"TestSharesTradingItems"},{"name":"host","value":"fv-az849-367"},{"name":"thread","value":"18056-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_11_Education.US_11-02-02_Shares_trading.US_11-02-02-01_Shares_trading_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_item_link","value":"'https://capital.com/fr/trading-amazon'"},{"name":"cur_language","value":"'fr'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_role","value":"'NoReg'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"668a314c82e924ba","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/217//#testresult/668a314c82e924ba","status":"broken","statusDetails":"selenium.common.exceptions.JavascriptException: Message: javascript error: Cannot read properties of undefined (reading 'classList')\n  (Session info: chrome=120.0.6099.224)\nStacktrace:\n#0 0x561d83dc2f83 <unknown>\n#1 0x561d83a7bcf7 <unknown>\n#2 0x561d83a822a3 <unknown>\n#3 0x561d83a84bb4 <unknown>\n#4 0x561d83b14ba3 <unknown>\n#5 0x561d83af50b2 <unknown>\n#6 0x561d83b14006 <unknown>\n#7 0x561d83af4e53 <unknown>\n#8 0x561d83abcdd4 <unknown>\n#9 0x561d83abe1de <unknown>\n#10 0x561d83d87531 <unknown>\n#11 0x561d83d8b455 <unknown>\n#12 0x561d83d73f55 <unknown>\n#13 0x561d83d8c0ef <unknown>\n#14 0x561d83d5799f <unknown>\n#15 0x561d83db0008 <unknown>\n#16 0x561d83db01d7 <unknown>\n#17 0x561d83dc2124 <unknown>\n#18 0x7f80ec294ac3 <unknown>","time":{"start":1706675846601,"stop":1706675851816,"duration":5215}}]},"tags":["test_06","us_11_02_02"]},"source":"8ac69a56ef62ca7c.json","parameterValues":["'ae'","'https://capital.com/fr/trading-amazon'","'fr'","'aqa.tomelo.an@gmail.com'","'iT9Vgqi6d$fiZ*Z'","'NoReg'","'Chrome'"]}