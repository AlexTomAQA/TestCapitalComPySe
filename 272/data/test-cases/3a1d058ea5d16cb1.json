{"uid":"3a1d058ea5d16cb1","name":"TC_00.00_001 | Start test of button [Trade] in Widget 'Trading instrument'. Bid:00.00_001-pl.au.NoAuth","fullName":"tests.US_00_Main_page.US_00-00_Main_page.us_00-00_main_page_test.TestMainPage#test_001_trading_instrument_widget_trade_button","historyId":"323479f38bb111eb1306b9f703ce01ce","time":{"start":1715359149876,"stop":1715359170151,"duration":20275},"description":"\n        Check: Button [Trade] in Widget 'Trading instrument' Main Page\n        Language: ALL. License: Not FCA.\n        ","descriptionHtml":"<pre><code>    Check: Button [Trade] in Widget 'Trading instrument' Main Page\n    Language: ALL. License: Not FCA.\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=124.0.6367.60); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5565e1034e43 <unknown>\n#1 0x5565e0d234e7 <unknown>\n#2 0x5565e0d33554 <unknown>\n#3 0x5565e0d33e5a <unknown>\n#4 0x5565e0d29455 <unknown>\n#5 0x5565e0d33e8b <unknown>\n#6 0x5565e0d29455 <unknown>\n#7 0x5565e0d277f2 <unknown>\n#8 0x5565e0d2aaaa <unknown>\n#9 0x5565e0dafc39 <unknown>\n#10 0x5565e0d90452 <unknown>\n#11 0x5565e0daec29 <unknown>\n#12 0x5565e0d901f3 <unknown>\n#13 0x5565e0d6128a <unknown>\n#14 0x5565e0d61c5e <unknown>\n#15 0x5565e0ff916b <unknown>\n#16 0x5565e0ffd0bb <unknown>\n#17 0x5565e0fe5281 <unknown>\n#18 0x5565e0ffdc22 <unknown>\n#19 0x5565e0fca13f <unknown>\n#20 0x5565e1023f98 <unknown>\n#21 0x5565e1024170 <unknown>\n#22 0x5565e1033f94 <unknown>\n#23 0x7f8091094ac3 <unknown>","statusTrace":"self = <us_00-00_main_page_test.TestMainPage object at 0x7fe0bb136ba0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f9b1ba7664a3110a53f7a893ea604b6a\")>\ncur_language = 'pl', cur_country = 'au', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_market = 'Most_traded'\n\n    @allure.step(\"Start test of button [Trade] in Widget 'Trading instrument'\")\n    @pytest.mark.test_001\n    def test_001_trading_instrument_widget_trade_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_market):\n        \"\"\"\n        Check: Button [Trade] in Widget 'Trading instrument' Main Page\n        Language: ALL. License: Not FCA.\n        \"\"\"\n    \n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"00\", \"Main Page\",\n            \".00_001\", \"Start test of button [Trade] in Widget 'Trading instrument'\",\n            False, False\n        )\n    \n        Common().check_country_in_list_and_skip_if_not_present(\n            cur_country,\n            ['de', 'au', 'ae']\n        )\n        Common().check_market_in_list_and_skip_if_present(cur_market, [\n            'Commodities', 'Indices', 'Shares', 'Forex'\n        ])\n    \n        page_conditions = Conditions(d, \"\")\n        main_page_link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = TradingInstrumentTradeButton(d, main_page_link, bid)\n>       test_element.full_test(d, cur_language, cur_country, cur_role, main_page_link, cur_market)\n\ntests/US_00_Main_page/US_00-00_Main_page/us_00-00_main_page_test.py:332: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/TradingInstrumentTradeButton.py:34: in full_test\n    item_list = self.arrange_(d, cur_item_link, cur_market)\npages/Elements/TradingInstrumentTradeButton.py:104: in arrange_\n    self.driver.execute_script(\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:407: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fe0bb058860>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#21 0x5565e1024170 \\\\u003Cunknown>\\\\n#22 0x5565e1033f94 \\\\u003Cunknown>\\\\n#23 0x7f8091094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome=124.0.6367.60); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x5565e1034e43 <unknown>\nE       #1 0x5565e0d234e7 <unknown>\nE       #2 0x5565e0d33554 <unknown>\nE       #3 0x5565e0d33e5a <unknown>\nE       #4 0x5565e0d29455 <unknown>\nE       #5 0x5565e0d33e8b <unknown>\nE       #6 0x5565e0d29455 <unknown>\nE       #7 0x5565e0d277f2 <unknown>\nE       #8 0x5565e0d2aaaa <unknown>\nE       #9 0x5565e0dafc39 <unknown>\nE       #10 0x5565e0d90452 <unknown>\nE       #11 0x5565e0daec29 <unknown>\nE       #12 0x5565e0d901f3 <unknown>\nE       #13 0x5565e0d6128a <unknown>\nE       #14 0x5565e0d61c5e <unknown>\nE       #15 0x5565e0ff916b <unknown>\nE       #16 0x5565e0ffd0bb <unknown>\nE       #17 0x5565e0fe5281 <unknown>\nE       #18 0x5565e0ffdc22 <unknown>\nE       #19 0x5565e0fca13f <unknown>\nE       #20 0x5565e1023f98 <unknown>\nE       #21 0x5565e1024170 <unknown>\nE       #22 0x5565e1033f94 <unknown>\nE       #23 0x7f8091094ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1715359011488,"stop":1715359018284,"duration":6796},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1715359018284,"stop":1715359018284,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1715359018284,"stop":1715359018285,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1715359018284,"stop":1715359018284,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1715359018285,"stop":1715359018285,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1715359018285,"stop":1715359018285,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1715359149595,"stop":1715359149595,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_market","time":{"start":1715359149876,"stop":1715359149876,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [Trade] in Widget 'Trading instrument' Main Page\n        Language: ALL. License: Not FCA.\n        ","status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=124.0.6367.60); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5565e1034e43 <unknown>\n#1 0x5565e0d234e7 <unknown>\n#2 0x5565e0d33554 <unknown>\n#3 0x5565e0d33e5a <unknown>\n#4 0x5565e0d29455 <unknown>\n#5 0x5565e0d33e8b <unknown>\n#6 0x5565e0d29455 <unknown>\n#7 0x5565e0d277f2 <unknown>\n#8 0x5565e0d2aaaa <unknown>\n#9 0x5565e0dafc39 <unknown>\n#10 0x5565e0d90452 <unknown>\n#11 0x5565e0daec29 <unknown>\n#12 0x5565e0d901f3 <unknown>\n#13 0x5565e0d6128a <unknown>\n#14 0x5565e0d61c5e <unknown>\n#15 0x5565e0ff916b <unknown>\n#16 0x5565e0ffd0bb <unknown>\n#17 0x5565e0fe5281 <unknown>\n#18 0x5565e0ffdc22 <unknown>\n#19 0x5565e0fca13f <unknown>\n#20 0x5565e1023f98 <unknown>\n#21 0x5565e1024170 <unknown>\n#22 0x5565e1033f94 <unknown>\n#23 0x7f8091094ac3 <unknown>","statusTrace":"self = <us_00-00_main_page_test.TestMainPage object at 0x7fe0bb136ba0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f9b1ba7664a3110a53f7a893ea604b6a\")>\ncur_language = 'pl', cur_country = 'au', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\ncur_market = 'Most_traded'\n\n    @allure.step(\"Start test of button [Trade] in Widget 'Trading instrument'\")\n    @pytest.mark.test_001\n    def test_001_trading_instrument_widget_trade_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password, cur_market):\n        \"\"\"\n        Check: Button [Trade] in Widget 'Trading instrument' Main Page\n        Language: ALL. License: Not FCA.\n        \"\"\"\n    \n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"00\", \"Main Page\",\n            \".00_001\", \"Start test of button [Trade] in Widget 'Trading instrument'\",\n            False, False\n        )\n    \n        Common().check_country_in_list_and_skip_if_not_present(\n            cur_country,\n            ['de', 'au', 'ae']\n        )\n        Common().check_market_in_list_and_skip_if_present(cur_market, [\n            'Commodities', 'Indices', 'Shares', 'Forex'\n        ])\n    \n        page_conditions = Conditions(d, \"\")\n        main_page_link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        test_element = TradingInstrumentTradeButton(d, main_page_link, bid)\n>       test_element.full_test(d, cur_language, cur_country, cur_role, main_page_link, cur_market)\n\ntests/US_00_Main_page/US_00-00_Main_page/us_00-00_main_page_test.py:332: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/TradingInstrumentTradeButton.py:34: in full_test\n    item_list = self.arrange_(d, cur_item_link, cur_market)\npages/Elements/TradingInstrumentTradeButton.py:104: in arrange_\n    self.driver.execute_script(\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:407: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fe0bb058860>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#21 0x5565e1024170 \\\\u003Cunknown>\\\\n#22 0x5565e1033f94 \\\\u003Cunknown>\\\\n#23 0x7f8091094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome=124.0.6367.60); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x5565e1034e43 <unknown>\nE       #1 0x5565e0d234e7 <unknown>\nE       #2 0x5565e0d33554 <unknown>\nE       #3 0x5565e0d33e5a <unknown>\nE       #4 0x5565e0d29455 <unknown>\nE       #5 0x5565e0d33e8b <unknown>\nE       #6 0x5565e0d29455 <unknown>\nE       #7 0x5565e0d277f2 <unknown>\nE       #8 0x5565e0d2aaaa <unknown>\nE       #9 0x5565e0dafc39 <unknown>\nE       #10 0x5565e0d90452 <unknown>\nE       #11 0x5565e0daec29 <unknown>\nE       #12 0x5565e0d901f3 <unknown>\nE       #13 0x5565e0d6128a <unknown>\nE       #14 0x5565e0d61c5e <unknown>\nE       #15 0x5565e0ff916b <unknown>\nE       #16 0x5565e0ffd0bb <unknown>\nE       #17 0x5565e0fe5281 <unknown>\nE       #18 0x5565e0ffdc22 <unknown>\nE       #19 0x5565e0fca13f <unknown>\nE       #20 0x5565e1023f98 <unknown>\nE       #21 0x5565e1024170 <unknown>\nE       #22 0x5565e1033f94 <unknown>\nE       #23 0x7f8091094ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Start test of button [Trade] in Widget 'Trading instrument'","time":{"start":1715359149876,"stop":1715359170150,"duration":20274},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=124.0.6367.60); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5565e1034e43 <unknown>\n#1 0x5565e0d234e7 <unknown>\n#2 0x5565e0d33554 <unknown>\n#3 0x5565e0d33e5a <unknown>\n#4 0x5565e0d29455 <unknown>\n#5 0x5565e0d33e8b <unknown>\n#6 0x5565e0d29455 <unknown>\n#7 0x5565e0d277f2 <unknown>\n#8 0x5565e0d2aaaa <unknown>\n#9 0x5565e0dafc39 <unknown>\n#10 0x5565e0d90452 <unknown>\n#11 0x5565e0daec29 <unknown>\n#12 0x5565e0d901f3 <unknown>\n#13 0x5565e0d6128a <unknown>\n#14 0x5565e0d61c5e <unknown>\n#15 0x5565e0ff916b <unknown>\n#16 0x5565e0ffd0bb <unknown>\n#17 0x5565e0fe5281 <unknown>\n#18 0x5565e0ffdc22 <unknown>\n#19 0x5565e0fca13f <unknown>\n#20 0x5565e1023f98 <unknown>\n#21 0x5565e1024170 <unknown>\n#22 0x5565e1033f94 <unknown>\n#23 0x7f8091094ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_00_Main_page/US_00-00_Main_page/us_00-00_main_page_test.py\", line 332, in test_001_trading_instrument_widget_trade_button\n    test_element.full_test(d, cur_language, cur_country, cur_role, main_page_link, cur_market)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/TradingInstrumentTradeButton.py\", line 34, in full_test\n    item_list = self.arrange_(d, cur_item_link, cur_market)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/TradingInstrumentTradeButton.py\", line 104, in arrange_\n    self.driver.execute_script(\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 407, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Preconditions","time":{"start":1715359149878,"stop":1715359169292,"duration":19414},"status":"passed","steps":[{"name":"2024-05-10 16:36:51.357659   Start Checking Captcha","time":{"start":1715359152069,"stop":1715359153076,"duration":1007},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Open 'Language and Country' menu section.","time":{"start":1715359155877,"stop":1715359157192,"duration":1315},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"test_language","value":"'pl'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Set country (licence)","time":{"start":1715359157193,"stop":1715359159782,"duration":2589},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_country","value":"'au'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Open 'Language and Country' menu section.","time":{"start":1715359159785,"stop":1715359161075,"duration":1290},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"test_language","value":"'pl'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Set language","time":{"start":1715359161075,"stop":1715359162607,"duration":1532},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_language","value":"'pl'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Authorization","time":{"start":1715359162610,"stop":1715359167045,"duration":4435},"status":"passed","steps":[{"name":"Click [Log In] button","time":{"start":1715359162612,"stop":1715359162684,"duration":72},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check that form [Login] is opened","time":{"start":1715359162684,"stop":1715359163141,"duration":457},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f9b1ba7664a3110a53f7a893ea604b6a\")>"},{"name":"link","value":"'https://capital.com/pl'"},{"name":"cur_language","value":"'pl'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-05-10 16:36:51.365751   DeAuthorisation","time":{"start":1715359167048,"stop":1715359169290,"duration":2242},"status":"passed","steps":[{"name":"Click button [My account]","time":{"start":1715359167050,"stop":1715359169190,"duration":2140},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Click 'Logout' button","time":{"start":1715359169190,"stop":1715359169274,"duration":84},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f9b1ba7664a3110a53f7a893ea604b6a\")>"},{"name":"link","value":"'https://capital.com/pl'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f9b1ba7664a3110a53f7a893ea604b6a\")>"},{"name":"host","value":"'https://capital.com/'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'pl'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":11,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f9b1ba7664a3110a53f7a893ea604b6a\")>"},{"name":"cur_language","value":"'pl'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_market","value":"'Most_traded'"}],"shouldDisplayMessage":true,"stepsCount":12,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"77e25f64bf89bd18","name":"Screenshot","source":"77e25f64bf89bd18.png","type":"image/png","size":207448},{"uid":"fb051e7825ad6100","name":"stdout","source":"fb051e7825ad6100.txt","type":"text/plain","size":7227}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":13,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1715359392606,"stop":1715359392771,"duration":165},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_00 | Main Page"},{"name":"feature","value":"Language: pl"},{"name":"story","value":"Country: au / Role: NoAuth"},{"name":"tag","value":"test_001"},{"name":"tag","value":"us_00_00"},{"name":"parentSuite","value":"tests.US_00_Main_page.US_00-00_Main_page"},{"name":"suite","value":"us_00-00_main_page_test"},{"name":"subSuite","value":"TestMainPage"},{"name":"host","value":"fv-az1393-708"},{"name":"thread","value":"3493-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_00_Main_page.US_00-00_Main_page.us_00-00_main_page_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'au'"},{"name":"cur_language","value":"'pl'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_market","value":"'Most_traded'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"c4d1e97ccde5f290","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/227//#testresult/c4d1e97ccde5f290","status":"broken","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=124.0.6367.60); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5619c46d6ce3 <unknown>\n#1 0x5619c43c54a7 <unknown>\n#2 0x5619c43d5514 <unknown>\n#3 0x5619c43d5e1a <unknown>\n#4 0x5619c43cb415 <unknown>\n#5 0x5619c43d5e4b <unknown>\n#6 0x5619c43cb415 <unknown>\n#7 0x5619c43c97b2 <unknown>\n#8 0x5619c43cca6a <unknown>\n#9 0x5619c4451bf9 <unknown>\n#10 0x5619c4432412 <unknown>\n#11 0x5619c4450be9 <unknown>\n#12 0x5619c44321b3 <unknown>\n#13 0x5619c440324a <unknown>\n#14 0x5619c4403c1e <unknown>\n#15 0x5619c469b00b <unknown>\n#16 0x5619c469ef5b <unknown>\n#17 0x5619c4687121 <unknown>\n#18 0x5619c469fac2 <unknown>\n#19 0x5619c466bfdf <unknown>\n#20 0x5619c46c5e38 <unknown>\n#21 0x5619c46c6010 <unknown>\n#22 0x5619c46d5e34 <unknown>\n#23 0x7fbe4c494ac3 <unknown>","time":{"start":1714074517963,"stop":1714074536408,"duration":18445}}]},"tags":["us_00_00","test_001"]},"source":"3a1d058ea5d16cb1.json","parameterValues":["'au'","'pl'","'test001.miketar+1@gmail.com'","'Most_traded'","'Qwer1234-!@#$'","'NoAuth'","'Chrome'"]}