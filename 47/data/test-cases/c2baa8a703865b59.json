{"uid":"c2baa8a703865b59","name":"TC_55!090 (Lang: en) | Bid:55!090-en.de.NoReg","fullName":"tests.US_55_ReTestsManual.saii-d3v.US_55-saii-d3v_ReTestsManual_test.TestManualDetectedBugs#test_090","historyId":"4ee5ebae24111170cd3c0229447a2fde","time":{"start":1720734892642,"stop":1720734911585,"duration":18943},"description":"\n         Check: The modal window \"Confirm Form Resubmission\" is not opened after clicking the button [Back]\n         on any article from search page.\n         Language: All.\n         License: All, exclude FCA, SCA.\n         Country: All, exclude GB, AE.\n         Author: Sergey Aiidzhanov\n         ","descriptionHtml":"<pre><code>     Check: The modal window &quot;Confirm Form Resubmission&quot; is not opened after clicking the button [Back]\n     on any article from search page.\n     Language: All.\n     License: All, exclude FCA, SCA.\n     Country: All, exclude GB, AE.\n     Author: Sergey Aiidzhanov\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://capital.com/fund-platform-definition\" class=\"global-search__img\">...</a> is not clickable at point (265, 708). Other element would receive the click: <div class=\"stickyBar js-stickyBar\">...</div>\n  (Session info: chrome=126.0.6478.126)\nStacktrace:\n#0 0x55eb30fbbc7a <unknown>\n#1 0x55eb30c9ee2c <unknown>\n#2 0x55eb30cf2406 <unknown>\n#3 0x55eb30cf0246 <unknown>\n#4 0x55eb30cedc27 <unknown>\n#5 0x55eb30ceca60 <unknown>\n#6 0x55eb30ce015f <unknown>\n#7 0x55eb30d0e5c2 <unknown>\n#8 0x55eb30cdfad9 <unknown>\n#9 0x55eb30d0e78e <unknown>\n#10 0x55eb30d2d303 <unknown>\n#11 0x55eb30d0e363 <unknown>\n#12 0x55eb30cde247 <unknown>\n#13 0x55eb30cdeb9e <unknown>\n#14 0x55eb30f8224b <unknown>\n#15 0x55eb30f862f1 <unknown>\n#16 0x55eb30f6dafe <unknown>\n#17 0x55eb30f86e52 <unknown>\n#18 0x55eb30f5279f <unknown>\n#19 0x55eb30fab638 <unknown>\n#20 0x55eb30fab810 <unknown>\n#21 0x55eb30fbadac <unknown>\n#22 0x7fb234494ac3 <unknown>","statusTrace":"self = <US_55-saii-d3v_ReTestsManual_test.TestManualDetectedBugs object at 0x7fc5f56a6690>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a48c92f9413b18c2a029323a85e39b2a\")>\ncur_language = '', cur_country = 'de', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\nrandom_search_string = 'platform'\n\n    @allure.step(\n        'Start retest manual TC_55!090 The modal window \"Confirm Form Resubmission\" is not opened '\n        'after clicking the button [Back] on any article from search page.')\n    @pytest.mark.parametrize('cur_language', [''])\n    @pytest.mark.parametrize('cur_country', ['de', 'ua', 'au'])\n    @pytest.mark.parametrize('cur_role', ['Auth', 'NoAuth', 'NoReg'])\n    @pytest.mark.test_090\n    def test_090(self, worker_id, d, cur_language, cur_country, cur_role,\n                 cur_login, cur_password, random_search_string):\n        \"\"\"\n         Check: The modal window \"Confirm Form Resubmission\" is not opened after clicking the button [Back]\n         on any article from search page.\n         Language: All.\n         License: All, exclude FCA, SCA.\n         Country: All, exclude GB, AE.\n         Author: Sergey Aiidzhanov\n         \"\"\"\n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"090\",\n            'The modal window \"Confirm Form Resubmission\" is not opened after clicking the button [Back] '\n            'on any article from search page.',\n            False,\n            False\n        )\n    \n        # Arrange\n        Common().check_country_in_list_and_skip_if_present(cur_country, ['gb', 'ae'])\n    \n        page_conditions = Conditions(d)\n        link = page_conditions.preconditions(d, CapitalComPageSrc.URL, \"\", cur_language,\n                                             cur_country, cur_role, cur_login, cur_password)\n    \n        # refresh page to prevent \"stale element exception\" on 1st test if its in NoAuth role\n        d.refresh()\n    \n        search_field = SearchField(d, link, bid)\n        search_field.element_click()\n        search_field.perform_search(random_search_string)\n    \n        # Act\n>       search_field.click_random_search_result_item()\n\ntests/US_55_ReTestsManual/saii-d3v/US_55-saii-d3v_ReTestsManual_test.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/HeaderSearchField.py:62: in click_random_search_result_item\n    Wait(self.driver, 5).until(EC.element_to_be_clickable(random_search_item)).click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fc5f56d6570>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55eb30fab810 \\\\u003Cunknown>\\\\n#21 0x55eb30fbadac \\\\u003Cunknown>\\\\n#22 0x7fb234494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://capital.com/fund-platform-definition\" class=\"global-search__img\">...</a> is not clickable at point (265, 708). Other element would receive the click: <div class=\"stickyBar js-stickyBar\">...</div>\nE         (Session info: chrome=126.0.6478.126)\nE       Stacktrace:\nE       #0 0x55eb30fbbc7a <unknown>\nE       #1 0x55eb30c9ee2c <unknown>\nE       #2 0x55eb30cf2406 <unknown>\nE       #3 0x55eb30cf0246 <unknown>\nE       #4 0x55eb30cedc27 <unknown>\nE       #5 0x55eb30ceca60 <unknown>\nE       #6 0x55eb30ce015f <unknown>\nE       #7 0x55eb30d0e5c2 <unknown>\nE       #8 0x55eb30cdfad9 <unknown>\nE       #9 0x55eb30d0e78e <unknown>\nE       #10 0x55eb30d2d303 <unknown>\nE       #11 0x55eb30d0e363 <unknown>\nE       #12 0x55eb30cde247 <unknown>\nE       #13 0x55eb30cdeb9e <unknown>\nE       #14 0x55eb30f8224b <unknown>\nE       #15 0x55eb30f862f1 <unknown>\nE       #16 0x55eb30f6dafe <unknown>\nE       #17 0x55eb30f86e52 <unknown>\nE       #18 0x55eb30f5279f <unknown>\nE       #19 0x55eb30fab638 <unknown>\nE       #20 0x55eb30fab810 <unknown>\nE       #21 0x55eb30fbadac <unknown>\nE       #22 0x7fb234494ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1720734290118,"stop":1720734290460,"duration":342},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1720734290461,"stop":1720734290461,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1720734290461,"stop":1720734290461,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1720734290461,"stop":1720734290461,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"random_search_string","time":{"start":1720734892642,"stop":1720734892642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n         Check: The modal window \"Confirm Form Resubmission\" is not opened after clicking the button [Back]\n         on any article from search page.\n         Language: All.\n         License: All, exclude FCA, SCA.\n         Country: All, exclude GB, AE.\n         Author: Sergey Aiidzhanov\n         ","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://capital.com/fund-platform-definition\" class=\"global-search__img\">...</a> is not clickable at point (265, 708). Other element would receive the click: <div class=\"stickyBar js-stickyBar\">...</div>\n  (Session info: chrome=126.0.6478.126)\nStacktrace:\n#0 0x55eb30fbbc7a <unknown>\n#1 0x55eb30c9ee2c <unknown>\n#2 0x55eb30cf2406 <unknown>\n#3 0x55eb30cf0246 <unknown>\n#4 0x55eb30cedc27 <unknown>\n#5 0x55eb30ceca60 <unknown>\n#6 0x55eb30ce015f <unknown>\n#7 0x55eb30d0e5c2 <unknown>\n#8 0x55eb30cdfad9 <unknown>\n#9 0x55eb30d0e78e <unknown>\n#10 0x55eb30d2d303 <unknown>\n#11 0x55eb30d0e363 <unknown>\n#12 0x55eb30cde247 <unknown>\n#13 0x55eb30cdeb9e <unknown>\n#14 0x55eb30f8224b <unknown>\n#15 0x55eb30f862f1 <unknown>\n#16 0x55eb30f6dafe <unknown>\n#17 0x55eb30f86e52 <unknown>\n#18 0x55eb30f5279f <unknown>\n#19 0x55eb30fab638 <unknown>\n#20 0x55eb30fab810 <unknown>\n#21 0x55eb30fbadac <unknown>\n#22 0x7fb234494ac3 <unknown>","statusTrace":"self = <US_55-saii-d3v_ReTestsManual_test.TestManualDetectedBugs object at 0x7fc5f56a6690>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a48c92f9413b18c2a029323a85e39b2a\")>\ncur_language = '', cur_country = 'de', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\nrandom_search_string = 'platform'\n\n    @allure.step(\n        'Start retest manual TC_55!090 The modal window \"Confirm Form Resubmission\" is not opened '\n        'after clicking the button [Back] on any article from search page.')\n    @pytest.mark.parametrize('cur_language', [''])\n    @pytest.mark.parametrize('cur_country', ['de', 'ua', 'au'])\n    @pytest.mark.parametrize('cur_role', ['Auth', 'NoAuth', 'NoReg'])\n    @pytest.mark.test_090\n    def test_090(self, worker_id, d, cur_language, cur_country, cur_role,\n                 cur_login, cur_password, random_search_string):\n        \"\"\"\n         Check: The modal window \"Confirm Form Resubmission\" is not opened after clicking the button [Back]\n         on any article from search page.\n         Language: All.\n         License: All, exclude FCA, SCA.\n         Country: All, exclude GB, AE.\n         Author: Sergey Aiidzhanov\n         \"\"\"\n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"090\",\n            'The modal window \"Confirm Form Resubmission\" is not opened after clicking the button [Back] '\n            'on any article from search page.',\n            False,\n            False\n        )\n    \n        # Arrange\n        Common().check_country_in_list_and_skip_if_present(cur_country, ['gb', 'ae'])\n    \n        page_conditions = Conditions(d)\n        link = page_conditions.preconditions(d, CapitalComPageSrc.URL, \"\", cur_language,\n                                             cur_country, cur_role, cur_login, cur_password)\n    \n        # refresh page to prevent \"stale element exception\" on 1st test if its in NoAuth role\n        d.refresh()\n    \n        search_field = SearchField(d, link, bid)\n        search_field.element_click()\n        search_field.perform_search(random_search_string)\n    \n        # Act\n>       search_field.click_random_search_result_item()\n\ntests/US_55_ReTestsManual/saii-d3v/US_55-saii-d3v_ReTestsManual_test.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/HeaderSearchField.py:62: in click_random_search_result_item\n    Wait(self.driver, 5).until(EC.element_to_be_clickable(random_search_item)).click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fc5f56d6570>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55eb30fab810 \\\\u003Cunknown>\\\\n#21 0x55eb30fbadac \\\\u003Cunknown>\\\\n#22 0x7fb234494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://capital.com/fund-platform-definition\" class=\"global-search__img\">...</a> is not clickable at point (265, 708). Other element would receive the click: <div class=\"stickyBar js-stickyBar\">...</div>\nE         (Session info: chrome=126.0.6478.126)\nE       Stacktrace:\nE       #0 0x55eb30fbbc7a <unknown>\nE       #1 0x55eb30c9ee2c <unknown>\nE       #2 0x55eb30cf2406 <unknown>\nE       #3 0x55eb30cf0246 <unknown>\nE       #4 0x55eb30cedc27 <unknown>\nE       #5 0x55eb30ceca60 <unknown>\nE       #6 0x55eb30ce015f <unknown>\nE       #7 0x55eb30d0e5c2 <unknown>\nE       #8 0x55eb30cdfad9 <unknown>\nE       #9 0x55eb30d0e78e <unknown>\nE       #10 0x55eb30d2d303 <unknown>\nE       #11 0x55eb30d0e363 <unknown>\nE       #12 0x55eb30cde247 <unknown>\nE       #13 0x55eb30cdeb9e <unknown>\nE       #14 0x55eb30f8224b <unknown>\nE       #15 0x55eb30f862f1 <unknown>\nE       #16 0x55eb30f6dafe <unknown>\nE       #17 0x55eb30f86e52 <unknown>\nE       #18 0x55eb30f5279f <unknown>\nE       #19 0x55eb30fab638 <unknown>\nE       #20 0x55eb30fab810 <unknown>\nE       #21 0x55eb30fbadac <unknown>\nE       #22 0x7fb234494ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Start retest manual TC_55!090 The modal window \"Confirm Form Resubmission\" is not opened after clicking the button [Back] on any article from search page.","time":{"start":1720734892642,"stop":1720734911584,"duration":18942},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://capital.com/fund-platform-definition\" class=\"global-search__img\">...</a> is not clickable at point (265, 708). Other element would receive the click: <div class=\"stickyBar js-stickyBar\">...</div>\n  (Session info: chrome=126.0.6478.126)\nStacktrace:\n#0 0x55eb30fbbc7a <unknown>\n#1 0x55eb30c9ee2c <unknown>\n#2 0x55eb30cf2406 <unknown>\n#3 0x55eb30cf0246 <unknown>\n#4 0x55eb30cedc27 <unknown>\n#5 0x55eb30ceca60 <unknown>\n#6 0x55eb30ce015f <unknown>\n#7 0x55eb30d0e5c2 <unknown>\n#8 0x55eb30cdfad9 <unknown>\n#9 0x55eb30d0e78e <unknown>\n#10 0x55eb30d2d303 <unknown>\n#11 0x55eb30d0e363 <unknown>\n#12 0x55eb30cde247 <unknown>\n#13 0x55eb30cdeb9e <unknown>\n#14 0x55eb30f8224b <unknown>\n#15 0x55eb30f862f1 <unknown>\n#16 0x55eb30f6dafe <unknown>\n#17 0x55eb30f86e52 <unknown>\n#18 0x55eb30f5279f <unknown>\n#19 0x55eb30fab638 <unknown>\n#20 0x55eb30fab810 <unknown>\n#21 0x55eb30fbadac <unknown>\n#22 0x7fb234494ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/saii-d3v/US_55-saii-d3v_ReTestsManual_test.py\", line 227, in test_090\n    search_field.click_random_search_result_item()\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/HeaderSearchField.py\", line 62, in click_random_search_result_item\n    Wait(self.driver, 5).until(EC.element_to_be_clickable(random_search_item)).click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Preconditions","time":{"start":1720734892644,"stop":1720734908167,"duration":15523},"status":"passed","steps":[{"name":"2024-07-11 21:44:49.957302   Start Checking Captcha","time":{"start":1720734894377,"stop":1720734895399,"duration":1022},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"2024-07-11 21:44:49.957302   Start Checking Captcha","time":{"start":1720734898296,"stop":1720734899319,"duration":1023},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Open 'Language and Country' menu section.","time":{"start":1720734899322,"stop":1720734900620,"duration":1298},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"test_language","value":"''"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Set country (licence)","time":{"start":1720734900620,"stop":1720734903175,"duration":2555},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_country","value":"'de'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-07-11 21:44:49.957302   Start Checking Captcha","time":{"start":1720734903176,"stop":1720734904221,"duration":1045},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Open 'Language and Country' menu section.","time":{"start":1720734904224,"stop":1720734905519,"duration":1295},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"test_language","value":"''"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Set language","time":{"start":1720734905519,"stop":1720734907122,"duration":1603},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_language","value":"''"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-07-11 21:44:49.957302   Start Checking Captcha","time":{"start":1720734907122,"stop":1720734908163,"duration":1041},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a48c92f9413b18c2a029323a85e39b2a\")>"},{"name":"host","value":"'https://capital.com/'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":8,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a48c92f9413b18c2a029323a85e39b2a\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'de'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"random_search_string","value":"'platform'"}],"shouldDisplayMessage":true,"stepsCount":9,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"cf7af8c0c577d3bc","name":"Screenshot","source":"cf7af8c0c577d3bc.png","type":"image/png","size":119572},{"uid":"973ce6ad2f30bc43","name":"stdout","source":"973ce6ad2f30bc43.txt","type":"text/plain","size":4244}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":10,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1720735427490,"stop":1720735427723,"duration":233},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!090 | The modal window \"Confirm Form Resubmission\" is not opened after clicking the button [Back] on any article from search page."},{"name":"feature","value":"Role: NoReg"},{"name":"story","value":"Country: de"},{"name":"tag","value":"test_090"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.saii-d3v"},{"name":"suite","value":"US_55-saii-d3v_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az1020-224"},{"name":"thread","value":"24375-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.saii-d3v.US_55-saii-d3v_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'de'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoReg'"},{"name":"d","value":"'Chrome'"},{"name":"random_search_string","value":"'platform'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["test_090","us_55"]},"source":"c2baa8a703865b59.json","parameterValues":["'de'","''","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoReg'","'Chrome'","'platform'"]}