{"uid":"a43d247df9a72ca1","name":"TC_11.01.07.01_03 with parameters: en, gb, NoAuth","fullName":"tests.US_11_Education.US_11-01-07_Glossary.US_11-01-07-01_Glossary_of_trading_terms_test.TestGlossaryItems#test_03","historyId":"e8e38a8c25df71bcbfe61ab3636eb861","time":{"start":1702727499615,"stop":1702727504955,"duration":5340},"description":"\n        Check: Button [Try Free Demo] under video banner [Capital.com]\n        Language: All. License: All.\n        ","descriptionHtml":"<pre><code>    Check: Button [Try Free Demo] under video banner [Capital.com]\n    Language: All. License: All.\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://capital.com/trading/signup?go=demo\" data-link=\"uu\" class=\"button-main rounded-lg __cp_b __cp_bs js-analyticsClick\" data-type=\"b_vert_v0_13\">...</a> is not clickable at point (1059, 299). Other element would receive the click: <div class=\"overlay\" id=\"s_overlay\">...</div>\n  (Session info: chrome=120.0.6099.71)\nStacktrace:\n#0 0x55e25b1f4d33 <unknown>\n#1 0x55e25aeb1f87 <unknown>\n#2 0x55e25af0a002 <unknown>\n#3 0x55e25af07a64 <unknown>\n#4 0x55e25af04b04 <unknown>\n#5 0x55e25af03729 <unknown>\n#6 0x55e25aef5583 <unknown>\n#7 0x55e25af2b342 <unknown>\n#8 0x55e25aef4db9 <unknown>\n#9 0x55e25af2b75e <unknown>\n#10 0x55e25af4a297 <unknown>\n#11 0x55e25af2b0e3 <unknown>\n#12 0x55e25aef3044 <unknown>\n#13 0x55e25aef444e <unknown>\n#14 0x55e25b1b9861 <unknown>\n#15 0x55e25b1bd785 <unknown>\n#16 0x55e25b1a7285 <unknown>\n#17 0x55e25b1be41f <unknown>\n#18 0x55e25b18b20f <unknown>\n#19 0x55e25b1e2028 <unknown>\n#20 0x55e25b1e21f7 <unknown>\n#21 0x55e25b1f3ed4 <unknown>\n#22 0x7fb819c94ac3 <unknown>","statusTrace":"self = <US_11-01-07-01_Glossary_of_trading_terms_test.TestGlossaryItems object at 0x7f6768b3b7d0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0a13e2d72d91bbda09c882fe849800e1\")>\ncur_language = '', cur_country = 'gb', cur_role = 'NoAuth'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\ncur_item_link = 'https://capital.com/reserve-currency-definition'\n\n    @allure.step(\"Start test of button [Try Free Demo] under video banner [Capital.com]\")\n    def test_03(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password,\n            cur_item_link):\n        \"\"\"\n        Check: Button [Try Free Demo] under video banner [Capital.com]\n        Language: All. License: All.\n        \"\"\"\n        build_dynamic_arg_v3(self, d, worker_id, cur_language, cur_country, cur_role,\n                             \"11.01.07\",\n                             \"Educations > Menu item [Glossary of trading terms]\",\n                             \".01_03\",\n                             \"Testing button [Try Free Demo] under video banner [Capital.com]\")\n    \n        if cur_language not in [\"\"]:\n            pytest.skip(f\"This test-case is not for {cur_language} language\")\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        button_name = \"try_free_demo\"\n        test_element = ButtonsUnderVideoBanner(d)\n        test_element.arrange_(cur_item_link, button_name)\n    \n>       test_element.click(button_name)\n\ntests/US_11_Education/US_11-01-07_Glossary/US_11-01-07-01_Glossary_of_trading_terms_test.py:149: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/ButtonsUnderVideoBanner.py:119: in click\n    button_list[0].click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f6768993fd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55e25b1e21f7 \\\\u003Cunknown>\\\\n#21 0x55e25b1f3ed4 \\\\u003Cunknown>\\\\n#22 0x7fb819c94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://capital.com/trading/signup?go=demo\" data-link=\"uu\" class=\"button-main rounded-lg __cp_b __cp_bs js-analyticsClick\" data-type=\"b_vert_v0_13\">...</a> is not clickable at point (1059, 299). Other element would receive the click: <div class=\"overlay\" id=\"s_overlay\">...</div>\nE         (Session info: chrome=120.0.6099.71)\nE       Stacktrace:\nE       #0 0x55e25b1f4d33 <unknown>\nE       #1 0x55e25aeb1f87 <unknown>\nE       #2 0x55e25af0a002 <unknown>\nE       #3 0x55e25af07a64 <unknown>\nE       #4 0x55e25af04b04 <unknown>\nE       #5 0x55e25af03729 <unknown>\nE       #6 0x55e25aef5583 <unknown>\nE       #7 0x55e25af2b342 <unknown>\nE       #8 0x55e25aef4db9 <unknown>\nE       #9 0x55e25af2b75e <unknown>\nE       #10 0x55e25af4a297 <unknown>\nE       #11 0x55e25af2b0e3 <unknown>\nE       #12 0x55e25aef3044 <unknown>\nE       #13 0x55e25aef444e <unknown>\nE       #14 0x55e25b1b9861 <unknown>\nE       #15 0x55e25b1bd785 <unknown>\nE       #16 0x55e25b1a7285 <unknown>\nE       #17 0x55e25b1be41f <unknown>\nE       #18 0x55e25b18b20f <unknown>\nE       #19 0x55e25b1e2028 <unknown>\nE       #20 0x55e25b1e21f7 <unknown>\nE       #21 0x55e25b1f3ed4 <unknown>\nE       #22 0x7fb819c94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"worker_id","time":{"start":1702727216546,"stop":1702727216546,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"d","time":{"start":1702727216546,"stop":1702727217439,"duration":893},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1702727217439,"stop":1702727217439,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1702727217439,"stop":1702727217439,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1702727217439,"stop":1702727217440,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1702727217439,"stop":1702727217439,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"go","time":{"start":1702727217439,"stop":1702727217439,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1702727456655,"stop":1702727456655,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [Try Free Demo] under video banner [Capital.com]\n        Language: All. License: All.\n        ","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://capital.com/trading/signup?go=demo\" data-link=\"uu\" class=\"button-main rounded-lg __cp_b __cp_bs js-analyticsClick\" data-type=\"b_vert_v0_13\">...</a> is not clickable at point (1059, 299). Other element would receive the click: <div class=\"overlay\" id=\"s_overlay\">...</div>\n  (Session info: chrome=120.0.6099.71)\nStacktrace:\n#0 0x55e25b1f4d33 <unknown>\n#1 0x55e25aeb1f87 <unknown>\n#2 0x55e25af0a002 <unknown>\n#3 0x55e25af07a64 <unknown>\n#4 0x55e25af04b04 <unknown>\n#5 0x55e25af03729 <unknown>\n#6 0x55e25aef5583 <unknown>\n#7 0x55e25af2b342 <unknown>\n#8 0x55e25aef4db9 <unknown>\n#9 0x55e25af2b75e <unknown>\n#10 0x55e25af4a297 <unknown>\n#11 0x55e25af2b0e3 <unknown>\n#12 0x55e25aef3044 <unknown>\n#13 0x55e25aef444e <unknown>\n#14 0x55e25b1b9861 <unknown>\n#15 0x55e25b1bd785 <unknown>\n#16 0x55e25b1a7285 <unknown>\n#17 0x55e25b1be41f <unknown>\n#18 0x55e25b18b20f <unknown>\n#19 0x55e25b1e2028 <unknown>\n#20 0x55e25b1e21f7 <unknown>\n#21 0x55e25b1f3ed4 <unknown>\n#22 0x7fb819c94ac3 <unknown>","statusTrace":"self = <US_11-01-07-01_Glossary_of_trading_terms_test.TestGlossaryItems object at 0x7f6768b3b7d0>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0a13e2d72d91bbda09c882fe849800e1\")>\ncur_language = '', cur_country = 'gb', cur_role = 'NoAuth'\ncur_login = 'aqa.tomelo.an@gmail.com', cur_password = 'iT9Vgqi6d$fiZ*Z'\ncur_item_link = 'https://capital.com/reserve-currency-definition'\n\n    @allure.step(\"Start test of button [Try Free Demo] under video banner [Capital.com]\")\n    def test_03(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password,\n            cur_item_link):\n        \"\"\"\n        Check: Button [Try Free Demo] under video banner [Capital.com]\n        Language: All. License: All.\n        \"\"\"\n        build_dynamic_arg_v3(self, d, worker_id, cur_language, cur_country, cur_role,\n                             \"11.01.07\",\n                             \"Educations > Menu item [Glossary of trading terms]\",\n                             \".01_03\",\n                             \"Testing button [Try Free Demo] under video banner [Capital.com]\")\n    \n        if cur_language not in [\"\"]:\n            pytest.skip(f\"This test-case is not for {cur_language} language\")\n    \n        page_conditions = Conditions(d, \"\")\n        page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        button_name = \"try_free_demo\"\n        test_element = ButtonsUnderVideoBanner(d)\n        test_element.arrange_(cur_item_link, button_name)\n    \n>       test_element.click(button_name)\n\ntests/US_11_Education/US_11-01-07_Glossary/US_11-01-07-01_Glossary_of_trading_terms_test.py:149: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/ButtonsUnderVideoBanner.py:119: in click\n    button_list[0].click()\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f6768993fd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55e25b1e21f7 \\\\u003Cunknown>\\\\n#21 0x55e25b1f3ed4 \\\\u003Cunknown>\\\\n#22 0x7fb819c94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://capital.com/trading/signup?go=demo\" data-link=\"uu\" class=\"button-main rounded-lg __cp_b __cp_bs js-analyticsClick\" data-type=\"b_vert_v0_13\">...</a> is not clickable at point (1059, 299). Other element would receive the click: <div class=\"overlay\" id=\"s_overlay\">...</div>\nE         (Session info: chrome=120.0.6099.71)\nE       Stacktrace:\nE       #0 0x55e25b1f4d33 <unknown>\nE       #1 0x55e25aeb1f87 <unknown>\nE       #2 0x55e25af0a002 <unknown>\nE       #3 0x55e25af07a64 <unknown>\nE       #4 0x55e25af04b04 <unknown>\nE       #5 0x55e25af03729 <unknown>\nE       #6 0x55e25aef5583 <unknown>\nE       #7 0x55e25af2b342 <unknown>\nE       #8 0x55e25aef4db9 <unknown>\nE       #9 0x55e25af2b75e <unknown>\nE       #10 0x55e25af4a297 <unknown>\nE       #11 0x55e25af2b0e3 <unknown>\nE       #12 0x55e25aef3044 <unknown>\nE       #13 0x55e25aef444e <unknown>\nE       #14 0x55e25b1b9861 <unknown>\nE       #15 0x55e25b1bd785 <unknown>\nE       #16 0x55e25b1a7285 <unknown>\nE       #17 0x55e25b1be41f <unknown>\nE       #18 0x55e25b18b20f <unknown>\nE       #19 0x55e25b1e2028 <unknown>\nE       #20 0x55e25b1e21f7 <unknown>\nE       #21 0x55e25b1f3ed4 <unknown>\nE       #22 0x7fb819c94ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Start test of button [Try Free Demo] under video banner [Capital.com]","time":{"start":1702727499615,"stop":1702727504954,"duration":5339},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://capital.com/trading/signup?go=demo\" data-link=\"uu\" class=\"button-main rounded-lg __cp_b __cp_bs js-analyticsClick\" data-type=\"b_vert_v0_13\">...</a> is not clickable at point (1059, 299). Other element would receive the click: <div class=\"overlay\" id=\"s_overlay\">...</div>\n  (Session info: chrome=120.0.6099.71)\nStacktrace:\n#0 0x55e25b1f4d33 <unknown>\n#1 0x55e25aeb1f87 <unknown>\n#2 0x55e25af0a002 <unknown>\n#3 0x55e25af07a64 <unknown>\n#4 0x55e25af04b04 <unknown>\n#5 0x55e25af03729 <unknown>\n#6 0x55e25aef5583 <unknown>\n#7 0x55e25af2b342 <unknown>\n#8 0x55e25aef4db9 <unknown>\n#9 0x55e25af2b75e <unknown>\n#10 0x55e25af4a297 <unknown>\n#11 0x55e25af2b0e3 <unknown>\n#12 0x55e25aef3044 <unknown>\n#13 0x55e25aef444e <unknown>\n#14 0x55e25b1b9861 <unknown>\n#15 0x55e25b1bd785 <unknown>\n#16 0x55e25b1a7285 <unknown>\n#17 0x55e25b1be41f <unknown>\n#18 0x55e25b18b20f <unknown>\n#19 0x55e25b1e2028 <unknown>\n#20 0x55e25b1e21f7 <unknown>\n#21 0x55e25b1f3ed4 <unknown>\n#22 0x7fb819c94ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_11_Education/US_11-01-07_Glossary/US_11-01-07-01_Glossary_of_trading_terms_test.py\", line 149, in test_03\n    test_element.click(button_name)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/ButtonsUnderVideoBanner.py\", line 119, in click\n    button_list[0].click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Set preconditions","time":{"start":1702727499617,"stop":1702727503856,"duration":4239},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"0a13e2d72d91bbda09c882fe849800e1\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'gb'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Click on button under video banner","time":{"start":1702727503860,"stop":1702727504954,"duration":1094},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://capital.com/trading/signup?go=demo\" data-link=\"uu\" class=\"button-main rounded-lg __cp_b __cp_bs js-analyticsClick\" data-type=\"b_vert_v0_13\">...</a> is not clickable at point (1059, 299). Other element would receive the click: <div class=\"overlay\" id=\"s_overlay\">...</div>\n  (Session info: chrome=120.0.6099.71)\nStacktrace:\n#0 0x55e25b1f4d33 <unknown>\n#1 0x55e25aeb1f87 <unknown>\n#2 0x55e25af0a002 <unknown>\n#3 0x55e25af07a64 <unknown>\n#4 0x55e25af04b04 <unknown>\n#5 0x55e25af03729 <unknown>\n#6 0x55e25aef5583 <unknown>\n#7 0x55e25af2b342 <unknown>\n#8 0x55e25aef4db9 <unknown>\n#9 0x55e25af2b75e <unknown>\n#10 0x55e25af4a297 <unknown>\n#11 0x55e25af2b0e3 <unknown>\n#12 0x55e25aef3044 <unknown>\n#13 0x55e25aef444e <unknown>\n#14 0x55e25b1b9861 <unknown>\n#15 0x55e25b1bd785 <unknown>\n#16 0x55e25b1a7285 <unknown>\n#17 0x55e25b1be41f <unknown>\n#18 0x55e25b18b20f <unknown>\n#19 0x55e25b1e2028 <unknown>\n#20 0x55e25b1e21f7 <unknown>\n#21 0x55e25b1f3ed4 <unknown>\n#22 0x7fb819c94ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/ButtonsUnderVideoBanner.py\", line 119, in click\n    button_list[0].click()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcom-CcJ6hTD8-py3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"button_name","value":"'try_free_demo'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"0a13e2d72d91bbda09c882fe849800e1\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'gb'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_item_link","value":"'https://capital.com/reserve-currency-definition'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"40bddb7d9b0a93b","name":"Screenshot","source":"40bddb7d9b0a93b.png","type":"image/png","size":154735},{"uid":"9253a2e690f3a1df","name":"stdout","source":"9253a2e690f3a1df.txt","type":"text/plain","size":1127}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"go::0","time":{"start":1702727521188,"stop":1702727521328,"duration":140},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Language: en / US_11.01.07 | Educations > Menu item [Glossary of trading terms]"},{"name":"feature","value":"Country: gb / Role: NoAuth / TS_11.01.07 | Educations > Menu item [Glossary of trading terms]"},{"name":"story","value":"TC_11.01.07.01_03 | Testing button [Try Free Demo] under video banner [Capital.com]"},{"name":"tag","value":"us_11_01_07"},{"name":"parentSuite","value":"tests.US_11_Education.US_11-01-07_Glossary"},{"name":"suite","value":"US_11-01-07-01_Glossary_of_trading_terms_test"},{"name":"subSuite","value":"TestGlossaryItems"},{"name":"host","value":"fv-az658-475"},{"name":"thread","value":"22216-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_11_Education.US_11-01-07_Glossary.US_11-01-07-01_Glossary_of_trading_terms_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'gb'"},{"name":"cur_item_link","value":"'https://capital.com/reserve-currency-definition'"},{"name":"cur_language","value":"''"},{"name":"cur_login","value":"'aqa.tomelo.an@gmail.com'"},{"name":"cur_password","value":"'iT9Vgqi6d$fiZ*Z'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"go","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["us_11_01_07"]},"source":"a43d247df9a72ca1.json","parameterValues":["'gb'","'https://capital.com/reserve-currency-definition'","''","'aqa.tomelo.an@gmail.com'","'iT9Vgqi6d$fiZ*Z'","'NoAuth'","'Chrome'"]}