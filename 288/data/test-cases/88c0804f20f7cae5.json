{"uid":"88c0804f20f7cae5","name":"TC_11.02.03.00_06 | Testing button [Trade] in Most traded block. Bid:11.02.03.00_06-ru.au.Auth","fullName":"tests.US_11_Education.US_11-02-03_Commodities_trading.us_11-02-03-00_Commodities_trading_test.TestCommoditiesTradingPretest#test_06_most_traded_trade_button","historyId":"1aa1727e98d6646e3eadc59ab5a8ce0f","time":{"start":1707878707806,"stop":1707878723813,"duration":16007},"description":"\n        Check: Button [Trade] in Most traded block\n        Language: All (Except: EL, HU, NL). License: All (Except: FCA).\n        ","descriptionHtml":"<pre><code>    Check: Button [Trade] in Most traded block\n    Language: All (Except: EL, HU, NL). License: All (Except: FCA).\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Bug # 17. Trade instrument 'US Natural Gas Spot' is on the Top Charts List, but Not selected","statusTrace":"self = <us_11-02-03-00_Commodities_trading_test.TestCommoditiesTradingPretest object at 0x7ffb40a58320>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cbcfdaa3f17470e8061d8a63826d4d57\")>\ncur_language = 'ru', cur_country = 'au', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test of buttons [Trade] in Most traded widget\")\n    # @pytest.mark.skip(reason=\"Skipped for debugging\")\n    @pytest.mark.test_06\n    def test_06_most_traded_trade_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Button [Trade] in Most traded block\n        Language: All (Except: EL, HU, NL). License: All (Except: FCA).\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"11.02.03\", \"Education > Menu item [Commodities trading]\",\n            \".00_06\", \"Testing button [Trade] in Most traded block\")\n    \n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n        check_language(cur_language)\n        check_country(cur_country)\n    \n        page_conditions = Conditions(d, \"\")\n        main_page_link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        page_menu = MenuSection(d, main_page_link)\n        cur_menu_link = page_menu.open_education_commodities_trading_menu(d, cur_language, cur_country, main_page_link)\n    \n        test_element = ButtonTradeOnWidgetMostTraded(d, cur_menu_link, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_menu_link)\n\ntests/US_11_Education/US_11-02-03_Commodities_trading/us_11-02-03-00_Commodities_trading_test.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/ButtonTradeOnWidgetMostTraded.py:49: in full_test_with_tpi\n    check_element.assert_trading_platform_v4(d, cur_item_link, False, True, trade_instrument)\npages/Elements/AssertClass.py:133: in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\npages/Capital/Trading_platform/trading_platform.py:109: in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(cur_url, trade_instrument)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Capital.Trading_platform.trading_platform.TradingPlatform object at 0x7ffb4024ebd0>\ntest_link = 'https://capital.com/trading/platform/spotlight/426090820621508?side=buy'\ntrade_instrument = 'US Natural Gas Spot'\n\n    @allure.step(\"Check the corresponding trading instrument\")\n    def should_be_corresponding_trading_instrument(self, test_link, trade_instrument):\n        \"\"\"\n        Check Trading platform is opened for corresponding trade instrument\n        \"\"\"\n    \n        # cur_url = self.driver.current_url\n        trade_instrument_name = trade_instrument.split(\" \")[0]\n    \n        # проверяем, что открыта трейдинговая платформа на вкладке [Charts]\n        if not self.element_is_present_and_visible(ChartingLocators.MENU_CHART, 5):\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.bid, '14', self.link)\n            assert False, f\"Bug # 14. Trading platform was opened, but not Chart mode\"\n    \n        print(f\"{datetime.now()}   => Trading Platform opened in Chart mode\")\n    \n        # определяем, какие вкладки открыты и избегаем ошибки пустого списка\n        top_chart_trade_list = self.elements_are_located(TradingInstruments.LIST_TRADE_INSTRUMENTS, 3)\n        if len(top_chart_trade_list) == 0:\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.bid, '15', self.link)\n            assert False, (f\"Bug # 15. Trading platform was opened, \"\n                           f\"but does no contain any trade instrument on the Top Charts List\")\n    \n        # проверяем, есть ли вкладка для запрашиваемого торгового инструмента\n        present = False\n        for element in top_chart_trade_list:\n            if trade_instrument_name in element.text:\n                print(f\"{datetime.now()}   Trade instrument '{trade_instrument}' is on the Top Charts List\")\n                present = True\n                break\n        if not present:\n            # new bug re-test checking =====\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.bid, '16', self.link)\n            assert False, f\"Bug # 16. Trade instrument '{trade_instrument}' is Not on the Top Charts List\"\n    \n        # проверяем, что запрашиваемый торговый инструмент выбран\n        selected_trade_instrument = self.element_is_visible(TradingInstruments.SELECTED_TRADE_INSTRUMENTS).text\n        if trade_instrument_name not in selected_trade_instrument:\n            # new bug re-test checking =====\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.bid, '17', self.link)\n            # ==============================\n>           assert False, f\"Bug # 17. Trade instrument '{trade_instrument}' is on the Top Charts List, but Not selected\"\nE           AssertionError: Bug # 17. Trade instrument 'US Natural Gas Spot' is on the Top Charts List, but Not selected\n\npages/Capital/Trading_platform/trading_platform.py:307: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1707878660365,"stop":1707878660765,"duration":400},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_country","time":{"start":1707878660765,"stop":1707878660766,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language","time":{"start":1707878660765,"stop":1707878660765,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1707878660765,"stop":1707878660765,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_role","time":{"start":1707878660766,"stop":1707878660766,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1707878660766,"stop":1707878660766,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1707878660766,"stop":1707878660766,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Button [Trade] in Most traded block\n        Language: All (Except: EL, HU, NL). License: All (Except: FCA).\n        ","status":"failed","statusMessage":"AssertionError: Bug # 17. Trade instrument 'US Natural Gas Spot' is on the Top Charts List, but Not selected","statusTrace":"self = <us_11-02-03-00_Commodities_trading_test.TestCommoditiesTradingPretest object at 0x7ffb40a58320>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cbcfdaa3f17470e8061d8a63826d4d57\")>\ncur_language = 'ru', cur_country = 'au', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test of buttons [Trade] in Most traded widget\")\n    # @pytest.mark.skip(reason=\"Skipped for debugging\")\n    @pytest.mark.test_06\n    def test_06_most_traded_trade_button(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Button [Trade] in Most traded block\n        Language: All (Except: EL, HU, NL). License: All (Except: FCA).\n        \"\"\"\n        bid = build_dynamic_arg_v4(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"11.02.03\", \"Education > Menu item [Commodities trading]\",\n            \".00_06\", \"Testing button [Trade] in Most traded block\")\n    \n        Common().skip_if_eng_lang_and_fca_license(cur_language, cur_country)\n        check_language(cur_language)\n        check_country(cur_country)\n    \n        page_conditions = Conditions(d, \"\")\n        main_page_link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language, cur_country, cur_role, cur_login, cur_password)\n    \n        page_menu = MenuSection(d, main_page_link)\n        cur_menu_link = page_menu.open_education_commodities_trading_menu(d, cur_language, cur_country, main_page_link)\n    \n        test_element = ButtonTradeOnWidgetMostTraded(d, cur_menu_link, bid)\n>       test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_menu_link)\n\ntests/US_11_Education/US_11-02-03_Commodities_trading/us_11-02-03-00_Commodities_trading_test.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Elements/ButtonTradeOnWidgetMostTraded.py:49: in full_test_with_tpi\n    check_element.assert_trading_platform_v4(d, cur_item_link, False, True, trade_instrument)\npages/Elements/AssertClass.py:133: in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\npages/Capital/Trading_platform/trading_platform.py:109: in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(cur_url, trade_instrument)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.Capital.Trading_platform.trading_platform.TradingPlatform object at 0x7ffb4024ebd0>\ntest_link = 'https://capital.com/trading/platform/spotlight/426090820621508?side=buy'\ntrade_instrument = 'US Natural Gas Spot'\n\n    @allure.step(\"Check the corresponding trading instrument\")\n    def should_be_corresponding_trading_instrument(self, test_link, trade_instrument):\n        \"\"\"\n        Check Trading platform is opened for corresponding trade instrument\n        \"\"\"\n    \n        # cur_url = self.driver.current_url\n        trade_instrument_name = trade_instrument.split(\" \")[0]\n    \n        # проверяем, что открыта трейдинговая платформа на вкладке [Charts]\n        if not self.element_is_present_and_visible(ChartingLocators.MENU_CHART, 5):\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.bid, '14', self.link)\n            assert False, f\"Bug # 14. Trading platform was opened, but not Chart mode\"\n    \n        print(f\"{datetime.now()}   => Trading Platform opened in Chart mode\")\n    \n        # определяем, какие вкладки открыты и избегаем ошибки пустого списка\n        top_chart_trade_list = self.elements_are_located(TradingInstruments.LIST_TRADE_INSTRUMENTS, 3)\n        if len(top_chart_trade_list) == 0:\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.bid, '15', self.link)\n            assert False, (f\"Bug # 15. Trading platform was opened, \"\n                           f\"but does no contain any trade instrument on the Top Charts List\")\n    \n        # проверяем, есть ли вкладка для запрашиваемого торгового инструмента\n        present = False\n        for element in top_chart_trade_list:\n            if trade_instrument_name in element.text:\n                print(f\"{datetime.now()}   Trade instrument '{trade_instrument}' is on the Top Charts List\")\n                present = True\n                break\n        if not present:\n            # new bug re-test checking =====\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.bid, '16', self.link)\n            assert False, f\"Bug # 16. Trade instrument '{trade_instrument}' is Not on the Top Charts List\"\n    \n        # проверяем, что запрашиваемый торговый инструмент выбран\n        selected_trade_instrument = self.element_is_visible(TradingInstruments.SELECTED_TRADE_INSTRUMENTS).text\n        if trade_instrument_name not in selected_trade_instrument:\n            # new bug re-test checking =====\n            print(f'\\nBug: {self.bid}')\n            retest_table_fill(self.bid, '17', self.link)\n            # ==============================\n>           assert False, f\"Bug # 17. Trade instrument '{trade_instrument}' is on the Top Charts List, but Not selected\"\nE           AssertionError: Bug # 17. Trade instrument 'US Natural Gas Spot' is on the Top Charts List, but Not selected\n\npages/Capital/Trading_platform/trading_platform.py:307: AssertionError","steps":[{"name":"Start test of buttons [Trade] in Most traded widget","time":{"start":1707878707806,"stop":1707878723812,"duration":16006},"status":"failed","statusMessage":"AssertionError: Bug # 17. Trade instrument 'US Natural Gas Spot' is on the Top Charts List, but Not selected\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_11_Education/US_11-02-03_Commodities_trading/us_11-02-03-00_Commodities_trading_test.py\", line 129, in test_06_most_traded_trade_button\n    test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_menu_link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/ButtonTradeOnWidgetMostTraded.py\", line 49, in full_test_with_tpi\n    check_element.assert_trading_platform_v4(d, cur_item_link, False, True, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 133, in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 109, in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(cur_url, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 307, in should_be_corresponding_trading_instrument\n    assert False, f\"Bug # 17. Trade instrument '{trade_instrument}' is on the Top Charts List, but Not selected\"\n","steps":[{"name":"2024-02-14 02:44:20.351799   Start Building dynamic arguments for allure report generation","time":{"start":1707878707806,"stop":1707878707827,"duration":21},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"cbcfdaa3f17470e8061d8a63826d4d57\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'ru'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'Auth'"},{"name":"us","value":"'11.02.03'"},{"name":"desc_us","value":"'Education > Menu item [Commodities trading]'"},{"name":"num_tc","value":"'.00_06'"},{"name":"desc_tc","value":"'Testing button [Trade] in Most traded block'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-02-14 02:44:20.353846   Set preconditions","time":{"start":1707878707827,"stop":1707878711151,"duration":3324},"status":"passed","steps":[{"name":"2024-02-14 02:44:20.352735   Start Checking Captcha","time":{"start":1707878708034,"stop":1707878709078,"duration":1044},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"2024-02-14 02:44:20.352735   Start Checking Captcha","time":{"start":1707878709078,"stop":1707878710114,"duration":1036},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"2024-02-14 02:44:20.352735   Start Checking Captcha","time":{"start":1707878710114,"stop":1707878711151,"duration":1037},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"cbcfdaa3f17470e8061d8a63826d4d57\")>"},{"name":"host","value":"'https://capital.com'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'ru'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-02-14 02:44:20.351257.   Click 'Education' menu section.","time":{"start":1707878712084,"stop":1707878713881,"duration":1797},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"cbcfdaa3f17470e8061d8a63826d4d57\")>"},{"name":"test_language","value":"'ru'"},{"name":"test_country","value":"'au'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-02-14 02:44:20.351327.   Click 'Commodities trading' hyperlink.","time":{"start":1707878713882,"stop":1707878716774,"duration":2892},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"cbcfdaa3f17470e8061d8a63826d4d57\")>"},{"name":"test_language","value":"'ru'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-02-14 02:44:20.348988   Start Full test Trade button on Most Traded widget","time":{"start":1707878716774,"stop":1707878723812,"duration":7038},"status":"failed","statusMessage":"AssertionError: Bug # 17. Trade instrument 'US Natural Gas Spot' is on the Top Charts List, but Not selected\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/ButtonTradeOnWidgetMostTraded.py\", line 49, in full_test_with_tpi\n    check_element.assert_trading_platform_v4(d, cur_item_link, False, True, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 133, in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 109, in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(cur_url, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 307, in should_be_corresponding_trading_instrument\n    assert False, f\"Bug # 17. Trade instrument '{trade_instrument}' is on the Top Charts List, but Not selected\"\n","steps":[{"name":"Click Trade button on Most traded widget","time":{"start":1707878716807,"stop":1707878720377,"duration":3570},"status":"passed","steps":[{"name":"2024-02-14 02:44:20.195435   Check that form [Sign up] opened","time":{"start":1707878716808,"stop":1707878718360,"duration":1552},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"timeout","value":"1"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"random_index","value":"2"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-02-14 02:44:20.347850   Checking that \"Trading platform\" page opened - ver 4","time":{"start":1707878720377,"stop":1707878723811,"duration":3434},"status":"failed","statusMessage":"AssertionError: Bug # 17. Trade instrument 'US Natural Gas Spot' is on the Top Charts List, but Not selected\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Elements/AssertClass.py\", line 133, in assert_trading_platform_v4\n    self.page_trading.should_be_trading_platform_page_v4(d, cur_link, tpd, tpi, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 109, in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(cur_url, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 307, in should_be_corresponding_trading_instrument\n    assert False, f\"Bug # 17. Trade instrument '{trade_instrument}' is on the Top Charts List, but Not selected\"\n","steps":[{"name":"Checking that the trading platform page has opened - ver 4","time":{"start":1707878720377,"stop":1707878723811,"duration":3434},"status":"failed","statusMessage":"AssertionError: Bug # 17. Trade instrument 'US Natural Gas Spot' is on the Top Charts List, but Not selected\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 109, in should_be_trading_platform_page_v4\n    self.should_be_corresponding_trading_instrument(cur_url, trade_instrument)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 307, in should_be_corresponding_trading_instrument\n    assert False, f\"Bug # 17. Trade instrument '{trade_instrument}' is on the Top Charts List, but Not selected\"\n","steps":[{"name":"Check that the page has the expected title - ver 2","time":{"start":1707878720385,"stop":1707878720390,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"title","value":"'Trading Platform | Capital.com'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check if the Logo element is present on the page","time":{"start":1707878720390,"stop":1707878721953,"duration":1563},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check if the trading platform opened in LIVE mode","time":{"start":1707878721953,"stop":1707878721972,"duration":19},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"cbcfdaa3f17470e8061d8a63826d4d57\")>"},{"name":"test_link","value":"'https://capital.com/trading/platform/spotlight/426090820621508?side=buy'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check the corresponding trading instrument","time":{"start":1707878722398,"stop":1707878723810,"duration":1412},"status":"failed","statusMessage":"AssertionError: Bug # 17. Trade instrument 'US Natural Gas Spot' is on the Top Charts List, but Not selected\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Capital/Trading_platform/trading_platform.py\", line 307, in should_be_corresponding_trading_instrument\n    assert False, f\"Bug # 17. Trade instrument '{trade_instrument}' is on the Top Charts List, but Not selected\"\n","steps":[{"name":"Fixing one row check results into Google Sheet Bugs Report","time":{"start":1707878722562,"stop":1707878723044,"duration":482},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cell","value":"'B1'"},{"name":"values","value":"[[\"'=====> Bugs Report !!! Идет Retest Data Update <=====\"]]"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Fixing one row check results into Google Sheet Bugs Report","time":{"start":1707878723429,"stop":1707878723651,"duration":222},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cell","value":"'P695'"},{"name":"values","value":"[[\"'17\"]]"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Fixing one row check results into Google Sheet Bugs Report","time":{"start":1707878723652,"stop":1707878723810,"duration":158},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cell","value":"'B1'"},{"name":"values","value":"[['Bugs Report']]"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"test_link","value":"'https://capital.com/trading/platform/spotlight/426090820621508?side=buy'"},{"name":"trade_instrument","value":"'US Natural Gas Spot'"}],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"cbcfdaa3f17470e8061d8a63826d4d57\")>"},{"name":"test_link","value":"'https://capital.com/ru/torgovlya-syrievymi-tovarami-cfd'"},{"name":"tpd","value":"False"},{"name":"tpi","value":"True"},{"name":"trade_instrument","value":"'US Natural Gas Spot'"}],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"cbcfdaa3f17470e8061d8a63826d4d57\")>"},{"name":"cur_link","value":"'https://capital.com/ru/torgovlya-syrievymi-tovarami-cfd'"},{"name":"tpd","value":"False"},{"name":"tpi","value":"True"},{"name":"trade_instrument","value":"'US Natural Gas Spot'"}],"shouldDisplayMessage":false,"stepsCount":8,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"cbcfdaa3f17470e8061d8a63826d4d57\")>"},{"name":"cur_language","value":"'ru'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_item_link","value":"'https://capital.com/ru/torgovlya-syrievymi-tovarami-cfd'"}],"shouldDisplayMessage":false,"stepsCount":11,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"cbcfdaa3f17470e8061d8a63826d4d57\")>"},{"name":"cur_language","value":"'ru'"},{"name":"cur_country","value":"'au'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":19,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"bc7bbf8f4f05fd75","name":"Screenshot","source":"bc7bbf8f4f05fd75.png","type":"image/png","size":95924},{"uid":"86773267499d1ad0","name":"log","source":"86773267499d1ad0.txt","type":"text/plain","size":1409},{"uid":"ea120c7e4426c596","name":"stdout","source":"ea120c7e4426c596.txt","type":"text/plain","size":6456}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":20,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1707878788412,"stop":1707878788556,"duration":144},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"US_11.02.03 | Education > Menu item [Commodities trading]"},{"name":"feature","value":"Language: ru"},{"name":"story","value":"Country: au / Role: Auth"},{"name":"tag","value":"test_06"},{"name":"tag","value":"us_11_02_03"},{"name":"parentSuite","value":"tests.US_11_Education.US_11-02-03_Commodities_trading"},{"name":"suite","value":"us_11-02-03-00_Commodities_trading_test"},{"name":"subSuite","value":"TestCommoditiesTradingPretest"},{"name":"host","value":"fv-az661-393"},{"name":"thread","value":"11955-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_11_Education.US_11-02-03_Commodities_trading.us_11-02-03-00_Commodities_trading_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'au'"},{"name":"cur_language","value":"'ru'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"ee73cb9ac14d472","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/287//#testresult/ee73cb9ac14d472","status":"broken","statusDetails":"IndexError: list index out of range","time":{"start":1707822832154,"stop":1707822850631,"duration":18477}}]},"tags":["test_06","us_11_02_03"]},"source":"88c0804f20f7cae5.json","parameterValues":["'au'","'ru'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'Auth'","'Chrome'"]}