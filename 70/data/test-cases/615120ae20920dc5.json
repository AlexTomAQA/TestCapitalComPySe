{"uid":"615120ae20920dc5","name":"TC_55!300 (Lang: ar) | Bid:55!300-ar.ae.NoReg","fullName":"tests.US_55_ReTestsManual.artemdashkov.US_55-artemdashkov_ReTestsManual_test.TestManualDetected#test_300_button_explore_features_does_not_open_tradingView_page_on_parameters_language","historyId":"639d3c189d8691e0b21043c68b6254b7","time":{"start":1722458874472,"stop":1722458879484,"duration":5012},"description":"\n        Check:  The \"TradingView\" page is opened in EN language instead AR language,\n                when clicked [Explore features] button on the \"Web platform\" page for AR language is selected\n        Language: AR\n        Country: SCA\n        Role: NoReg, Auth, NoAuth\n        Author: Artem Dashkov\n        ","descriptionHtml":"<pre><code>    Check:  The &quot;TradingView&quot; page is opened in EN language instead AR language,\n            when clicked [Explore features] button on the &quot;Web platform&quot; page for AR language is selected\n    Language: AR\n    Country: SCA\n    Role: NoReg, Auth, NoAuth\n    Author: Artem Dashkov\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=126.0.6478.182)\nStacktrace:\n#0 0x55ad5382cc5a <unknown>\n#1 0x55ad5350fc71 <unknown>\n#2 0x55ad534f6303 <unknown>\n#3 0x55ad534f4b48 <unknown>\n#4 0x55ad534f51ca <unknown>\n#5 0x55ad53512877 <unknown>\n#6 0x55ad5359ef25 <unknown>\n#7 0x55ad5357f5c2 <unknown>\n#8 0x55ad5359e303 <unknown>\n#9 0x55ad5357f363 <unknown>\n#10 0x55ad5354f247 <unknown>\n#11 0x55ad5354fb9e <unknown>\n#12 0x55ad537f322b <unknown>\n#13 0x55ad537f72d1 <unknown>\n#14 0x55ad537deade <unknown>\n#15 0x55ad537f7e32 <unknown>\n#16 0x55ad537c377f <unknown>\n#17 0x55ad5381c618 <unknown>\n#18 0x55ad5381c7f0 <unknown>\n#19 0x55ad5382bd8c <unknown>\n#20 0x7f645c094ac3 <unknown>","statusTrace":"self = <US_55-artemdashkov_ReTestsManual_test.TestManualDetected object at 0x7fdf3b719670>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cc24b1ac804c006a13a76bbcdcbe994b\")>\ncur_language = 'ar', cur_country = 'ae', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test of the [Explore features] button in the 'Web platform' page\")\n    @pytest.mark.parametrize('cur_language', [\"ar\"])\n    @pytest.mark.parametrize('cur_country', [\"ae\"])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_300\n    def test_300_button_explore_features_does_not_open_tradingView_page_on_parameters_language(\n            self, worker_id, d, cur_language, cur_country, cur_role,\n            cur_login, cur_password):\n        \"\"\"\n        Check:  The \"TradingView\" page is opened in EN language instead AR language,\n                when clicked [Explore features] button on the \"Web platform\" page for AR language is selected\n        Language: AR\n        Country: SCA\n        Role: NoReg, Auth, NoAuth\n        Author: Artem Dashkov\n        \"\"\"\n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"300\",\n            \"Testing button [Explore features] on the 'Web platform' page\",\n            False, False\n        )\n        # pytest.skip(\"Промежуточная версия\")\n        # Arrange\n        page_conditions = NewConditions(d, \"\")\n        cur_item_link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL_NEW_AR_AE, \"\", cur_language, cur_country,\n            cur_role, cur_login, cur_password)\n    \n        page_menu = MenuNew(d, cur_item_link)\n>       cur_item_link = page_menu.from_trading_menu_open_web_platform(\n            d, cur_language, cur_country, cur_item_link)\n\ntests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py:671: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Menu/New/from_trading_menu_open_web_platform.py:26: in from_trading_menu_open_web_platform\n    answer = MenuBase(d, link).move_focus_menu_pause_move_focus_to_submenu_and_click(\npages/Menu/New/menu_new_base.py:26: in move_focus_menu_pause_move_focus_to_submenu_and_click\n    self.open_page()\npages/base_page.py:150: in open_page\n    self.driver.get(link)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:363: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fdf3c025a90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"invalid argument\\\\n  (Session info: chrome=1...\\\\n#18 0x55ad5381c7f0 \\\\u003Cunknown>\\\\n#19 0x55ad5382bd8c \\\\u003Cunknown>\\\\n#20 0x7f645c094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\nE         (Session info: chrome=126.0.6478.182)\nE       Stacktrace:\nE       #0 0x55ad5382cc5a <unknown>\nE       #1 0x55ad5350fc71 <unknown>\nE       #2 0x55ad534f6303 <unknown>\nE       #3 0x55ad534f4b48 <unknown>\nE       #4 0x55ad534f51ca <unknown>\nE       #5 0x55ad53512877 <unknown>\nE       #6 0x55ad5359ef25 <unknown>\nE       #7 0x55ad5357f5c2 <unknown>\nE       #8 0x55ad5359e303 <unknown>\nE       #9 0x55ad5357f363 <unknown>\nE       #10 0x55ad5354f247 <unknown>\nE       #11 0x55ad5354fb9e <unknown>\nE       #12 0x55ad537f322b <unknown>\nE       #13 0x55ad537f72d1 <unknown>\nE       #14 0x55ad537deade <unknown>\nE       #15 0x55ad537f7e32 <unknown>\nE       #16 0x55ad537c377f <unknown>\nE       #17 0x55ad5381c618 <unknown>\nE       #18 0x55ad5381c7f0 <unknown>\nE       #19 0x55ad5382bd8c <unknown>\nE       #20 0x7f645c094ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidArgumentException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1722457227487,"stop":1722457227852,"duration":365},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1722457227852,"stop":1722457227852,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1722457227852,"stop":1722457227852,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1722457227852,"stop":1722457227852,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check:  The \"TradingView\" page is opened in EN language instead AR language,\n                when clicked [Explore features] button on the \"Web platform\" page for AR language is selected\n        Language: AR\n        Country: SCA\n        Role: NoReg, Auth, NoAuth\n        Author: Artem Dashkov\n        ","status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=126.0.6478.182)\nStacktrace:\n#0 0x55ad5382cc5a <unknown>\n#1 0x55ad5350fc71 <unknown>\n#2 0x55ad534f6303 <unknown>\n#3 0x55ad534f4b48 <unknown>\n#4 0x55ad534f51ca <unknown>\n#5 0x55ad53512877 <unknown>\n#6 0x55ad5359ef25 <unknown>\n#7 0x55ad5357f5c2 <unknown>\n#8 0x55ad5359e303 <unknown>\n#9 0x55ad5357f363 <unknown>\n#10 0x55ad5354f247 <unknown>\n#11 0x55ad5354fb9e <unknown>\n#12 0x55ad537f322b <unknown>\n#13 0x55ad537f72d1 <unknown>\n#14 0x55ad537deade <unknown>\n#15 0x55ad537f7e32 <unknown>\n#16 0x55ad537c377f <unknown>\n#17 0x55ad5381c618 <unknown>\n#18 0x55ad5381c7f0 <unknown>\n#19 0x55ad5382bd8c <unknown>\n#20 0x7f645c094ac3 <unknown>","statusTrace":"self = <US_55-artemdashkov_ReTestsManual_test.TestManualDetected object at 0x7fdf3b719670>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cc24b1ac804c006a13a76bbcdcbe994b\")>\ncur_language = 'ar', cur_country = 'ae', cur_role = 'NoReg'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test of the [Explore features] button in the 'Web platform' page\")\n    @pytest.mark.parametrize('cur_language', [\"ar\"])\n    @pytest.mark.parametrize('cur_country', [\"ae\"])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_300\n    def test_300_button_explore_features_does_not_open_tradingView_page_on_parameters_language(\n            self, worker_id, d, cur_language, cur_country, cur_role,\n            cur_login, cur_password):\n        \"\"\"\n        Check:  The \"TradingView\" page is opened in EN language instead AR language,\n                when clicked [Explore features] button on the \"Web platform\" page for AR language is selected\n        Language: AR\n        Country: SCA\n        Role: NoReg, Auth, NoAuth\n        Author: Artem Dashkov\n        \"\"\"\n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"300\",\n            \"Testing button [Explore features] on the 'Web platform' page\",\n            False, False\n        )\n        # pytest.skip(\"Промежуточная версия\")\n        # Arrange\n        page_conditions = NewConditions(d, \"\")\n        cur_item_link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL_NEW_AR_AE, \"\", cur_language, cur_country,\n            cur_role, cur_login, cur_password)\n    \n        page_menu = MenuNew(d, cur_item_link)\n>       cur_item_link = page_menu.from_trading_menu_open_web_platform(\n            d, cur_language, cur_country, cur_item_link)\n\ntests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py:671: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Menu/New/from_trading_menu_open_web_platform.py:26: in from_trading_menu_open_web_platform\n    answer = MenuBase(d, link).move_focus_menu_pause_move_focus_to_submenu_and_click(\npages/Menu/New/menu_new_base.py:26: in move_focus_menu_pause_move_focus_to_submenu_and_click\n    self.open_page()\npages/base_page.py:150: in open_page\n    self.driver.get(link)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:363: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fdf3c025a90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"invalid argument\\\\n  (Session info: chrome=1...\\\\n#18 0x55ad5381c7f0 \\\\u003Cunknown>\\\\n#19 0x55ad5382bd8c \\\\u003Cunknown>\\\\n#20 0x7f645c094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\nE         (Session info: chrome=126.0.6478.182)\nE       Stacktrace:\nE       #0 0x55ad5382cc5a <unknown>\nE       #1 0x55ad5350fc71 <unknown>\nE       #2 0x55ad534f6303 <unknown>\nE       #3 0x55ad534f4b48 <unknown>\nE       #4 0x55ad534f51ca <unknown>\nE       #5 0x55ad53512877 <unknown>\nE       #6 0x55ad5359ef25 <unknown>\nE       #7 0x55ad5357f5c2 <unknown>\nE       #8 0x55ad5359e303 <unknown>\nE       #9 0x55ad5357f363 <unknown>\nE       #10 0x55ad5354f247 <unknown>\nE       #11 0x55ad5354fb9e <unknown>\nE       #12 0x55ad537f322b <unknown>\nE       #13 0x55ad537f72d1 <unknown>\nE       #14 0x55ad537deade <unknown>\nE       #15 0x55ad537f7e32 <unknown>\nE       #16 0x55ad537c377f <unknown>\nE       #17 0x55ad5381c618 <unknown>\nE       #18 0x55ad5381c7f0 <unknown>\nE       #19 0x55ad5382bd8c <unknown>\nE       #20 0x7f645c094ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidArgumentException","steps":[{"name":"Start test of the [Explore features] button in the 'Web platform' page","time":{"start":1722458874472,"stop":1722458879483,"duration":5011},"status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=126.0.6478.182)\nStacktrace:\n#0 0x55ad5382cc5a <unknown>\n#1 0x55ad5350fc71 <unknown>\n#2 0x55ad534f6303 <unknown>\n#3 0x55ad534f4b48 <unknown>\n#4 0x55ad534f51ca <unknown>\n#5 0x55ad53512877 <unknown>\n#6 0x55ad5359ef25 <unknown>\n#7 0x55ad5357f5c2 <unknown>\n#8 0x55ad5359e303 <unknown>\n#9 0x55ad5357f363 <unknown>\n#10 0x55ad5354f247 <unknown>\n#11 0x55ad5354fb9e <unknown>\n#12 0x55ad537f322b <unknown>\n#13 0x55ad537f72d1 <unknown>\n#14 0x55ad537deade <unknown>\n#15 0x55ad537f7e32 <unknown>\n#16 0x55ad537c377f <unknown>\n#17 0x55ad5381c618 <unknown>\n#18 0x55ad5381c7f0 <unknown>\n#19 0x55ad5382bd8c <unknown>\n#20 0x7f645c094ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py\", line 671, in test_300_button_explore_features_does_not_open_tradingView_page_on_parameters_language\n    cur_item_link = page_menu.from_trading_menu_open_web_platform(\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Menu/New/from_trading_menu_open_web_platform.py\", line 26, in from_trading_menu_open_web_platform\n    answer = MenuBase(d, link).move_focus_menu_pause_move_focus_to_submenu_and_click(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Menu/New/menu_new_base.py\", line 26, in move_focus_menu_pause_move_focus_to_submenu_and_click\n    self.open_page()\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/base_page.py\", line 150, in open_page\n    self.driver.get(link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 363, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"   Set New preconditions","time":{"start":1722458874474,"stop":1722458879459,"duration":4985},"status":"passed","steps":[{"name":"2024-07-31 20:20:27.460911   Start Checking Captcha","time":{"start":1722458876404,"stop":1722458877415,"duration":1011},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"2024-07-31 20:20:27.460911   Start Checking Captcha","time":{"start":1722458877415,"stop":1722458878436,"duration":1021},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"2024-07-31 20:20:27.460911   Start Checking Captcha","time":{"start":1722458878437,"stop":1722458879456,"duration":1019},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"cc24b1ac804c006a13a76bbcdcbe994b\")>"},{"name":"host","value":"'https://capital.com/ar-ae'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Trading\" menu, \"Web platform\" submenu","time":{"start":1722458879459,"stop":1722458879482,"duration":23},"status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=126.0.6478.182)\nStacktrace:\n#0 0x55ad5382cc5a <unknown>\n#1 0x55ad5350fc71 <unknown>\n#2 0x55ad534f6303 <unknown>\n#3 0x55ad534f4b48 <unknown>\n#4 0x55ad534f51ca <unknown>\n#5 0x55ad53512877 <unknown>\n#6 0x55ad5359ef25 <unknown>\n#7 0x55ad5357f5c2 <unknown>\n#8 0x55ad5359e303 <unknown>\n#9 0x55ad5357f363 <unknown>\n#10 0x55ad5354f247 <unknown>\n#11 0x55ad5354fb9e <unknown>\n#12 0x55ad537f322b <unknown>\n#13 0x55ad537f72d1 <unknown>\n#14 0x55ad537deade <unknown>\n#15 0x55ad537f7e32 <unknown>\n#16 0x55ad537c377f <unknown>\n#17 0x55ad5381c618 <unknown>\n#18 0x55ad5381c7f0 <unknown>\n#19 0x55ad5382bd8c <unknown>\n#20 0x7f645c094ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Menu/New/from_trading_menu_open_web_platform.py\", line 26, in from_trading_menu_open_web_platform\n    answer = MenuBase(d, link).move_focus_menu_pause_move_focus_to_submenu_and_click(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Menu/New/menu_new_base.py\", line 26, in move_focus_menu_pause_move_focus_to_submenu_and_click\n    self.open_page()\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/base_page.py\", line 150, in open_page\n    self.driver.get(link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 363, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"cc24b1ac804c006a13a76bbcdcbe994b\")>"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"link","value":"'https://capital.com/en-gb'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"cc24b1ac804c006a13a76bbcdcbe994b\")>"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'NoReg'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":5,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"eb24292b64492dae","name":"Screenshot","source":"eb24292b64492dae.png","type":"image/png","size":11310},{"uid":"b48f13d69ca116ba","name":"stdout","source":"b48f13d69ca116ba.txt","type":"text/plain","size":2434}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1722458896945,"stop":1722458897189,"duration":244},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!300 | Testing button [Explore features] on the 'Web platform' page"},{"name":"feature","value":"Role: NoReg"},{"name":"story","value":"Country: ae"},{"name":"tag","value":"bug_300"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.artemdashkov"},{"name":"suite","value":"US_55-artemdashkov_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetected"},{"name":"host","value":"fv-az1198-484"},{"name":"thread","value":"6430-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.artemdashkov.US_55-artemdashkov_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"'ar'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoReg'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"8867759bf51e8b1a","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/69//#testresult/8867759bf51e8b1a","status":"failed","statusDetails":"Failed: Bug № ??? 'Trading' menu not present for 'ar' language","time":{"start":1722368638438,"stop":1722368644668,"duration":6230}},{"uid":"655ce7dc6d213d02","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/68//#testresult/655ce7dc6d213d02","status":"failed","statusDetails":"Failed: Page 'TradingView' opened in not EN-language version and not expected language. Current language is 'ar', expected_page is 'https://capital.com/ar-ae/trading-platforms/trading-view', current page is 'https://capital.com/tradingview'","time":{"start":1722349661627,"stop":1722349676725,"duration":15098}},{"uid":"c96c197ed5c0926e","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/67//#testresult/c96c197ed5c0926e","status":"failed","statusDetails":"Failed: Page 'TradingView' opened in not EN-language version and not expected language. Current language is 'ar', expected_page is 'https://capital.com/ar-ae/trading-platforms/trading-view', current page is 'https://capital.com/tradingview'","time":{"start":1722244090771,"stop":1722244105811,"duration":15040}}]},"tags":["us_55","bug_300"]},"source":"615120ae20920dc5.json","parameterValues":["'ae'","'ar'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoReg'","'Chrome'"]}