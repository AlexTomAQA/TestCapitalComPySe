{"uid":"eff981e6fe270266","name":"TC_55!061 (Lang: pl) | Bid:55!061-pl.ua.NoAuth","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_061","historyId":"2aecdb5bbdeadc03d4366bdf3e1aa24d","time":{"start":1721022308275,"stop":1721022324921,"duration":16646},"description":"\n        Check: presence of the sidebar \"Crypto Trading Guide\" on the \"Bitcoin Gold\" and \"Cryptocurrencies vs. Stocks:\n        What's the Difference?\" pages.\n        Language: EN, DE, ZH, RU, ES,IT, PL\n        License: CYSEC, SCB, ASIC\n        Author: Kasila\n        ","descriptionHtml":"<pre><code>    Check: presence of the sidebar &quot;Crypto Trading Guide&quot; on the &quot;Bitcoin Gold&quot; and &quot;Cryptocurrencies vs. Stocks:\n    What's the Difference?&quot; pages.\n    Language: EN, DE, ZH, RU, ES,IT, PL\n    License: CYSEC, SCB, ASIC\n    Author: Kasila\n</code></pre>\n","status":"failed","statusMessage":"Failed: #Bug # 55!061 Sidebar is absent on the Bitcoin Gold page","statusTrace":"self = <pages.BugsManual.bug_061.Sidebar object at 0x7f0c03294110>\nsidebar_item = 'Bitcoin Gold'\n\n    def assert_(self, sidebar_item):\n        print(f\"\\n{datetime.now()}   2. Assert\")\n        try:\n>           sidebar = self.driver.find_element(By.CSS_SELECTOR, 'div.side-nav')\n\npages/BugsManual/bug_061.py:81: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0c033821e0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55a860644810 \\\\u003Cunknown>\\\\n#17 0x55a860653dac \\\\u003Cunknown>\\\\n#18 0x7f7cd9094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div.side-nav\"}\nE         (Session info: chrome=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55a860654c7a <unknown>\nE       #1 0x55a860337e2c <unknown>\nE       #2 0x55a860384661 <unknown>\nE       #3 0x55a860384751 <unknown>\nE       #4 0x55a8603c8f64 <unknown>\nE       #5 0x55a8603a75ed <unknown>\nE       #6 0x55a8603c6303 <unknown>\nE       #7 0x55a8603a7363 <unknown>\nE       #8 0x55a860377247 <unknown>\nE       #9 0x55a860377b9e <unknown>\nE       #10 0x55a86061b24b <unknown>\nE       #11 0x55a86061f2f1 <unknown>\nE       #12 0x55a860606afe <unknown>\nE       #13 0x55a86061fe52 <unknown>\nE       #14 0x55a8605eb79f <unknown>\nE       #15 0x55a860644638 <unknown>\nE       #16 0x55a860644810 <unknown>\nE       #17 0x55a860653dac <unknown>\nE       #18 0x7f7cd9094ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7f0c03284b60>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3d3a34a08551066660093cc2b926e7e1\")>\ncur_language_2_rnd_from_7 = 'pl', cur_country = 'ua', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\nsidebar_item = 'Bitcoin Gold'\n\n    @allure.step('Start retest manual AT_55!061 of the  presence of the \"Crypto trading  guide\" sidebar on '\n                 '\"Bitcoin Gold\" and \"Crypto vs stocks: What is the difference?\" pages')\n    @pytest.mark.parametrize('cur_country', ['es', 'ua', 'au'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('sidebar_item', ['Bitcoin Gold', 'Cryptocurrencies vs. Stocks: What is the Difference?'])\n    @pytest.mark.test_061\n    def test_061(self, worker_id, d, cur_language_2_rnd_from_7, cur_country, cur_role, cur_login, cur_password,\n                 sidebar_item):\n        \"\"\"\n        Check: presence of the sidebar \"Crypto Trading Guide\" on the \"Bitcoin Gold\" and \"Cryptocurrencies vs. Stocks:\n        What's the Difference?\" pages.\n        Language: EN, DE, ZH, RU, ES,IT, PL\n        License: CYSEC, SCB, ASIC\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language_2_rnd_from_7, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"061\", 'Sidebar \" Crypto trading  guide\" is absent on pages \"Bitcoin Gold\" and \"Crypto vs '\n                   'stocks: Whatâ€™s the difference?\"'\n        )\n    \n        page_conditions = Conditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language_2_rnd_from_7, cur_country, cur_role, cur_login, cur_password)\n    \n        menu = MenuSection(d, link)\n        cur_item_link = menu.open_education_cryptocurrency_trading_menu(d, cur_language_2_rnd_from_7, cur_country,\n                                                                        link)\n    \n        test_element = Sidebar(d, cur_item_link, bid)\n        match cur_language_2_rnd_from_7:\n            case \"\" | \"de\" | \"zh\":\n                test_element.sidebar_en_de_zh(d, cur_item_link, sidebar_item)\n            case \"ru\" | \"es\" | \"it\" | \"pl\":\n                test_element.sidebar_ru_es_it_pl(d, cur_item_link, sidebar_item)\n>       test_element.assert_(sidebar_item)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:118: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_061.py:91: in assert_\n    Common.pytest_fail(f\"#Bug # 55!061 Sidebar is absent on the {sidebar_item} page\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = '#Bug # 55!061 Sidebar is absent on the Bitcoin Gold page'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: #Bug # 55!061 Sidebar is absent on the Bitcoin Gold page\n\npages/common.py:232: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1721021287826,"stop":1721021295214,"duration":7388},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1721021295215,"stop":1721021295215,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1721021295215,"stop":1721021295215,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1721021295215,"stop":1721021295215,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language_2_rnd_from_7","time":{"start":1721022308274,"stop":1721022308274,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: presence of the sidebar \"Crypto Trading Guide\" on the \"Bitcoin Gold\" and \"Cryptocurrencies vs. Stocks:\n        What's the Difference?\" pages.\n        Language: EN, DE, ZH, RU, ES,IT, PL\n        License: CYSEC, SCB, ASIC\n        Author: Kasila\n        ","status":"failed","statusMessage":"Failed: #Bug # 55!061 Sidebar is absent on the Bitcoin Gold page","statusTrace":"self = <pages.BugsManual.bug_061.Sidebar object at 0x7f0c03294110>\nsidebar_item = 'Bitcoin Gold'\n\n    def assert_(self, sidebar_item):\n        print(f\"\\n{datetime.now()}   2. Assert\")\n        try:\n>           sidebar = self.driver.find_element(By.CSS_SELECTOR, 'div.side-nav')\n\npages/BugsManual/bug_061.py:81: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0c033821e0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55a860644810 \\\\u003Cunknown>\\\\n#17 0x55a860653dac \\\\u003Cunknown>\\\\n#18 0x7f7cd9094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div.side-nav\"}\nE         (Session info: chrome=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55a860654c7a <unknown>\nE       #1 0x55a860337e2c <unknown>\nE       #2 0x55a860384661 <unknown>\nE       #3 0x55a860384751 <unknown>\nE       #4 0x55a8603c8f64 <unknown>\nE       #5 0x55a8603a75ed <unknown>\nE       #6 0x55a8603c6303 <unknown>\nE       #7 0x55a8603a7363 <unknown>\nE       #8 0x55a860377247 <unknown>\nE       #9 0x55a860377b9e <unknown>\nE       #10 0x55a86061b24b <unknown>\nE       #11 0x55a86061f2f1 <unknown>\nE       #12 0x55a860606afe <unknown>\nE       #13 0x55a86061fe52 <unknown>\nE       #14 0x55a8605eb79f <unknown>\nE       #15 0x55a860644638 <unknown>\nE       #16 0x55a860644810 <unknown>\nE       #17 0x55a860653dac <unknown>\nE       #18 0x7f7cd9094ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7f0c03284b60>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3d3a34a08551066660093cc2b926e7e1\")>\ncur_language_2_rnd_from_7 = 'pl', cur_country = 'ua', cur_role = 'NoAuth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\nsidebar_item = 'Bitcoin Gold'\n\n    @allure.step('Start retest manual AT_55!061 of the  presence of the \"Crypto trading  guide\" sidebar on '\n                 '\"Bitcoin Gold\" and \"Crypto vs stocks: What is the difference?\" pages')\n    @pytest.mark.parametrize('cur_country', ['es', 'ua', 'au'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.parametrize('sidebar_item', ['Bitcoin Gold', 'Cryptocurrencies vs. Stocks: What is the Difference?'])\n    @pytest.mark.test_061\n    def test_061(self, worker_id, d, cur_language_2_rnd_from_7, cur_country, cur_role, cur_login, cur_password,\n                 sidebar_item):\n        \"\"\"\n        Check: presence of the sidebar \"Crypto Trading Guide\" on the \"Bitcoin Gold\" and \"Cryptocurrencies vs. Stocks:\n        What's the Difference?\" pages.\n        Language: EN, DE, ZH, RU, ES,IT, PL\n        License: CYSEC, SCB, ASIC\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language_2_rnd_from_7, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"061\", 'Sidebar \" Crypto trading  guide\" is absent on pages \"Bitcoin Gold\" and \"Crypto vs '\n                   'stocks: Whatâ€™s the difference?\"'\n        )\n    \n        page_conditions = Conditions(d, \"\")\n        link = page_conditions.preconditions(\n            d, CapitalComPageSrc.URL, \"\", cur_language_2_rnd_from_7, cur_country, cur_role, cur_login, cur_password)\n    \n        menu = MenuSection(d, link)\n        cur_item_link = menu.open_education_cryptocurrency_trading_menu(d, cur_language_2_rnd_from_7, cur_country,\n                                                                        link)\n    \n        test_element = Sidebar(d, cur_item_link, bid)\n        match cur_language_2_rnd_from_7:\n            case \"\" | \"de\" | \"zh\":\n                test_element.sidebar_en_de_zh(d, cur_item_link, sidebar_item)\n            case \"ru\" | \"es\" | \"it\" | \"pl\":\n                test_element.sidebar_ru_es_it_pl(d, cur_item_link, sidebar_item)\n>       test_element.assert_(sidebar_item)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:118: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/BugsManual/bug_061.py:91: in assert_\n    Common.pytest_fail(f\"#Bug # 55!061 Sidebar is absent on the {sidebar_item} page\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmsg = '#Bug # 55!061 Sidebar is absent on the Bitcoin Gold page'\n\n    @staticmethod\n    def pytest_fail(msg):\n    \tCommon.flag_of_bug = True\n>   \tpytest.fail(msg)\nE    Failed: #Bug # 55!061 Sidebar is absent on the Bitcoin Gold page\n\npages/common.py:232: Failed","steps":[{"name":"Start retest manual AT_55!061 of the  presence of the \"Crypto trading  guide\" sidebar on \"Bitcoin Gold\" and \"Crypto vs stocks: What is the difference?\" pages","time":{"start":1721022308275,"stop":1721022324921,"duration":16646},"status":"failed","statusMessage":"Failed: #Bug # 55!061 Sidebar is absent on the Bitcoin Gold page\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py\", line 118, in test_061\n    test_element.assert_(sidebar_item)\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/BugsManual/bug_061.py\", line 91, in assert_\n    Common.pytest_fail(f\"#Bug # 55!061 Sidebar is absent on the {sidebar_item} page\")\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/common.py\", line 232, in pytest_fail\n    pytest.fail(msg)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 177, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Preconditions","time":{"start":1721022308277,"stop":1721022318754,"duration":10477},"status":"passed","steps":[{"name":"2024-07-15 05:28:07.204273   Start Checking Captcha","time":{"start":1721022310649,"stop":1721022311657,"duration":1008},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"2024-07-15 05:28:07.204273   Start Checking Captcha","time":{"start":1721022311657,"stop":1721022312701,"duration":1044},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Open 'Language and Country' menu section.","time":{"start":1721022312704,"stop":1721022314000,"duration":1296},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"test_language","value":"'pl'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Set country (licence)","time":{"start":1721022314000,"stop":1721022316673,"duration":2673},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"cur_country","value":"'ua'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2024-07-15 05:28:07.204273   Start Checking Captcha","time":{"start":1721022316673,"stop":1721022317724,"duration":1051},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"2024-07-15 05:28:07.204273   Start Checking Captcha","time":{"start":1721022317724,"stop":1721022318751,"duration":1027},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3d3a34a08551066660093cc2b926e7e1\")>"},{"name":"host","value":"'https://capital.com/'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'pl'"},{"name":"cur_country","value":"'ua'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":6,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select \"Education\" menu, \"Cryptocurrency trading\" submenu","time":{"start":1721022318754,"stop":1721022322852,"duration":4098},"status":"passed","steps":[{"name":"Focus moved to 'Education' menu","time":{"start":1721022318763,"stop":1721022320548,"duration":1785},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3d3a34a08551066660093cc2b926e7e1\")>"},{"name":"test_language","value":"'pl'"},{"name":"test_country","value":"'ua'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Focus move to 'Cryptocurrency trading' submenu and click","time":{"start":1721022320548,"stop":1721022322555,"duration":2007},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3d3a34a08551066660093cc2b926e7e1\")>"},{"name":"test_language","value":"'pl'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3d3a34a08551066660093cc2b926e7e1\")>"},{"name":"cur_language","value":"'pl'"},{"name":"cur_country","value":"'ua'"},{"name":"link","value":"'https://capital.com/pl?country=ua'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3d3a34a08551066660093cc2b926e7e1\")>"},{"name":"cur_language_2_rnd_from_7","value":"'pl'"},{"name":"cur_country","value":"'ua'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"sidebar_item","value":"'Bitcoin Gold'"}],"shouldDisplayMessage":true,"stepsCount":10,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"a9f2c3945973948f","name":"Screenshot","source":"a9f2c3945973948f.png","type":"image/png","size":154444},{"uid":"bf8bb2f3f730a11","name":"stdout","source":"bf8bb2f3f730a11.txt","type":"text/plain","size":3446}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":11,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1721022504979,"stop":1721022505196,"duration":217},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!061 | Sidebar \" Crypto trading  guide\" is absent on pages \"Bitcoin Gold\" and \"Crypto vs stocks: Whatâ€™s the difference?\""},{"name":"feature","value":"Role: NoAuth"},{"name":"story","value":"Country: ua"},{"name":"tag","value":"test_061"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az1776-234"},{"name":"thread","value":"3587-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ua'"},{"name":"cur_language_2_rnd_from_7","value":"'pl'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"d","value":"'Chrome'"},{"name":"sidebar_item","value":"'Bitcoin Gold'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"4f40bdec4aef0186","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/48//#testresult/4f40bdec4aef0186","status":"failed","statusDetails":"Failed: #Bug # 55!061 Sidebar is absent on the Bitcoin Gold page","time":{"start":1720805882085,"stop":1720805897743,"duration":15658}},{"uid":"954424e37ac6db19","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/46//#testresult/954424e37ac6db19","status":"failed","statusDetails":"Failed: #Bug # 55!061 Sidebar is absent on the Bitcoin Gold page","time":{"start":1720648618130,"stop":1720648633863,"duration":15733}},{"uid":"1854a3b7c1259507","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/43//#testresult/1854a3b7c1259507","status":"failed","statusDetails":"Failed: #Bug # 55!061 Sidebar is absent on the Bitcoin Gold page","time":{"start":1720504925222,"stop":1720504941226,"duration":16004}},{"uid":"b56f5dbd35991952","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/40//#testresult/b56f5dbd35991952","status":"broken","statusDetails":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"a[href*='trade-bitcoingold']\"}\n  (Session info: chrome=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x5650223f9c7a <unknown>\n#1 0x5650220dce2c <unknown>\n#2 0x565022129661 <unknown>\n#3 0x565022129751 <unknown>\n#4 0x56502216df64 <unknown>\n#5 0x56502214c5ed <unknown>\n#6 0x56502216b303 <unknown>\n#7 0x56502214c363 <unknown>\n#8 0x56502211c247 <unknown>\n#9 0x56502211cb9e <unknown>\n#10 0x5650223c024b <unknown>\n#11 0x5650223c42f1 <unknown>\n#12 0x5650223abafe <unknown>\n#13 0x5650223c4e52 <unknown>\n#14 0x56502239079f <unknown>\n#15 0x5650223e9638 <unknown>\n#16 0x5650223e9810 <unknown>\n#17 0x5650223f8dac <unknown>\n#18 0x7efc8cc94ac3 <unknown>","time":{"start":1720381500090,"stop":1720381515246,"duration":15156}}]},"tags":["test_061","us_55"]},"source":"eff981e6fe270266.json","parameterValues":["'ua'","'pl'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoAuth'","'Chrome'","'Bitcoin Gold'"]}