{"uid":"46fcc1bbabcec53e","name":"TC_55!665 (Lang: nl) | Bid:55!665-nl.nl.Auth","fullName":"tests.US_55_ReTestsManual.artemdashkov.US_55-artemdashkov_ReTestsManual_test.TestManualDetected#test_665_link_24_7_dedicated_support_on_the_page_how_to_trade_with_us","historyId":"adda6bf24478e9054ce9ea8dca6023c3","time":{"start":1743204327788,"stop":1743204336077,"duration":8289},"description":"\n        Check:  Click the Menu section [Trading] >\n                Scroll down to the link \"24/7 dedicated support\" >\n                Click link [24/7 dedicated support] >\n        Language: NL\n        License/Country: CYSEC\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        ","descriptionHtml":"<pre><code>    Check:  Click the Menu section [Trading] &gt;\n            Scroll down to the link &quot;24/7 dedicated support&quot; &gt;\n            Click link [24/7 dedicated support] &gt;\n    Language: NL\n    License/Country: CYSEC\n    Role: NoReg, NoAuth, Auth\n    Author: Artem Dashkov\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7fbf63725670>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2a139520e8c5257a49334e41eabdba71\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbf6408ee40>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55581a26fe76 \\\\u003Cunknown>\\\\n#22 0x7f989b69caa4 \\\\u003Cunknown>\\\\n#23 0x7f989b729c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.165)\nE       Stacktrace:\nE       #0 0x55581a270ffa <unknown>\nE       #1 0x555819d2f970 <unknown>\nE       #2 0x555819d881ec <unknown>\nE       #3 0x555819d86055 <unknown>\nE       #4 0x555819d836f2 <unknown>\nE       #5 0x555819d828ca <unknown>\nE       #6 0x555819d754cd <unknown>\nE       #7 0x555819da7292 <unknown>\nE       #8 0x555819d74e4a <unknown>\nE       #9 0x555819da745e <unknown>\nE       #10 0x555819dcd70c <unknown>\nE       #11 0x555819da7063 <unknown>\nE       #12 0x555819d73328 <unknown>\nE       #13 0x555819d74491 <unknown>\nE       #14 0x55581a23842b <unknown>\nE       #15 0x55581a23c2ec <unknown>\nE       #16 0x55581a21fa22 <unknown>\nE       #17 0x55581a23ce64 <unknown>\nE       #18 0x55581a203bef <unknown>\nE       #19 0x55581a25f558 <unknown>\nE       #20 0x55581a25f736 <unknown>\nE       #21 0x55581a26fe76 <unknown>\nE       #22 0x7f989b69caa4 <unknown>\nE       #23 0x7f989b729c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-artemdashkov_ReTestsManual_test.TestManualDetected object at 0x7fbf64267c50>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2a139520e8c5257a49334e41eabdba71\")>\ncur_language = 'nl', cur_country = 'nl', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test of the link '24/7 dedicated support' on the Page 'How to trade with us'\")\n    @pytest.mark.parametrize('cur_language', [\"nl\"])\n    @pytest.mark.parametrize('cur_country', [\"nl\"])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_665\n    def test_665_link_24_7_dedicated_support_on_the_page_how_to_trade_with_us(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check:  Click the Menu section [Trading] >\n                Scroll down to the link \"24/7 dedicated support\" >\n                Click link [24/7 dedicated support] >\n        Language: NL\n        License/Country: CYSEC\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"665\",\n            \"Click the Menu section [Trading] > \"\n            \"Scroll down to the link '24/7 dedicated support' > \"\n            \"Click link [24/7 dedicated support]\",\n            False, True\n        )\n        # Arrange\n>       cur_item_link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py:1901: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:152: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7fbf63725670>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2a139520e8c5257a49334e41eabdba71\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1743201141858,"stop":1743201142640,"duration":782},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1743201142640,"stop":1743201142640,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1743201142640,"stop":1743201142641,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1743201142641,"stop":1743201142641,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check:  Click the Menu section [Trading] >\n                Scroll down to the link \"24/7 dedicated support\" >\n                Click link [24/7 dedicated support] >\n        Language: NL\n        License/Country: CYSEC\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        ","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7fbf63725670>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2a139520e8c5257a49334e41eabdba71\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbf6408ee40>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55581a26fe76 \\\\u003Cunknown>\\\\n#22 0x7f989b69caa4 \\\\u003Cunknown>\\\\n#23 0x7f989b729c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.165)\nE       Stacktrace:\nE       #0 0x55581a270ffa <unknown>\nE       #1 0x555819d2f970 <unknown>\nE       #2 0x555819d881ec <unknown>\nE       #3 0x555819d86055 <unknown>\nE       #4 0x555819d836f2 <unknown>\nE       #5 0x555819d828ca <unknown>\nE       #6 0x555819d754cd <unknown>\nE       #7 0x555819da7292 <unknown>\nE       #8 0x555819d74e4a <unknown>\nE       #9 0x555819da745e <unknown>\nE       #10 0x555819dcd70c <unknown>\nE       #11 0x555819da7063 <unknown>\nE       #12 0x555819d73328 <unknown>\nE       #13 0x555819d74491 <unknown>\nE       #14 0x55581a23842b <unknown>\nE       #15 0x55581a23c2ec <unknown>\nE       #16 0x55581a21fa22 <unknown>\nE       #17 0x55581a23ce64 <unknown>\nE       #18 0x55581a203bef <unknown>\nE       #19 0x55581a25f558 <unknown>\nE       #20 0x55581a25f736 <unknown>\nE       #21 0x55581a26fe76 <unknown>\nE       #22 0x7f989b69caa4 <unknown>\nE       #23 0x7f989b729c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-artemdashkov_ReTestsManual_test.TestManualDetected object at 0x7fbf64267c50>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2a139520e8c5257a49334e41eabdba71\")>\ncur_language = 'nl', cur_country = 'nl', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test of the link '24/7 dedicated support' on the Page 'How to trade with us'\")\n    @pytest.mark.parametrize('cur_language', [\"nl\"])\n    @pytest.mark.parametrize('cur_country', [\"nl\"])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_665\n    def test_665_link_24_7_dedicated_support_on_the_page_how_to_trade_with_us(\n            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check:  Click the Menu section [Trading] >\n                Scroll down to the link \"24/7 dedicated support\" >\n                Click link [24/7 dedicated support] >\n        Language: NL\n        License/Country: CYSEC\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"665\",\n            \"Click the Menu section [Trading] > \"\n            \"Scroll down to the link '24/7 dedicated support' > \"\n            \"Click link [24/7 dedicated support]\",\n            False, True\n        )\n        # Arrange\n>       cur_item_link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py:1901: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:152: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7fbf63725670>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2a139520e8c5257a49334e41eabdba71\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","steps":[{"name":"Start test of the link '24/7 dedicated support' on the Page 'How to trade with us'","time":{"start":1743204327788,"stop":1743204336076,"duration":8288},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py\", line 1901, in test_665_link_24_7_dedicated_support_on_the_page_how_to_trade_with_us\n    cur_item_link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 78, in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 152, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1743204327788,"stop":1743204327790,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"2a139520e8c5257a49334e41eabdba71\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'nl'"},{"name":"cur_country","value":"'nl'"},{"name":"cur_role","value":"'Auth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'665'"},{"name":"desc_tc","value":"'Click the Menu section [Trading] > Scroll down to the link '24/7 dedicated support' > Click link [24/7 dedicated support]'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"True"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1743204327790,"stop":1743204336076,"duration":8286},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 152, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"2025-03-28 22:32:21.801633   Start Authorization","time":{"start":1743204335000,"stop":1743204336075,"duration":1075},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"2a139520e8c5257a49334e41eabdba71\")>"},{"name":"link","value":"'https://capital.com/en-gb'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"2a139520e8c5257a49334e41eabdba71\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'nl'"},{"name":"cur_country","value":"'nl'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"2a139520e8c5257a49334e41eabdba71\")>"},{"name":"cur_language","value":"'nl'"},{"name":"cur_country","value":"'nl'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"4e754af1c5487763","name":"Screenshot","source":"4e754af1c5487763.png","type":"image/png","size":611008},{"uid":"31a6de27d5359de2","name":"stdout","source":"31a6de27d5359de2.txt","type":"text/plain","size":2239}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1743204478315,"stop":1743204478726,"duration":411},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!665 | Click the Menu section [Trading] > Scroll down to the link '24/7 dedicated support' > Click link [24/7 dedicated support]"},{"name":"feature","value":"Role: Auth"},{"name":"story","value":"Country: nl"},{"name":"tag","value":"bug_665"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.artemdashkov"},{"name":"suite","value":"US_55-artemdashkov_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetected"},{"name":"host","value":"fv-az1912-887"},{"name":"thread","value":"5519-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.artemdashkov.US_55-artemdashkov_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'nl'"},{"name":"cur_language","value":"'nl'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":21,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":21},"items":[{"uid":"923b4f160faf9212","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/361//#testresult/923b4f160faf9212","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743117870144,"stop":1743117878648,"duration":8504}},{"uid":"198db90210f4b66b","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/360//#testresult/198db90210f4b66b","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743030749276,"stop":1743030757764,"duration":8488}},{"uid":"685a7c975b1298e1","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/359//#testresult/685a7c975b1298e1","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742944261223,"stop":1742944269442,"duration":8219}},{"uid":"47f89f691912792e","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/358//#testresult/47f89f691912792e","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742857781758,"stop":1742857790178,"duration":8420}},{"uid":"fde4cd9c4bf683b5","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/357//#testresult/fde4cd9c4bf683b5","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742771697333,"stop":1742771705543,"duration":8210}},{"uid":"30a976b24e6d5d28","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/356//#testresult/30a976b24e6d5d28","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742685659781,"stop":1742685668935,"duration":9154}},{"uid":"d67dc13bb0e0bcf7","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/355//#testresult/d67dc13bb0e0bcf7","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742599371427,"stop":1742599381149,"duration":9722}},{"uid":"39008a10c36fe77b","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/354//#testresult/39008a10c36fe77b","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742511963302,"stop":1742511971505,"duration":8203}},{"uid":"bde5b93d6a8427da","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/353//#testresult/bde5b93d6a8427da","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742425523845,"stop":1742425532159,"duration":8314}},{"uid":"f60f8633e5c3a01d","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/352//#testresult/f60f8633e5c3a01d","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742338641880,"stop":1742338650473,"duration":8593}},{"uid":"81f4cf6e724f2243","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/351//#testresult/81f4cf6e724f2243","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742253969051,"stop":1742253977217,"duration":8166}},{"uid":"f4d740accff19a9","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/350//#testresult/f4d740accff19a9","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742167344966,"stop":1742167353848,"duration":8882}},{"uid":"46d074446681a793","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/349//#testresult/46d074446681a793","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742081235603,"stop":1742081243942,"duration":8339}},{"uid":"54affacea9a41767","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/348//#testresult/54affacea9a41767","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1741993729423,"stop":1741993737911,"duration":8488}},{"uid":"15c75b5a73d0a6e","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/347//#testresult/15c75b5a73d0a6e","status":"failed","statusDetails":"Failed: Current page have 404 Message. Current URL is https://capital.com/nl-nl/%E2%80%9Chttps:/capital.com/nl-nl/help%E2%80%9D.","time":{"start":1741909644685,"stop":1741909668155,"duration":23470}},{"uid":"baf56cf1b31666ae","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/346//#testresult/baf56cf1b31666ae","status":"failed","statusDetails":"Failed: Current page have 404 Message. Current URL is https://capital.com/nl-nl/%E2%80%9Chttps:/capital.com/nl-nl/help%E2%80%9D.","time":{"start":1741822651994,"stop":1741822674124,"duration":22130}},{"uid":"2c240e6ed4fa8a86","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/345//#testresult/2c240e6ed4fa8a86","status":"failed","statusDetails":"Failed: Current page have 404 Message. Current URL is https://capital.com/nl-nl/%E2%80%9Chttps:/capital.com/nl-nl/help%E2%80%9D.","time":{"start":1741735960244,"stop":1741735983242,"duration":22998}},{"uid":"7798bfcd6bd3a86a","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/344//#testresult/7798bfcd6bd3a86a","status":"failed","statusDetails":"Failed: Current page have 404 Message. Current URL is https://capital.com/nl-nl/%E2%80%9Chttps:/capital.com/nl-nl/help%E2%80%9D.","time":{"start":1741650168581,"stop":1741650191941,"duration":23360}},{"uid":"aca5ef1af2eb2242","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/343//#testresult/aca5ef1af2eb2242","status":"failed","statusDetails":"Failed: Current page have 404 Message. Current URL is https://capital.com/nl-nl/%E2%80%9Chttps:/capital.com/nl-nl/help%E2%80%9D.","time":{"start":1741563951617,"stop":1741563973661,"duration":22044}},{"uid":"79ffd9838eb3d3b1","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/342//#testresult/79ffd9838eb3d3b1","status":"failed","statusDetails":"Failed: Current page have 404 Message. Current URL is https://capital.com/nl-nl/%E2%80%9Chttps:/capital.com/nl-nl/help%E2%80%9D.","time":{"start":1741476449969,"stop":1741476472512,"duration":22543}}]},"tags":["us_55","bug_665"]},"source":"46fcc1bbabcec53e.json","parameterValues":["'nl'","'nl'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'Auth'","'Chrome'"]}