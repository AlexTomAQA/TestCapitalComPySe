{"uid":"94e2b1c4d30c0528","name":"TC_55!655 (Lang: ar) | Bid:55!655-ar.ae.Auth","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_655","historyId":"28a690952d5035604373b1fbf36322d9","time":{"start":1743208779321,"stop":1743208787676,"duration":8355},"description":"\n        Check: Menu section [Trading] > Menu item [Demo trading] > Block [Our CFD markets] > Click button [More] in the\n                tile [Cryptocurrencies]\n        Language: AR\n        License: SCA\n        Author: Kasila\n        ","descriptionHtml":"<pre><code>    Check: Menu section [Trading] &gt; Menu item [Demo trading] &gt; Block [Our CFD markets] &gt; Click button [More] in the\n            tile [Cryptocurrencies]\n    Language: AR\n    License: SCA\n    Author: Kasila\n</code></pre>\n","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7f2388d40050>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ff74c21364d690efcc79b0728a8baa71\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2388ce71d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55b5c11e5e76 \\\\u003Cunknown>\\\\n#22 0x7f9e6069caa4 \\\\u003Cunknown>\\\\n#23 0x7f9e60729c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.165)\nE       Stacktrace:\nE       #0 0x55b5c11e6ffa <unknown>\nE       #1 0x55b5c0ca5970 <unknown>\nE       #2 0x55b5c0cfe1ec <unknown>\nE       #3 0x55b5c0cfc055 <unknown>\nE       #4 0x55b5c0cf96f2 <unknown>\nE       #5 0x55b5c0cf88ca <unknown>\nE       #6 0x55b5c0ceb4cd <unknown>\nE       #7 0x55b5c0d1d292 <unknown>\nE       #8 0x55b5c0ceae4a <unknown>\nE       #9 0x55b5c0d1d45e <unknown>\nE       #10 0x55b5c0d4370c <unknown>\nE       #11 0x55b5c0d1d063 <unknown>\nE       #12 0x55b5c0ce9328 <unknown>\nE       #13 0x55b5c0cea491 <unknown>\nE       #14 0x55b5c11ae42b <unknown>\nE       #15 0x55b5c11b22ec <unknown>\nE       #16 0x55b5c1195a22 <unknown>\nE       #17 0x55b5c11b2e64 <unknown>\nE       #18 0x55b5c1179bef <unknown>\nE       #19 0x55b5c11d5558 <unknown>\nE       #20 0x55b5c11d5736 <unknown>\nE       #21 0x55b5c11e5e76 <unknown>\nE       #22 0x7f9e6069caa4 <unknown>\nE       #23 0x7f9e60729c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7f2389afd880>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ff74c21364d690efcc79b0728a8baa71\")>\ncur_language = 'ar', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\n        'Start retest manual AT_55!655  The page with \"Error 16\" text is opened after clicking on the link [أكثر] (More)'\n        ' in the block \"الأسواق المتاحة\"(Our CFD markets)')\n    @pytest.mark.parametrize('cur_language', ['ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_655\n    def test_655(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Menu section [Trading] > Menu item [Demo trading] > Block [Our CFD markets] > Click button [More] in the\n                tile [Cryptocurrencies]\n        Language: AR\n        License: SCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"655\", 'The page with \"Error 16\" text is opened after clicking on the link [أكثر] (More) in '\n                   'the block \"الأسواق المتاحة\"(Our CFD markets) when AR  language and SCA license are selected'\n        )\n    \n>       link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:930: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:152: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7f2388d40050>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ff74c21364d690efcc79b0728a8baa71\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1743207147526,"stop":1743207148646,"duration":1120},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1743207148646,"stop":1743207148646,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1743207148647,"stop":1743207148647,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1743207148647,"stop":1743207148647,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check: Menu section [Trading] > Menu item [Demo trading] > Block [Our CFD markets] > Click button [More] in the\n                tile [Cryptocurrencies]\n        Language: AR\n        License: SCA\n        Author: Kasila\n        ","status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked","statusTrace":"self = <pages.conditions_v2.NewConditions object at 0x7f2388d40050>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ff74c21364d690efcc79b0728a8baa71\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n>           menu.element_is_clickable(menu.MENU_LOGIN).click()\n\npages/conditions_v2.py:237: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2388ce71d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55b5c11e5e76 \\\\u003Cunknown>\\\\n#22 0x7f9e6069caa4 \\\\u003Cunknown>\\\\n#23 0x7f9e60729c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"accountBtns_btn__vOcCs accountBtns_btnEmpty__TCWRE helpers_showLg__UPEqH js-analyticsClick js-analyticsVisible\" data-type=\"btn_header_login\" data-testid=\"login_btn\">...</button> is not clickable at point (1385, 121). Other element would receive the click: <div class=\"modal_overlay__f_YlZ modal_mobileBottomAttached__cTOIu\">...</div>\nE         (Session info: chrome=134.0.6998.165)\nE       Stacktrace:\nE       #0 0x55b5c11e6ffa <unknown>\nE       #1 0x55b5c0ca5970 <unknown>\nE       #2 0x55b5c0cfe1ec <unknown>\nE       #3 0x55b5c0cfc055 <unknown>\nE       #4 0x55b5c0cf96f2 <unknown>\nE       #5 0x55b5c0cf88ca <unknown>\nE       #6 0x55b5c0ceb4cd <unknown>\nE       #7 0x55b5c0d1d292 <unknown>\nE       #8 0x55b5c0ceae4a <unknown>\nE       #9 0x55b5c0d1d45e <unknown>\nE       #10 0x55b5c0d4370c <unknown>\nE       #11 0x55b5c0d1d063 <unknown>\nE       #12 0x55b5c0ce9328 <unknown>\nE       #13 0x55b5c0cea491 <unknown>\nE       #14 0x55b5c11ae42b <unknown>\nE       #15 0x55b5c11b22ec <unknown>\nE       #16 0x55b5c1195a22 <unknown>\nE       #17 0x55b5c11b2e64 <unknown>\nE       #18 0x55b5c1179bef <unknown>\nE       #19 0x55b5c11d5558 <unknown>\nE       #20 0x55b5c11d5736 <unknown>\nE       #21 0x55b5c11e5e76 <unknown>\nE       #22 0x7f9e6069caa4 <unknown>\nE       #23 0x7f9e60729c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs object at 0x7f2389afd880>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ff74c21364d690efcc79b0728a8baa71\")>\ncur_language = 'ar', cur_country = 'ae', cur_role = 'Auth'\ncur_login = 'test001.miketar+1@gmail.com', cur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\n        'Start retest manual AT_55!655  The page with \"Error 16\" text is opened after clicking on the link [أكثر] (More)'\n        ' in the block \"الأسواق المتاحة\"(Our CFD markets)')\n    @pytest.mark.parametrize('cur_language', ['ar'])\n    @pytest.mark.parametrize('cur_country', ['ae'])\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_655\n    def test_655(self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check: Menu section [Trading] > Menu item [Demo trading] > Block [Our CFD markets] > Click button [More] in the\n                tile [Cryptocurrencies]\n        Language: AR\n        License: SCA\n        Author: Kasila\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language, cur_country, cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"655\", 'The page with \"Error 16\" text is opened after clicking on the link [أكثر] (More) in '\n                   'the block \"الأسواق المتاحة\"(Our CFD markets) when AR  language and SCA license are selected'\n        )\n    \n>       link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n\ntests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py:930: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/conditions_v2.py:78: in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\npages/conditions_v2.py:152: in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.conditions_v2.NewConditions object at 0x7f2388d40050>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ff74c21364d690efcc79b0728a8baa71\")>\nlink = 'https://capital.com/en-gb', login = 'test001.miketar+1@gmail.com'\npassword = 'Qwer1234-!@#$', cur_role = 'Auth'\n\n    @allure.step(f\"{datetime.now()}   Start Authorization\")\n    # @profile(precision=3)\n    def to_do_authorisation_new(self, d, link, login, password, cur_role):\n        \"\"\"Authorization\"\"\"\n        print(f\"\\n\" f\"{datetime.now()}   Start Authorization\")\n    \n        # Setup wait for later\n        menu = MainMenu(d, link)\n        assert login != \"\", \"Авторизация невозможна. Не указан e-mail\"\n        assert password != \"\", \"Авторизация невозможна. Не указан пароль\"\n    \n        # нажать в хедере на кнопку \"Log in\"\n        try:\n            menu.element_is_clickable(menu.MENU_LOGIN).click()\n        except:\n>           pytest.fail(\"Bug! 'Login' button is not clicked\")\nE           Failed: Bug! 'Login' button is not clicked\n\npages/conditions_v2.py:239: Failed","steps":[{"name":"Start retest manual AT_55!655  The page with \"Error 16\" text is opened after clicking on the link [أكثر] (More) in the block \"الأسواق المتاحة\"(Our CFD markets)","time":{"start":1743208779322,"stop":1743208787676,"duration":8354},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/tassobaccato/US_55-tassobaccato_ReTestsManual_test.py\", line 930, in test_655\n    link = apply_preconditions_to_link(d, cur_language, cur_country, cur_role, cur_login, cur_password)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 78, in apply_preconditions_to_link\n    return cond.preconditions(d, CapitalComPageSrc.URL_NEW, '', cur_language, cur_country, cur_role,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 152, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1743208779322,"stop":1743208779324,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ff74c21364d690efcc79b0728a8baa71\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'655'"},{"name":"desc_tc","value":"'The page with \"Error 16\" text is opened after clicking on the link [أكثر] (More) in the block \"الأسواق المتاحة\"(Our CFD markets) when AR  language and SCA license are selected'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"False"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"   Set New preconditions","time":{"start":1743208779324,"stop":1743208787675,"duration":8351},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 152, in preconditions\n    self.to_do_authorisation_new(d, host, cur_login, cur_password, cur_role)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[{"name":"2025-03-29 00:12:27.488962   Start Authorization","time":{"start":1743208786615,"stop":1743208787675,"duration":1060},"status":"failed","statusMessage":"Failed: Bug! 'Login' button is not clicked\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/conditions_v2.py\", line 239, in to_do_authorisation_new\n    pytest.fail(\"Bug! 'Login' button is not clicked\")\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ff74c21364d690efcc79b0728a8baa71\")>"},{"name":"link","value":"'https://capital.com/en-gb'"},{"name":"login","value":"'test001.miketar+1@gmail.com'"},{"name":"password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ff74c21364d690efcc79b0728a8baa71\")>"},{"name":"host","value":"'https://capital.com/en-gb'"},{"name":"end_point","value":"''"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ff74c21364d690efcc79b0728a8baa71\")>"},{"name":"cur_language","value":"'ar'"},{"name":"cur_country","value":"'ae'"},{"name":"cur_role","value":"'Auth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"fceb748295138510","name":"Screenshot","source":"fceb748295138510.png","type":"image/png","size":611008},{"uid":"445e95aec233539e","name":"stdout","source":"445e95aec233539e.txt","type":"text/plain","size":2239}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1743208849278,"stop":1743208849587,"duration":309},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!655 | The page with \"Error 16\" text is opened after clicking on the link [أكثر] (More) in the block \"الأسواق المتاحة\"(Our CFD markets) when AR  language and SCA license are selected"},{"name":"feature","value":"Role: Auth"},{"name":"story","value":"Country: ae"},{"name":"tag","value":"bug_655"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az1912-887"},{"name":"thread","value":"32379-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ae'"},{"name":"cur_language","value":"'ar'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'Auth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":21,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":21},"items":[{"uid":"e79fc6068d5065a3","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/361//#testresult/e79fc6068d5065a3","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743122465900,"stop":1743122474178,"duration":8278}},{"uid":"3d1f0f77bea8520f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/360//#testresult/3d1f0f77bea8520f","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1743035358665,"stop":1743035367288,"duration":8623}},{"uid":"641499172a8775b1","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/359//#testresult/641499172a8775b1","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742948862666,"stop":1742948870978,"duration":8312}},{"uid":"db541b0e8b828352","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/358//#testresult/db541b0e8b828352","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742862271992,"stop":1742862280334,"duration":8342}},{"uid":"c84caa5f23b10a96","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/357//#testresult/c84caa5f23b10a96","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742775942949,"stop":1742775951296,"duration":8347}},{"uid":"557121ea8ad1b5c4","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/356//#testresult/557121ea8ad1b5c4","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742690277213,"stop":1742690285653,"duration":8440}},{"uid":"4d35b7f2b96fdaf8","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/355//#testresult/4d35b7f2b96fdaf8","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742603913135,"stop":1742603921629,"duration":8494}},{"uid":"565ae742b1c92853","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/354//#testresult/565ae742b1c92853","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742516490787,"stop":1742516499125,"duration":8338}},{"uid":"d7a9ca6ab5ec2e95","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/353//#testresult/d7a9ca6ab5ec2e95","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742430129331,"stop":1742430137838,"duration":8507}},{"uid":"fc148da18f647113","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/352//#testresult/fc148da18f647113","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742343246503,"stop":1742343255118,"duration":8615}},{"uid":"7d3e8d1e7b255133","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/351//#testresult/7d3e8d1e7b255133","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742258391992,"stop":1742258400382,"duration":8390}},{"uid":"d7ac858014f5d90e","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/350//#testresult/d7ac858014f5d90e","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742171782762,"stop":1742171791323,"duration":8561}},{"uid":"4f9135b5403b68b5","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/349//#testresult/4f9135b5403b68b5","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1742085700049,"stop":1742085708413,"duration":8364}},{"uid":"f36a0882351a3241","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/348//#testresult/f36a0882351a3241","status":"failed","statusDetails":"Failed: Bug! 'Login' button is not clicked","time":{"start":1741998236949,"stop":1741998245245,"duration":8296}},{"uid":"a414efbd1099da24","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/347//#testresult/a414efbd1099da24","status":"failed","statusDetails":"Failed: #Bug # 55!655 \nExpected result: The page with (https://capital.com/ar-ae/markets/cryptocurrencies) URL is opened\nActual result: The page with https://capital.com/en-mena/markets/cryptocurrencies URL is opened","time":{"start":1741917718267,"stop":1741917740634,"duration":22367}},{"uid":"c0c50ad3a6b5ee9c","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/346//#testresult/c0c50ad3a6b5ee9c","status":"failed","statusDetails":"Failed: #Bug # 55!655 \nExpected result: The page with (https://capital.com/ar-ae/markets/cryptocurrencies) URL is opened\nActual result: The page with https://capital.com/en-mena/markets/cryptocurrencies URL is opened","time":{"start":1741830568086,"stop":1741830589523,"duration":21437}},{"uid":"96825c4a64245305","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/345//#testresult/96825c4a64245305","status":"failed","statusDetails":"Failed: #Bug # 55!655 \nExpected result: The page with (https://capital.com/ar-ae/markets/cryptocurrencies) URL is opened\nActual result: The page with https://capital.com/en-mena/markets/cryptocurrencies URL is opened","time":{"start":1741750740312,"stop":1741750762482,"duration":22170}},{"uid":"13a88ae834728b46","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/344//#testresult/13a88ae834728b46","status":"failed","statusDetails":"Failed: #Bug # 55!655 \nExpected result: The page with (https://capital.com/ar-ae/markets/cryptocurrencies) URL is opened\nActual result: The page with https://capital.com/en-mena/markets/cryptocurrencies URL is opened","time":{"start":1741664642253,"stop":1741664665187,"duration":22934}},{"uid":"98ba2f709d7eb4fd","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/343//#testresult/98ba2f709d7eb4fd","status":"failed","statusDetails":"Failed: #Bug # 55!655 \nExpected result: The page with (https://capital.com/ar-ae/markets/cryptocurrencies) URL is opened\nActual result: The page with https://capital.com/en-mena/markets/cryptocurrencies URL is opened","time":{"start":1741571447127,"stop":1741571469237,"duration":22110}},{"uid":"ad7454e035146220","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/342//#testresult/ad7454e035146220","status":"failed","statusDetails":"Failed: #Bug # 55!655 \nExpected result: The page with (https://capital.com/ar-ae/markets/cryptocurrencies) URL is opened\nActual result: The page with https://capital.com/en-mena/markets/cryptocurrencies URL is opened","time":{"start":1741484496673,"stop":1741484517928,"duration":21255}}]},"tags":["us_55","bug_655"]},"source":"94e2b1c4d30c0528.json","parameterValues":["'ae'","'ar'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'Auth'","'Chrome'"]}