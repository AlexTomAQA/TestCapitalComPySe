{"uid":"1cdacd95ba26ed39","name":"TC_55!621 (Lang: en) | Bid:55!621-en.eu.NoAuth","fullName":"tests.US_55_ReTestsManual.artemdashkov.US_55-artemdashkov_ReTestsManual_test.TestManualDetected#test_621_start_test_of_reopen_demo_trading_page","historyId":"e08c18ad378516f1fcf542b7c0655a2b","time":{"start":1737330824564,"stop":1737330826403,"duration":1839},"description":"\n        Check:  Click the Menu section [Trading] >\n                Click Menu item [Demo trading] >\n                Click the Menu section [Trading] >\n                Click Menu item [Demo trading] >\n        Language: All\n        License/Country:  ASIC, SCA, CYSEC, FCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        ","descriptionHtml":"<pre><code>    Check:  Click the Menu section [Trading] &gt;\n            Click Menu item [Demo trading] &gt;\n            Click the Menu section [Trading] &gt;\n            Click Menu item [Demo trading] &gt;\n    Language: All\n    License/Country:  ASIC, SCA, CYSEC, FCA\n    Role: NoReg, NoAuth, Auth\n    Author: Artem Dashkov\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: 'url' must be a string\n  (Session info: chrome=131.0.6778.204)\nStacktrace:\n#0 0x55bac96771fa <unknown>\n#1 0x55bac9187810 <unknown>\n#2 0x55bac9219d13 <unknown>\n#3 0x55bac91fa582 <unknown>\n#4 0x55bac9219007 <unknown>\n#5 0x55bac91fa323 <unknown>\n#6 0x55bac91c8de0 <unknown>\n#7 0x55bac91c9dbe <unknown>\n#8 0x55bac964312b <unknown>\n#9 0x55bac96470c7 <unknown>\n#10 0x55bac96306cc <unknown>\n#11 0x55bac9647c47 <unknown>\n#12 0x55bac961567f <unknown>\n#13 0x55bac9666288 <unknown>\n#14 0x55bac9666450 <unknown>\n#15 0x55bac9676076 <unknown>\n#16 0x7f511069ca94 <unknown>\n#17 0x7f5110729c3c <unknown>","statusTrace":"self = <US_55-artemdashkov_ReTestsManual_test.TestManualDetected object at 0x7f272193bb60>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"eab2a56d3bafd44d33373a8a4b92b8ef\")>\ncur_language_country_for_fca_sca_asic_cysec_2_rnd = ['', 'eu']\ncur_role = 'NoAuth', cur_login = 'test001.miketar+1@gmail.com'\ncur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test of reopen 'Demo trading' page\")\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_621\n    def test_621_start_test_of_reopen_demo_trading_page(\n            self, worker_id, d, cur_language_country_for_fca_sca_asic_cysec_2_rnd, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check:  Click the Menu section [Trading] >\n                Click Menu item [Demo trading] >\n                Click the Menu section [Trading] >\n                Click Menu item [Demo trading] >\n        Language: All\n        License/Country:  ASIC, SCA, CYSEC, FCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language_country_for_fca_sca_asic_cysec_2_rnd[0],\n            cur_language_country_for_fca_sca_asic_cysec_2_rnd[1], cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"621\",\n            \"Click the Menu section [Trading] > \"\n            \"Click Menu item [Demo trading] > \"\n            \"Click the Menu section [Trading] > \"\n            \"Click Menu item [Demo trading].\",\n            False, True\n        )\n        # Arrange\n        # pytest.skip(\"Промежуточная версия\")\n        cur_item_link = apply_preconditions_to_link(d, cur_language_country_for_fca_sca_asic_cysec_2_rnd[0],\n                                                    cur_language_country_for_fca_sca_asic_cysec_2_rnd[1], cur_role, cur_login, cur_password)\n    \n        page_menu = from_trading_menu_open_demo.MenuNewDemo(d, cur_item_link)\n>       link = page_menu.from_trading_menu_open_demo(d, cur_language_country_for_fca_sca_asic_cysec_2_rnd[0],\n                                                     cur_language_country_for_fca_sca_asic_cysec_2_rnd[1], cur_item_link)\n\ntests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py:1605: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Menu/New/from_trading_menu_open_demo.py:42: in from_trading_menu_open_demo\n    answer = MenuBase(d, link).move_focus_menu_pause_move_focus_to_submenu_and_click(\npages/Menu/New/menu_new_base.py:26: in move_focus_menu_pause_move_focus_to_submenu_and_click\n    self.open_page()\npages/base_page.py:151: in open_page\n    self.driver.get(link)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:389: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f27218807a0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"invalid argument: \\'url\\' must be a string\\\\...\\\\n#15 0x55bac9676076 \\\\u003Cunknown>\\\\n#16 0x7f511069ca94 \\\\u003Cunknown>\\\\n#17 0x7f5110729c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: 'url' must be a string\nE         (Session info: chrome=131.0.6778.204)\nE       Stacktrace:\nE       #0 0x55bac96771fa <unknown>\nE       #1 0x55bac9187810 <unknown>\nE       #2 0x55bac9219d13 <unknown>\nE       #3 0x55bac91fa582 <unknown>\nE       #4 0x55bac9219007 <unknown>\nE       #5 0x55bac91fa323 <unknown>\nE       #6 0x55bac91c8de0 <unknown>\nE       #7 0x55bac91c9dbe <unknown>\nE       #8 0x55bac964312b <unknown>\nE       #9 0x55bac96470c7 <unknown>\nE       #10 0x55bac96306cc <unknown>\nE       #11 0x55bac9647c47 <unknown>\nE       #12 0x55bac961567f <unknown>\nE       #13 0x55bac9666288 <unknown>\nE       #14 0x55bac9666450 <unknown>\nE       #15 0x55bac9676076 <unknown>\nE       #16 0x7f511069ca94 <unknown>\nE       #17 0x7f5110729c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidArgumentException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1737325907197,"stop":1737325907826,"duration":629},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_login","time":{"start":1737325907826,"stop":1737325907826,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1737325907826,"stop":1737325907826,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_password","time":{"start":1737325907826,"stop":1737325907827,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cur_language_country_for_fca_sca_asic_cysec_2_rnd","time":{"start":1737330824563,"stop":1737330824563,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Check:  Click the Menu section [Trading] >\n                Click Menu item [Demo trading] >\n                Click the Menu section [Trading] >\n                Click Menu item [Demo trading] >\n        Language: All\n        License/Country:  ASIC, SCA, CYSEC, FCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        ","status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: 'url' must be a string\n  (Session info: chrome=131.0.6778.204)\nStacktrace:\n#0 0x55bac96771fa <unknown>\n#1 0x55bac9187810 <unknown>\n#2 0x55bac9219d13 <unknown>\n#3 0x55bac91fa582 <unknown>\n#4 0x55bac9219007 <unknown>\n#5 0x55bac91fa323 <unknown>\n#6 0x55bac91c8de0 <unknown>\n#7 0x55bac91c9dbe <unknown>\n#8 0x55bac964312b <unknown>\n#9 0x55bac96470c7 <unknown>\n#10 0x55bac96306cc <unknown>\n#11 0x55bac9647c47 <unknown>\n#12 0x55bac961567f <unknown>\n#13 0x55bac9666288 <unknown>\n#14 0x55bac9666450 <unknown>\n#15 0x55bac9676076 <unknown>\n#16 0x7f511069ca94 <unknown>\n#17 0x7f5110729c3c <unknown>","statusTrace":"self = <US_55-artemdashkov_ReTestsManual_test.TestManualDetected object at 0x7f272193bb60>\nworker_id = 'master'\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"eab2a56d3bafd44d33373a8a4b92b8ef\")>\ncur_language_country_for_fca_sca_asic_cysec_2_rnd = ['', 'eu']\ncur_role = 'NoAuth', cur_login = 'test001.miketar+1@gmail.com'\ncur_password = 'Qwer1234-!@#$'\n\n    @allure.step(\"Start test of reopen 'Demo trading' page\")\n    @pytest.mark.parametrize('cur_role', [\"NoReg\", \"Auth\", \"NoAuth\"])\n    @pytest.mark.bug_621\n    def test_621_start_test_of_reopen_demo_trading_page(\n            self, worker_id, d, cur_language_country_for_fca_sca_asic_cysec_2_rnd, cur_role, cur_login, cur_password):\n        \"\"\"\n        Check:  Click the Menu section [Trading] >\n                Click Menu item [Demo trading] >\n                Click the Menu section [Trading] >\n                Click Menu item [Demo trading] >\n        Language: All\n        License/Country:  ASIC, SCA, CYSEC, FCA\n        Role: NoReg, NoAuth, Auth\n        Author: Artem Dashkov\n        \"\"\"\n    \n        bid = build_dynamic_arg_for_us_55(\n            d, worker_id, cur_language_country_for_fca_sca_asic_cysec_2_rnd[0],\n            cur_language_country_for_fca_sca_asic_cysec_2_rnd[1], cur_role,\n            \"55\", \"ReTests of Manual Detected Bugs\",\n            \"621\",\n            \"Click the Menu section [Trading] > \"\n            \"Click Menu item [Demo trading] > \"\n            \"Click the Menu section [Trading] > \"\n            \"Click Menu item [Demo trading].\",\n            False, True\n        )\n        # Arrange\n        # pytest.skip(\"Промежуточная версия\")\n        cur_item_link = apply_preconditions_to_link(d, cur_language_country_for_fca_sca_asic_cysec_2_rnd[0],\n                                                    cur_language_country_for_fca_sca_asic_cysec_2_rnd[1], cur_role, cur_login, cur_password)\n    \n        page_menu = from_trading_menu_open_demo.MenuNewDemo(d, cur_item_link)\n>       link = page_menu.from_trading_menu_open_demo(d, cur_language_country_for_fca_sca_asic_cysec_2_rnd[0],\n                                                     cur_language_country_for_fca_sca_asic_cysec_2_rnd[1], cur_item_link)\n\ntests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py:1605: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/Menu/New/from_trading_menu_open_demo.py:42: in from_trading_menu_open_demo\n    answer = MenuBase(d, link).move_focus_menu_pause_move_focus_to_submenu_and_click(\npages/Menu/New/menu_new_base.py:26: in move_focus_menu_pause_move_focus_to_submenu_and_click\n    self.open_page()\npages/base_page.py:151: in open_page\n    self.driver.get(link)\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:389: in get\n    self.execute(Command.GET, {\"url\": url})\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f27218807a0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"invalid argument: \\'url\\' must be a string\\\\...\\\\n#15 0x55bac9676076 \\\\u003Cunknown>\\\\n#16 0x7f511069ca94 \\\\u003Cunknown>\\\\n#17 0x7f5110729c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: 'url' must be a string\nE         (Session info: chrome=131.0.6778.204)\nE       Stacktrace:\nE       #0 0x55bac96771fa <unknown>\nE       #1 0x55bac9187810 <unknown>\nE       #2 0x55bac9219d13 <unknown>\nE       #3 0x55bac91fa582 <unknown>\nE       #4 0x55bac9219007 <unknown>\nE       #5 0x55bac91fa323 <unknown>\nE       #6 0x55bac91c8de0 <unknown>\nE       #7 0x55bac91c9dbe <unknown>\nE       #8 0x55bac964312b <unknown>\nE       #9 0x55bac96470c7 <unknown>\nE       #10 0x55bac96306cc <unknown>\nE       #11 0x55bac9647c47 <unknown>\nE       #12 0x55bac961567f <unknown>\nE       #13 0x55bac9666288 <unknown>\nE       #14 0x55bac9666450 <unknown>\nE       #15 0x55bac9676076 <unknown>\nE       #16 0x7f511069ca94 <unknown>\nE       #17 0x7f5110729c3c <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidArgumentException","steps":[{"name":"Start test of reopen 'Demo trading' page","time":{"start":1737330824564,"stop":1737330826402,"duration":1838},"status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: 'url' must be a string\n  (Session info: chrome=131.0.6778.204)\nStacktrace:\n#0 0x55bac96771fa <unknown>\n#1 0x55bac9187810 <unknown>\n#2 0x55bac9219d13 <unknown>\n#3 0x55bac91fa582 <unknown>\n#4 0x55bac9219007 <unknown>\n#5 0x55bac91fa323 <unknown>\n#6 0x55bac91c8de0 <unknown>\n#7 0x55bac91c9dbe <unknown>\n#8 0x55bac964312b <unknown>\n#9 0x55bac96470c7 <unknown>\n#10 0x55bac96306cc <unknown>\n#11 0x55bac9647c47 <unknown>\n#12 0x55bac961567f <unknown>\n#13 0x55bac9666288 <unknown>\n#14 0x55bac9666450 <unknown>\n#15 0x55bac9676076 <unknown>\n#16 0x7f511069ca94 <unknown>\n#17 0x7f5110729c3c <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/tests/US_55_ReTestsManual/artemdashkov/US_55-artemdashkov_ReTestsManual_test.py\", line 1605, in test_621_start_test_of_reopen_demo_trading_page\n    link = page_menu.from_trading_menu_open_demo(d, cur_language_country_for_fca_sca_asic_cysec_2_rnd[0],\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Menu/New/from_trading_menu_open_demo.py\", line 42, in from_trading_menu_open_demo\n    answer = MenuBase(d, link).move_focus_menu_pause_move_focus_to_submenu_and_click(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Menu/New/menu_new_base.py\", line 26, in move_focus_menu_pause_move_focus_to_submenu_and_click\n    self.open_page()\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/base_page.py\", line 151, in open_page\n    self.driver.get(link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 389, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 380, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Build dynamic argument for TCs of US_55","time":{"start":1737330824564,"stop":1737330824610,"duration":46},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"eab2a56d3bafd44d33373a8a4b92b8ef\")>"},{"name":"worker_id","value":"'master'"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'eu'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"us","value":"'55'"},{"name":"desc_us","value":"'ReTests of Manual Detected Bugs'"},{"name":"num_tc","value":"'621'"},{"name":"desc_tc","value":"'Click the Menu section [Trading] > Click Menu item [Demo trading] > Click the Menu section [Trading] > Click Menu item [Demo trading].'"},{"name":"manual","value":"False"},{"name":"new_layout","value":"True"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Select 'Trading' menu 'Demo' submenu","time":{"start":1737330824610,"stop":1737330826402,"duration":1792},"status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: 'url' must be a string\n  (Session info: chrome=131.0.6778.204)\nStacktrace:\n#0 0x55bac96771fa <unknown>\n#1 0x55bac9187810 <unknown>\n#2 0x55bac9219d13 <unknown>\n#3 0x55bac91fa582 <unknown>\n#4 0x55bac9219007 <unknown>\n#5 0x55bac91fa323 <unknown>\n#6 0x55bac91c8de0 <unknown>\n#7 0x55bac91c9dbe <unknown>\n#8 0x55bac964312b <unknown>\n#9 0x55bac96470c7 <unknown>\n#10 0x55bac96306cc <unknown>\n#11 0x55bac9647c47 <unknown>\n#12 0x55bac961567f <unknown>\n#13 0x55bac9666288 <unknown>\n#14 0x55bac9666450 <unknown>\n#15 0x55bac9676076 <unknown>\n#16 0x7f511069ca94 <unknown>\n#17 0x7f5110729c3c <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Menu/New/from_trading_menu_open_demo.py\", line 42, in from_trading_menu_open_demo\n    answer = MenuBase(d, link).move_focus_menu_pause_move_focus_to_submenu_and_click(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/Menu/New/menu_new_base.py\", line 26, in move_focus_menu_pause_move_focus_to_submenu_and_click\n    self.open_page()\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/pages/base_page.py\", line 151, in open_page\n    self.driver.get(link)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 389, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 380, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"eab2a56d3bafd44d33373a8a4b92b8ef\")>"},{"name":"cur_language","value":"''"},{"name":"cur_country","value":"'eu'"},{"name":"link","value":"None"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"worker_id","value":"'master'"},{"name":"d","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"eab2a56d3bafd44d33373a8a4b92b8ef\")>"},{"name":"cur_language_country_for_fca_sca_asic_cysec_2_rnd","value":"['', 'eu']"},{"name":"cur_role","value":"'NoAuth'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"a401867230ca5023","name":"Screenshot","source":"a401867230ca5023.png","type":"image/png","size":206168},{"uid":"bdcd678f0cc020f0","name":"stdout","source":"bdcd678f0cc020f0.txt","type":"text/plain","size":1031}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"d::0","time":{"start":1737331072695,"stop":1737331073314,"duration":619},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"TC_55!621 | Click the Menu section [Trading] > Click Menu item [Demo trading] > Click the Menu section [Trading] > Click Menu item [Demo trading]."},{"name":"feature","value":"Role: NoAuth"},{"name":"story","value":"Country: eu"},{"name":"tag","value":"bug_621"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.artemdashkov"},{"name":"suite","value":"US_55-artemdashkov_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetected"},{"name":"host","value":"fv-az1377-715"},{"name":"thread","value":"5640-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.artemdashkov.US_55-artemdashkov_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_language_country_for_fca_sca_asic_cysec_2_rnd","value":"['', 'eu']"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoAuth'"},{"name":"d","value":"'Chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":0,"unknown":0,"total":9},"items":[{"uid":"c468f6aafcae5186","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/293//#testresult/c468f6aafcae5186","status":"broken","statusDetails":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: 'url' must be a string\n  (Session info: chrome=131.0.6778.204)\nStacktrace:\n#0 0x56374113e1fa <unknown>\n#1 0x563740c4e810 <unknown>\n#2 0x563740ce0d13 <unknown>\n#3 0x563740cc1582 <unknown>\n#4 0x563740ce0007 <unknown>\n#5 0x563740cc1323 <unknown>\n#6 0x563740c8fde0 <unknown>\n#7 0x563740c90dbe <unknown>\n#8 0x56374110a12b <unknown>\n#9 0x56374110e0c7 <unknown>\n#10 0x5637410f76cc <unknown>\n#11 0x56374110ec47 <unknown>\n#12 0x5637410dc67f <unknown>\n#13 0x56374112d288 <unknown>\n#14 0x56374112d450 <unknown>\n#15 0x56374113d076 <unknown>\n#16 0x7f1729e9ca94 <unknown>\n#17 0x7f1729f29c3c <unknown>","time":{"start":1737244321182,"stop":1737244323036,"duration":1854}},{"uid":"3779961bc53d866f","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/291//#testresult/3779961bc53d866f","status":"broken","statusDetails":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: 'url' must be a string\n  (Session info: chrome=131.0.6778.204)\nStacktrace:\n#0 0x5589a2a941fa <unknown>\n#1 0x5589a25a4810 <unknown>\n#2 0x5589a2636d13 <unknown>\n#3 0x5589a2617582 <unknown>\n#4 0x5589a2636007 <unknown>\n#5 0x5589a2617323 <unknown>\n#6 0x5589a25e5de0 <unknown>\n#7 0x5589a25e6dbe <unknown>\n#8 0x5589a2a6012b <unknown>\n#9 0x5589a2a640c7 <unknown>\n#10 0x5589a2a4d6cc <unknown>\n#11 0x5589a2a64c47 <unknown>\n#12 0x5589a2a3267f <unknown>\n#13 0x5589a2a83288 <unknown>\n#14 0x5589a2a83450 <unknown>\n#15 0x5589a2a93076 <unknown>\n#16 0x7f24e1e9ca94 <unknown>\n#17 0x7f24e1f29c3c <unknown>","time":{"start":1737071596884,"stop":1737071597939,"duration":1055}},{"uid":"a6519fbcdeac217a","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/285//#testresult/a6519fbcdeac217a","status":"broken","statusDetails":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: 'url' must be a string\n  (Session info: chrome=131.0.6778.204)\nStacktrace:\n#0 0x56368a8f21fa <unknown>\n#1 0x56368a402810 <unknown>\n#2 0x56368a494d13 <unknown>\n#3 0x56368a475582 <unknown>\n#4 0x56368a494007 <unknown>\n#5 0x56368a475323 <unknown>\n#6 0x56368a443de0 <unknown>\n#7 0x56368a444dbe <unknown>\n#8 0x56368a8be12b <unknown>\n#9 0x56368a8c20c7 <unknown>\n#10 0x56368a8ab6cc <unknown>\n#11 0x56368a8c2c47 <unknown>\n#12 0x56368a89067f <unknown>\n#13 0x56368a8e1288 <unknown>\n#14 0x56368a8e1450 <unknown>\n#15 0x56368a8f1076 <unknown>\n#16 0x7f6266e9ca94 <unknown>\n#17 0x7f6266f29c3c <unknown>","time":{"start":1736552065847,"stop":1736552067667,"duration":1820}},{"uid":"e49f19eafb566b76","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/284//#testresult/e49f19eafb566b76","status":"broken","statusDetails":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: 'url' must be a string\n  (Session info: chrome=131.0.6778.204)\nStacktrace:\n#0 0x555b37dea1fa <unknown>\n#1 0x555b378fa810 <unknown>\n#2 0x555b3798cd13 <unknown>\n#3 0x555b3796d582 <unknown>\n#4 0x555b3798c007 <unknown>\n#5 0x555b3796d323 <unknown>\n#6 0x555b3793bde0 <unknown>\n#7 0x555b3793cdbe <unknown>\n#8 0x555b37db612b <unknown>\n#9 0x555b37dba0c7 <unknown>\n#10 0x555b37da36cc <unknown>\n#11 0x555b37dbac47 <unknown>\n#12 0x555b37d8867f <unknown>\n#13 0x555b37dd9288 <unknown>\n#14 0x555b37dd9450 <unknown>\n#15 0x555b37de9076 <unknown>\n#16 0x7f649aa9ca94 <unknown>\n#17 0x7f649ab29c3c <unknown>","time":{"start":1736465720616,"stop":1736465721644,"duration":1028}},{"uid":"f39444145f07e8dd","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/283//#testresult/f39444145f07e8dd","status":"broken","statusDetails":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: 'url' must be a string\n  (Session info: chrome=131.0.6778.204)\nStacktrace:\n#0 0x55820dd031fa <unknown>\n#1 0x55820d813810 <unknown>\n#2 0x55820d8a5d13 <unknown>\n#3 0x55820d886582 <unknown>\n#4 0x55820d8a5007 <unknown>\n#5 0x55820d886323 <unknown>\n#6 0x55820d854de0 <unknown>\n#7 0x55820d855dbe <unknown>\n#8 0x55820dccf12b <unknown>\n#9 0x55820dcd30c7 <unknown>\n#10 0x55820dcbc6cc <unknown>\n#11 0x55820dcd3c47 <unknown>\n#12 0x55820dca167f <unknown>\n#13 0x55820dcf2288 <unknown>\n#14 0x55820dcf2450 <unknown>\n#15 0x55820dd02076 <unknown>\n#16 0x7fdd3ba9ca94 <unknown>\n#17 0x7fdd3bb29c3c <unknown>","time":{"start":1736379354570,"stop":1736379355650,"duration":1080}},{"uid":"f5efeaca48fecf94","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/282//#testresult/f5efeaca48fecf94","status":"broken","statusDetails":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: 'url' must be a string\n  (Session info: chrome=131.0.6778.139)\nStacktrace:\n#0 0x55f2b03301fa <unknown>\n#1 0x55f2afe40810 <unknown>\n#2 0x55f2afed2d13 <unknown>\n#3 0x55f2afeb3582 <unknown>\n#4 0x55f2afed2007 <unknown>\n#5 0x55f2afeb3323 <unknown>\n#6 0x55f2afe81de0 <unknown>\n#7 0x55f2afe82dbe <unknown>\n#8 0x55f2b02fc12b <unknown>\n#9 0x55f2b03000c7 <unknown>\n#10 0x55f2b02e96cc <unknown>\n#11 0x55f2b0300c47 <unknown>\n#12 0x55f2b02ce67f <unknown>\n#13 0x55f2b031f288 <unknown>\n#14 0x55f2b031f450 <unknown>\n#15 0x55f2b032f076 <unknown>\n#16 0x7ff5c589ca94 <unknown>\n#17 0x7ff5c5929c3c <unknown>","time":{"start":1736294443890,"stop":1736294444919,"duration":1029}},{"uid":"d1b8f5f9e80c7af1","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/278//#testresult/d1b8f5f9e80c7af1","status":"broken","statusDetails":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: 'url' must be a string\n  (Session info: chrome=131.0.6778.139)\nStacktrace:\n#0 0x55d5cda158fa <unknown>\n#1 0x55d5cd526d20 <unknown>\n#2 0x55d5cd5b9273 <unknown>\n#3 0x55d5cd599af2 <unknown>\n#4 0x55d5cd5b8560 <unknown>\n#5 0x55d5cd599893 <unknown>\n#6 0x55d5cd56830d <unknown>\n#7 0x55d5cd56932e <unknown>\n#8 0x55d5cd9e200b <unknown>\n#9 0x55d5cd9e5f97 <unknown>\n#10 0x55d5cd9ce71c <unknown>\n#11 0x55d5cd9e6b17 <unknown>\n#12 0x55d5cd9b36cf <unknown>\n#13 0x55d5cda046b8 <unknown>\n#14 0x55d5cda04880 <unknown>\n#15 0x55d5cda14776 <unknown>\n#16 0x7fd54529ca94 <unknown>\n#17 0x7fd545329c3c <unknown>","time":{"start":1735947378539,"stop":1735947379567,"duration":1028}},{"uid":"20acaed4335cda","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/277//#testresult/20acaed4335cda","status":"broken","statusDetails":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: 'url' must be a string\n  (Session info: chrome=131.0.6778.139)\nStacktrace:\n#0 0x564ada7d08fa <unknown>\n#1 0x564ada2e1d20 <unknown>\n#2 0x564ada374273 <unknown>\n#3 0x564ada354af2 <unknown>\n#4 0x564ada373560 <unknown>\n#5 0x564ada354893 <unknown>\n#6 0x564ada32330d <unknown>\n#7 0x564ada32432e <unknown>\n#8 0x564ada79d00b <unknown>\n#9 0x564ada7a0f97 <unknown>\n#10 0x564ada78971c <unknown>\n#11 0x564ada7a1b17 <unknown>\n#12 0x564ada76e6cf <unknown>\n#13 0x564ada7bf6b8 <unknown>\n#14 0x564ada7bf880 <unknown>\n#15 0x564ada7cf776 <unknown>\n#16 0x7f24b7c9ca94 <unknown>\n#17 0x7f24b7d29c3c <unknown>","time":{"start":1735861723161,"stop":1735861724189,"duration":1028}}]},"tags":["us_55","bug_621"]},"source":"1cdacd95ba26ed39.json","parameterValues":["['', 'eu']","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoAuth'","'Chrome'"]}