{"uid":"d60c9f4c3c604907","name":"test_061[Chrome-test001.miketar+1@gmail.com-Qwer1234-!@#$-ru-Bitcoin Gold-NoReg-ua]","fullName":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test.TestManualDetectedBugs#test_061","historyId":"2749309fd9d4a910b7beec39925ba583","time":{"start":1721137990097,"stop":1721137990097,"duration":0},"description":"\n        Check: presence of the sidebar \"Crypto Trading Guide\" on the \"Bitcoin Gold\" and \"Cryptocurrencies vs. Stocks:\n        What's the Difference?\" pages.\n        Language: EN, DE, ZH, RU, ES,IT, PL\n        License: CYSEC, SCB, ASIC\n        Author: Kasila\n        ","descriptionHtml":"<pre><code>    Check: presence of the sidebar &quot;Crypto Trading Guide&quot; on the &quot;Bitcoin Gold&quot; and &quot;Cryptocurrencies vs. Stocks:\n    What's the Difference?&quot; pages.\n    Language: EN, DE, ZH, RU, ES,IT, PL\n    License: CYSEC, SCB, ASIC\n    Author: Kasila\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome=126.0.6478.126)\nStacktrace:\n#0 0x55a5a0c46c7a <unknown>\n#1 0x55a5a0929e2c <unknown>\n#2 0x55a5a09111a6 <unknown>\n#3 0x55a5a0910d85 <unknown>\n#4 0x55a5a090ecc6 <unknown>\n#5 0x55a5a090f33f <unknown>\n#6 0x55a5a091fc67 <unknown>\n#7 0x55a5a09361be <unknown>\n#8 0x55a5a093b8ab <unknown>\n#9 0x55a5a090fa8a <unknown>\n#10 0x55a5a093603e <unknown>\n#11 0x55a5a09b81cc <unknown>\n#12 0x55a5a0999363 <unknown>\n#13 0x55a5a0969247 <unknown>\n#14 0x55a5a0969b9e <unknown>\n#15 0x55a5a0c0d24b <unknown>\n#16 0x55a5a0c112f1 <unknown>\n#17 0x55a5a0bf8afe <unknown>\n#18 0x55a5a0c11e52 <unknown>\n#19 0x55a5a0bdd79f <unknown>\n#20 0x55a5a0c36638 <unknown>\n#21 0x55a5a0c36810 <unknown>\n#22 0x55a5a0c45dac <unknown>\n#23 0x7ff895694ac3 <unknown>","statusTrace":"request = <SubRequest 'd' for <Function test_005[Chrome-test001.miketar+1@gmail.com-Qwer1234-!@#$-Auth-gb-]>>\n\n    @pytest.fixture(\n        # scope=\"module\",\n        scope=\"session\",\n        params=[\n            \"Chrome\",\n            # \"Edge\",\n            # \"Firefox\",\n            # \"Safari\",\n        ],\n        autouse=True,\n        # ids=pre_go,\n    )\n    def d(request):\n        \"\"\"WebDriver Initialization\"\"\"\n        print(f'\\n{datetime.now()}   *** autouse fixture {request.param} ***\\n')\n    \n        # проверка аргументов командной строки\n        if request.config.getoption(\"browser_name\"):\n            test_browser = request.config.getoption(\"browser_name\")\n        else:\n            test_browser = request.param\n    \n        d = None\n        if test_browser == \"Chrome\":\n>           d = init_remote_driver_chrome()\n\nconftest.py:278: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:334: in init_remote_driver_chrome\n    print(driver.get_window_size())\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:877: in get_window_size\n    size = self.get_window_rect()\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:927: in get_window_rect\n    return self.execute(Command.GET_WINDOW_RECT)[\"value\"]\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fca5cfcf680>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x55a5a0c36810 \\\\u003Cunknown>\\\\n#22 0x55a5a0c45dac \\\\u003Cunknown>\\\\n#23 0x7ff895694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome=126.0.6478.126)\nE       Stacktrace:\nE       #0 0x55a5a0c46c7a <unknown>\nE       #1 0x55a5a0929e2c <unknown>\nE       #2 0x55a5a09111a6 <unknown>\nE       #3 0x55a5a0910d85 <unknown>\nE       #4 0x55a5a090ecc6 <unknown>\nE       #5 0x55a5a090f33f <unknown>\nE       #6 0x55a5a091fc67 <unknown>\nE       #7 0x55a5a09361be <unknown>\nE       #8 0x55a5a093b8ab <unknown>\nE       #9 0x55a5a090fa8a <unknown>\nE       #10 0x55a5a093603e <unknown>\nE       #11 0x55a5a09b81cc <unknown>\nE       #12 0x55a5a0999363 <unknown>\nE       #13 0x55a5a0969247 <unknown>\nE       #14 0x55a5a0969b9e <unknown>\nE       #15 0x55a5a0c0d24b <unknown>\nE       #16 0x55a5a0c112f1 <unknown>\nE       #17 0x55a5a0bf8afe <unknown>\nE       #18 0x55a5a0c11e52 <unknown>\nE       #19 0x55a5a0bdd79f <unknown>\nE       #20 0x55a5a0c36638 <unknown>\nE       #21 0x55a5a0c36810 <unknown>\nE       #22 0x55a5a0c45dac <unknown>\nE       #23 0x7ff895694ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1721137658261,"stop":1721137986788,"duration":328527},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome=126.0.6478.126)\nStacktrace:\n#0 0x55a5a0c46c7a <unknown>\n#1 0x55a5a0929e2c <unknown>\n#2 0x55a5a09111a6 <unknown>\n#3 0x55a5a0910d85 <unknown>\n#4 0x55a5a090ecc6 <unknown>\n#5 0x55a5a090f33f <unknown>\n#6 0x55a5a091fc67 <unknown>\n#7 0x55a5a09361be <unknown>\n#8 0x55a5a093b8ab <unknown>\n#9 0x55a5a090fa8a <unknown>\n#10 0x55a5a093603e <unknown>\n#11 0x55a5a09b81cc <unknown>\n#12 0x55a5a0999363 <unknown>\n#13 0x55a5a0969247 <unknown>\n#14 0x55a5a0969b9e <unknown>\n#15 0x55a5a0c0d24b <unknown>\n#16 0x55a5a0c112f1 <unknown>\n#17 0x55a5a0bf8afe <unknown>\n#18 0x55a5a0c11e52 <unknown>\n#19 0x55a5a0bdd79f <unknown>\n#20 0x55a5a0c36638 <unknown>\n#21 0x55a5a0c36810 <unknown>\n#22 0x55a5a0c45dac <unknown>\n#23 0x7ff895694ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1125, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py\", line 880, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/conftest.py\", line 278, in d\n    d = init_remote_driver_chrome()\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestCapitalComPySe/TestCapitalComPySe/conftest.py\", line 334, in init_remote_driver_chrome\n    print(driver.get_window_size())\n          ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 877, in get_window_size\n    size = self.get_window_rect()\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 927, in get_window_rect\n    return self.execute(Command.GET_WINDOW_RECT)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/testcapitalcompyse-CcJ6hTD8-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"tag","value":"test_061"},{"name":"tag","value":"us_55"},{"name":"parentSuite","value":"tests.US_55_ReTestsManual.tassobaccato"},{"name":"suite","value":"US_55-tassobaccato_ReTestsManual_test"},{"name":"subSuite","value":"TestManualDetectedBugs"},{"name":"host","value":"fv-az1014-774"},{"name":"thread","value":"3586-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.US_55_ReTestsManual.tassobaccato.US_55-tassobaccato_ReTestsManual_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cur_country","value":"'ua'"},{"name":"cur_language_2_rnd_from_7","value":"'ru'"},{"name":"cur_login","value":"'test001.miketar+1@gmail.com'"},{"name":"cur_password","value":"'Qwer1234-!@#$'"},{"name":"cur_role","value":"'NoReg'"},{"name":"d","value":"'Chrome'"},{"name":"sidebar_item","value":"'Bitcoin Gold'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"abfff5aa720c3f76","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/50//#testresult/abfff5aa720c3f76","status":"failed","statusDetails":"Failed: #Bug # 55!061 Sidebar is absent on the Bitcoin Gold page","time":{"start":1721042770621,"stop":1721042787354,"duration":16733}},{"uid":"78ec2fa9004d5fef","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/46//#testresult/78ec2fa9004d5fef","status":"failed","statusDetails":"Failed: #Bug # 55!061 Sidebar is absent on the Bitcoin Gold page","time":{"start":1720648828872,"stop":1720648844950,"duration":16078}},{"uid":"985716aff178d286","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/42//#testresult/985716aff178d286","status":"failed","statusDetails":"Failed: #Bug # 55!061 Sidebar is absent on the Bitcoin Gold page","time":{"start":1720440161857,"stop":1720440177975,"duration":16118}},{"uid":"57583517d35d2677","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/41//#testresult/57583517d35d2677","status":"failed","statusDetails":"Failed: #Bug # 55!061 Sidebar is absent on the Bitcoin Gold page","time":{"start":1720418114787,"stop":1720418130813,"duration":16026}},{"uid":"2520b008137b77c2","reportUrl":"https://AlexTomAQA.github.io/TestCapitalComPySe/39//#testresult/2520b008137b77c2","status":"broken","statusDetails":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"a[href*='trade-bitcoingold']\"}\n  (Session info: chrome=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x557f69109c7a <unknown>\n#1 0x557f68dece2c <unknown>\n#2 0x557f68e39661 <unknown>\n#3 0x557f68e39751 <unknown>\n#4 0x557f68e7df64 <unknown>\n#5 0x557f68e5c5ed <unknown>\n#6 0x557f68e7b303 <unknown>\n#7 0x557f68e5c363 <unknown>\n#8 0x557f68e2c247 <unknown>\n#9 0x557f68e2cb9e <unknown>\n#10 0x557f690d024b <unknown>\n#11 0x557f690d42f1 <unknown>\n#12 0x557f690bbafe <unknown>\n#13 0x557f690d4e52 <unknown>\n#14 0x557f690a079f <unknown>\n#15 0x557f690f9638 <unknown>\n#16 0x557f690f9810 <unknown>\n#17 0x557f69108dac <unknown>\n#18 0x7fc1a5e94ac3 <unknown>","time":{"start":1720283266804,"stop":1720283282161,"duration":15357}}]},"tags":["test_061","us_55"]},"source":"d60c9f4c3c604907.json","parameterValues":["'ua'","'ru'","'test001.miketar+1@gmail.com'","'Qwer1234-!@#$'","'NoReg'","'Chrome'","'Bitcoin Gold'"]}